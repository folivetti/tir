"Log((9.758476681748524e58) + (((2.73055946449013e58) * (Id((((x2)^(1)) * ((x0)^(0))) * ((x4)^(0))))) + (((-3.805619774760011e54) * (Id((x0)^(1)))) + ((-3.1065160991485623e60) * (Tanh((x3)^(-1)))))))","[[9.758476681748524e58,2.73055946449013e58,-3.805619774760011e54,-3.1065160991485623e60]]","np.log((9.758476681748524e58) + (((2.73055946449013e58) * (((((x[:,2])**(1)) * ((x[:,0])**(0))) * ((x[:,4])**(0))))) + (((-3.805619774760011e54) * (((x[:,0])**(1)))) + ((-3.1065160991485623e60) * (np.tanh((x[:,3])**(-1)))))))"
"Id((126.50042375930174) + ((-167.67784067226688) * (Tanh(((x4)^(1)) * ((x3)^(0))))))","[[126.50042375930174,-167.67784067226688]]","((126.50042375930174) + ((-167.67784067226688) * (np.tanh(((x[:,4])**(1)) * ((x[:,3])**(0))))))"
"Log(2.349382390564392e58)","[[2.349382390564392e58]]","np.log(2.349382390564392e58)"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Id((124.0811882007792) + ((102.10054537984055) * (Id(((((x0)^(-1)) * ((x3)^(-1))) * ((x2)^(0))) * ((x4)^(-1))))))","[[124.0811882007792,102.10054537984055]]","((124.0811882007792) + ((102.10054537984055) * ((((((x[:,0])**(-1)) * ((x[:,3])**(-1))) * ((x[:,2])**(0))) * ((x[:,4])**(-1))))))"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Id((124.08032270059024) + ((102.28622973123204) * (Tanh(((((x4)^(-1)) * ((x2)^(0))) * ((x3)^(-1))) * ((x0)^(-1))))))","[[124.08032270059024,102.28622973123204]]","((124.08032270059024) + ((102.28622973123204) * (np.tanh(((((x[:,4])**(-1)) * ((x[:,2])**(0))) * ((x[:,3])**(-1))) * ((x[:,0])**(-1))))))"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Id((62.30983111480863) + ((62.30983111480863) * (Tanh(((((x2)^(1)) * ((x1)^(0))) * ((x0)^(1))) * ((x3)^(1))))))","[[62.30983111480863,62.30983111480863]]","((62.30983111480863) + ((62.30983111480863) * (np.tanh(((((x[:,2])**(1)) * ((x[:,1])**(0))) * ((x[:,0])**(1))) * ((x[:,3])**(1))))))"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Exp((4.813923244389094) + ((9.126210748286155) * (Tanh((((((x4)^(0)) * ((x1)^(0))) * ((x3)^(0))) * ((x0)^(-1))) * ((x2)^(0))))))","[[4.813923244389094,9.126210748286155]]","np.exp((4.813923244389094) + ((9.126210748286155) * (np.tanh((((((x[:,4])**(0)) * ((x[:,1])**(0))) * ((x[:,3])**(0))) * ((x[:,0])**(-1))) * ((x[:,2])**(0))))))"
"Exp((4.812889815546494) + (((13.67210279583106) * (Tanh(((x4)^(0)) * ((x0)^(-1))))) + ((-109682.03390871802) * (Id(((((x2)^(1)) * ((x0)^(-1))) * ((x3)^(-1))) * ((x4)^(1)))))))","[[4.812889815546494,13.67210279583106,-109682.03390871802]]","np.exp((4.812889815546494) + (((13.67210279583106) * (np.tanh(((x[:,4])**(0)) * ((x[:,0])**(-1))))) + ((-109682.03390871802) * ((((((x[:,2])**(1)) * ((x[:,0])**(-1))) * ((x[:,3])**(-1))) * ((x[:,4])**(1)))))))"
"Id((62.30983111480863) + ((62.30983111480863) * (Id(((x1)^(0)) * ((x4)^(0))))))","[[62.30983111480863,62.30983111480863]]","((62.30983111480863) + ((62.30983111480863) * ((((x[:,1])**(0)) * ((x[:,4])**(0))))))"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Id(124.61966222961726)","[[124.61966222961726]]","(124.61966222961726)"
"Id((-2.971997970644454e8) + (((0.3986668654064049) * (Sin((((x3)^(0)) * ((x0)^(1))) * ((x4)^(0))))) + (((2.779362216404735e-2) * (Id((((x0)^(0)) * ((x2)^(0))) * ((x3)^(1))))) + (((-107.92781980391784) * (Sin(((((x3)^(0)) * ((x2)^(-1))) * ((x0)^(-1))) * ((x1)^(0))))) + (((-2.971998047660615e8) * (Id((((x0)^(0)) * ((x1)^(0))) * ((x3)^(0))))) + (((249272.73394024512) * (Cos((((x2)^(1)) * ((x1)^(0))) * ((x3)^(-1))))) + (((2742.4860472264063) * (Exp(((x3)^(0)) * ((x0)^(-1))))) + (((-9.856714671845558e-4) * (Id(((x2)^(0)) * ((x0)^(1))))) + (((-10.01329076750198) * (Tanh((((((x2)^(0)) * ((x1)^(1))) * ((x4)^(1))) * ((x3)^(0))) * ((x0)^(0))))) + (((5.946043850440599) * (Cos((((x0)^(0)) * ((x2)^(1))) * ((x1)^(1))))) + ((5.941477105858389e8) * (Cos((((x1)^(0)) * ((x0)^(-1))) * ((x3)^(-1)))))))))))))))","[[-2.971997970644454e8,0.3986668654064049,2.779362216404735e-2,-107.92781980391784,-2.971998047660615e8,249272.73394024512,2742.4860472264063,-9.856714671845558e-4,-10.01329076750198,5.946043850440599,5.941477105858389e8]]","((-2.971997970644454e8) + (((0.3986668654064049) * (np.sin((((x[:,3])**(0)) * ((x[:,0])**(1))) * ((x[:,4])**(0))))) + (((2.779362216404735e-2) * (((((x[:,0])**(0)) * ((x[:,2])**(0))) * ((x[:,3])**(1))))) + (((-107.92781980391784) * (np.sin(((((x[:,3])**(0)) * ((x[:,2])**(-1))) * ((x[:,0])**(-1))) * ((x[:,1])**(0))))) + (((-2.971998047660615e8) * (((((x[:,0])**(0)) * ((x[:,1])**(0))) * ((x[:,3])**(0))))) + (((249272.73394024512) * (np.cos((((x[:,2])**(1)) * ((x[:,1])**(0))) * ((x[:,3])**(-1))))) + (((2742.4860472264063) * (np.exp(((x[:,3])**(0)) * ((x[:,0])**(-1))))) + (((-9.856714671845558e-4) * ((((x[:,2])**(0)) * ((x[:,0])**(1))))) + (((-10.01329076750198) * (np.tanh((((((x[:,2])**(0)) * ((x[:,1])**(1))) * ((x[:,4])**(1))) * ((x[:,3])**(0))) * ((x[:,0])**(0))))) + (((5.946043850440599) * (np.cos((((x[:,0])**(0)) * ((x[:,2])**(1))) * ((x[:,1])**(1))))) + ((5.941477105858389e8) * (np.cos((((x[:,1])**(0)) * ((x[:,0])**(-1))) * ((x[:,3])**(-1)))))))))))))))"
"Id(((14595.432803105099) + (((-82.70119123090569) * (Id((((((x2)^(0)) * ((x1)^(1))) * ((x3)^(-1))) * ((x4)^(-1))) * ((x0)^(-1))))) + (((-1.078413860304496e-3) * (Id((((x1)^(0)) * ((x0)^(1))) * ((x2)^(0))))) + (((-3754.2995765583946) * (Tanh((x4)^(1)))) + (((-31.244627390016728) * (Exp(((x2)^(1)) * ((x1)^(0))))) + (((-1458.7099216447716) * (Sin((((((x0)^(-1)) * ((x4)^(1))) * ((x1)^(0))) * ((x3)^(0))) * ((x2)^(-1))))) + (((-17805.413366070163) * (Cos((((((x3)^(-1)) * ((x2)^(1))) * ((x0)^(-1))) * ((x4)^(-1))) * ((x1)^(1))))) + (((3377.2228352712214) * (Exp((((x1)^(0)) * ((x4)^(1))) * ((x0)^(0))))) + ((1828.3692908432038) * (Id(((x0)^(-1)) * ((x4)^(0))))))))))))) / ((1.0) + (((-1.0042230930630905e-3) * (Sin((((((x1)^(1)) * ((x0)^(0))) * ((x4)^(0))) * ((x2)^(-1))) * ((x3)^(1))))) + (((-4.6490873525836633e-4) * (Cos((x0)^(1)))) + ((-7.43972965645108e-4) * (Cos(((((x3)^(-1)) * ((x0)^(1))) * ((x1)^(1))) * ((x4)^(0)))))))))","[[14595.432803105099,-82.70119123090569,-1.078413860304496e-3,-3754.2995765583946,-31.244627390016728,-1458.7099216447716,-17805.413366070163,3377.2228352712214,1828.3692908432038,-1.0042230930630905e-3,-4.6490873525836633e-4,-7.43972965645108e-4]]","(((14595.432803105099) + (((-82.70119123090569) * (((((((x[:,2])**(0)) * ((x[:,1])**(1))) * ((x[:,3])**(-1))) * ((x[:,4])**(-1))) * ((x[:,0])**(-1))))) + (((-1.078413860304496e-3) * (((((x[:,1])**(0)) * ((x[:,0])**(1))) * ((x[:,2])**(0))))) + (((-3754.2995765583946) * (np.tanh((x[:,4])**(1)))) + (((-31.244627390016728) * (np.exp(((x[:,2])**(1)) * ((x[:,1])**(0))))) + (((-1458.7099216447716) * (np.sin((((((x[:,0])**(-1)) * ((x[:,4])**(1))) * ((x[:,1])**(0))) * ((x[:,3])**(0))) * ((x[:,2])**(-1))))) + (((-17805.413366070163) * (np.cos((((((x[:,3])**(-1)) * ((x[:,2])**(1))) * ((x[:,0])**(-1))) * ((x[:,4])**(-1))) * ((x[:,1])**(1))))) + (((3377.2228352712214) * (np.exp((((x[:,1])**(0)) * ((x[:,4])**(1))) * ((x[:,0])**(0))))) + ((1828.3692908432038) * ((((x[:,0])**(-1)) * ((x[:,4])**(0))))))))))))) / ((1.0) + (((-1.0042230930630905e-3) * (np.sin((((((x[:,1])**(1)) * ((x[:,0])**(0))) * ((x[:,4])**(0))) * ((x[:,2])**(-1))) * ((x[:,3])**(1))))) + (((-4.6490873525836633e-4) * (np.cos((x[:,0])**(1)))) + ((-7.43972965645108e-4) * (np.cos(((((x[:,3])**(-1)) * ((x[:,0])**(1))) * ((x[:,1])**(1))) * ((x[:,4])**(0)))))))))"
"Id((128.4279180945123) / ((1.0) + (((-5.37432420209083e-3) * (Cos((((((x2)^(0)) * ((x3)^(1))) * ((x1)^(1))) * ((x0)^(1))) * ((x4)^(-1))))) + (((2.960507161589712e-3) * (Id((((x3)^(-1)) * ((x2)^(1))) * ((x0)^(1))))) + (((-2.5856729071665252e-2) * (Sin((((x4)^(1)) * ((x2)^(1))) * ((x0)^(1))))) + (((1.7153272985329289) * (Id((((x2)^(0)) * ((x0)^(0))) * ((x4)^(1))))) + ((2.0324094120657832e-5) * (Sin(((((x1)^(1)) * ((x2)^(-1))) * ((x3)^(1))) * ((x4)^(-1)))))))))))","[[128.4279180945123,-5.37432420209083e-3,2.960507161589712e-3,-2.5856729071665252e-2,1.7153272985329289,2.0324094120657832e-5]]","((128.4279180945123) / ((1.0) + (((-5.37432420209083e-3) * (np.cos((((((x[:,2])**(0)) * ((x[:,3])**(1))) * ((x[:,1])**(1))) * ((x[:,0])**(1))) * ((x[:,4])**(-1))))) + (((2.960507161589712e-3) * (((((x[:,3])**(-1)) * ((x[:,2])**(1))) * ((x[:,0])**(1))))) + (((-2.5856729071665252e-2) * (np.sin((((x[:,4])**(1)) * ((x[:,2])**(1))) * ((x[:,0])**(1))))) + (((1.7153272985329289) * (((((x[:,2])**(0)) * ((x[:,0])**(0))) * ((x[:,4])**(1))))) + ((2.0324094120657832e-5) * (np.sin(((((x[:,1])**(1)) * ((x[:,2])**(-1))) * ((x[:,3])**(1))) * ((x[:,4])**(-1)))))))))))"
"Exp((-5590748.883473658) + (((0.1386588886043592) * (Tanh((((((x4)^(-1)) * ((x3)^(0))) * ((x1)^(0))) * ((x2)^(-1))) * ((x0)^(-1))))) + (((5583826.3128364) * (Cos(((x0)^(-1)) * ((x3)^(-1))))) + (((6927.405346583938) * (Cos((((((x2)^(-1)) * ((x4)^(0))) * ((x1)^(0))) * ((x3)^(-1))) * ((x0)^(-1))))) + (((-1.8063159895119266e-7) * (Id((((x2)^(-1)) * ((x4)^(-1))) * ((x1)^(1))))) + (((-0.8099610806612347) * (Tanh((((((x3)^(1)) * ((x1)^(1))) * ((x2)^(0))) * ((x0)^(1))) * ((x4)^(-1))))) + (((-0.10288515203851412) * (Exp((((((x3)^(1)) * ((x2)^(-1))) * ((x4)^(1))) * ((x0)^(-1))) * ((x1)^(0))))) + ((0.8239488922302687) * (Tanh((((((x4)^(-1)) * ((x1)^(1))) * ((x0)^(-1))) * ((x2)^(0))) * ((x3)^(1))))))))))))","[[-5590748.883473658,0.1386588886043592,5583826.3128364,6927.405346583938,-1.8063159895119266e-7,-0.8099610806612347,-0.10288515203851412,0.8239488922302687]]","np.exp((-5590748.883473658) + (((0.1386588886043592) * (np.tanh((((((x[:,4])**(-1)) * ((x[:,3])**(0))) * ((x[:,1])**(0))) * ((x[:,2])**(-1))) * ((x[:,0])**(-1))))) + (((5583826.3128364) * (np.cos(((x[:,0])**(-1)) * ((x[:,3])**(-1))))) + (((6927.405346583938) * (np.cos((((((x[:,2])**(-1)) * ((x[:,4])**(0))) * ((x[:,1])**(0))) * ((x[:,3])**(-1))) * ((x[:,0])**(-1))))) + (((-1.8063159895119266e-7) * (((((x[:,2])**(-1)) * ((x[:,4])**(-1))) * ((x[:,1])**(1))))) + (((-0.8099610806612347) * (np.tanh((((((x[:,3])**(1)) * ((x[:,1])**(1))) * ((x[:,2])**(0))) * ((x[:,0])**(1))) * ((x[:,4])**(-1))))) + (((-0.10288515203851412) * (np.exp((((((x[:,3])**(1)) * ((x[:,2])**(-1))) * ((x[:,4])**(1))) * ((x[:,0])**(-1))) * ((x[:,1])**(0))))) + ((0.8239488922302687) * (np.tanh((((((x[:,4])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))) * ((x[:,2])**(0))) * ((x[:,3])**(1))))))))))))"
"Id((608.0432664002833) + (((-0.8453858599775232) * (Id((((((x0)^(1)) * ((x1)^(0))) * ((x4)^(1))) * ((x3)^(0))) * ((x2)^(1))))) + (((102.22619665162952) * (Tanh((((x1)^(1)) * ((x0)^(-1))) * ((x3)^(0))))) + (((-652.3095519300598) * (Exp(((((x3)^(-1)) * ((x1)^(0))) * ((x2)^(1))) * ((x4)^(0))))) + (((-8.96927065877663) * (Tanh((((x0)^(0)) * ((x4)^(1))) * ((x1)^(1))))) + (((328.5271789037845) * (Cos((((((x2)^(0)) * ((x3)^(0))) * ((x4)^(0))) * ((x1)^(0))) * ((x0)^(0))))) + (((-3.4278430478166317) * (Cos((((x0)^(-1)) * ((x1)^(1))) * ((x3)^(1))))) + (((-136.21617382300997) * (Sin((((((x4)^(0)) * ((x0)^(-1))) * ((x1)^(0))) * ((x3)^(0))) * ((x2)^(-1))))) + ((1.0558814010969003e-3) * (Id(((x2)^(-1)) * ((x3)^(1)))))))))))))","[[608.0432664002833,-0.8453858599775232,102.22619665162952,-652.3095519300598,-8.96927065877663,328.5271789037845,-3.4278430478166317,-136.21617382300997,1.0558814010969003e-3]]","((608.0432664002833) + (((-0.8453858599775232) * (((((((x[:,0])**(1)) * ((x[:,1])**(0))) * ((x[:,4])**(1))) * ((x[:,3])**(0))) * ((x[:,2])**(1))))) + (((102.22619665162952) * (np.tanh((((x[:,1])**(1)) * ((x[:,0])**(-1))) * ((x[:,3])**(0))))) + (((-652.3095519300598) * (np.exp(((((x[:,3])**(-1)) * ((x[:,1])**(0))) * ((x[:,2])**(1))) * ((x[:,4])**(0))))) + (((-8.96927065877663) * (np.tanh((((x[:,0])**(0)) * ((x[:,4])**(1))) * ((x[:,1])**(1))))) + (((328.5271789037845) * (np.cos((((((x[:,2])**(0)) * ((x[:,3])**(0))) * ((x[:,4])**(0))) * ((x[:,1])**(0))) * ((x[:,0])**(0))))) + (((-3.4278430478166317) * (np.cos((((x[:,0])**(-1)) * ((x[:,1])**(1))) * ((x[:,3])**(1))))) + (((-136.21617382300997) * (np.sin((((((x[:,4])**(0)) * ((x[:,0])**(-1))) * ((x[:,1])**(0))) * ((x[:,3])**(0))) * ((x[:,2])**(-1))))) + ((1.0558814010969003e-3) * ((((x[:,2])**(-1)) * ((x[:,3])**(1)))))))))))))"
"Exp(((4.893105236856056) + (((11.6645460696365) * (Id((((((x1)^(1)) * ((x3)^(-1))) * ((x2)^(-1))) * ((x0)^(-1))) * ((x4)^(1))))) + (((-1.6306681097479392) * (Sin(((x4)^(0)) * ((x3)^(-1))))) + (((-9.143129846040288e-2) * (Id(((x2)^(1)) * ((x1)^(0))))) + ((-2049.6981640144686) * (Sin((((((x0)^(-1)) * ((x4)^(1))) * ((x2)^(-1))) * ((x3)^(-1))) * ((x1)^(0))))))))) / ((1.0) + (((1.7029328481384845e-3) * (Id((((((x3)^(0)) * ((x4)^(1))) * ((x0)^(1))) * ((x1)^(0))) * ((x2)^(1))))) + (((-54.32653861901828) * (Id((((x1)^(0)) * ((x3)^(-1))) * ((x0)^(-1))))) + ((-215.057190463762) * (Tanh((((((x2)^(0)) * ((x0)^(-1))) * ((x3)^(-1))) * ((x1)^(1))) * ((x4)^(1)))))))))","[[4.893105236856056,11.6645460696365,-1.6306681097479392,-9.143129846040288e-2,-2049.6981640144686,1.7029328481384845e-3,-54.32653861901828,-215.057190463762]]","np.exp(((4.893105236856056) + (((11.6645460696365) * (((((((x[:,1])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(-1))) * ((x[:,0])**(-1))) * ((x[:,4])**(1))))) + (((-1.6306681097479392) * (np.sin(((x[:,4])**(0)) * ((x[:,3])**(-1))))) + (((-9.143129846040288e-2) * ((((x[:,2])**(1)) * ((x[:,1])**(0))))) + ((-2049.6981640144686) * (np.sin((((((x[:,0])**(-1)) * ((x[:,4])**(1))) * ((x[:,2])**(-1))) * ((x[:,3])**(-1))) * ((x[:,1])**(0))))))))) / ((1.0) + (((1.7029328481384845e-3) * (((((((x[:,3])**(0)) * ((x[:,4])**(1))) * ((x[:,0])**(1))) * ((x[:,1])**(0))) * ((x[:,2])**(1))))) + (((-54.32653861901828) * (((((x[:,1])**(0)) * ((x[:,3])**(-1))) * ((x[:,0])**(-1))))) + ((-215.057190463762) * (np.tanh((((((x[:,2])**(0)) * ((x[:,0])**(-1))) * ((x[:,3])**(-1))) * ((x[:,1])**(1))) * ((x[:,4])**(1)))))))))"
"Id((75.8253729675136) + (((-13889.39606694122) * (Sin((((x3)^(-1)) * ((x4)^(1))) * ((x0)^(0))))) + (((-6.940187006023707e-3) * (Id(((((x0)^(1)) * ((x2)^(1))) * ((x3)^(0))) * ((x1)^(0))))) + (((-0.452075799275633) * (Sin(((((x3)^(0)) * ((x4)^(0))) * ((x1)^(1))) * ((x2)^(1))))) + (((248.15479971933473) * (Sin((((x1)^(1)) * ((x4)^(1))) * ((x3)^(-1))))) + (((54.35506731637172) * (Tanh((x2)^(-1)))) + ((0.3077766902534873) * (Cos(((((x4)^(-1)) * ((x1)^(0))) * ((x2)^(0))) * ((x0)^(1)))))))))))","[[75.8253729675136,-13889.39606694122,-6.940187006023707e-3,-0.452075799275633,248.15479971933473,54.35506731637172,0.3077766902534873]]","((75.8253729675136) + (((-13889.39606694122) * (np.sin((((x[:,3])**(-1)) * ((x[:,4])**(1))) * ((x[:,0])**(0))))) + (((-6.940187006023707e-3) * ((((((x[:,0])**(1)) * ((x[:,2])**(1))) * ((x[:,3])**(0))) * ((x[:,1])**(0))))) + (((-0.452075799275633) * (np.sin(((((x[:,3])**(0)) * ((x[:,4])**(0))) * ((x[:,1])**(1))) * ((x[:,2])**(1))))) + (((248.15479971933473) * (np.sin((((x[:,1])**(1)) * ((x[:,4])**(1))) * ((x[:,3])**(-1))))) + (((54.35506731637172) * (np.tanh((x[:,2])**(-1)))) + ((0.3077766902534873) * (np.cos(((((x[:,4])**(-1)) * ((x[:,1])**(0))) * ((x[:,2])**(0))) * ((x[:,0])**(1)))))))))))"
"Id(((329.10661654390134) + ((-200.889513319039) * (Tanh(((((x2)^(-1)) * ((x4)^(-1))) * ((x0)^(-1))) * ((x3)^(1)))))) / ((1.0) + (((-2.3624594078315714e-3) * (Sin((((((x2)^(-1)) * ((x3)^(-1))) * ((x0)^(1))) * ((x1)^(0))) * ((x4)^(-1))))) + ((0.5832444649832151) * (Id(((((x3)^(-1)) * ((x2)^(1))) * ((x0)^(1))) * ((x4)^(1))))))))","[[329.10661654390134,-200.889513319039,-2.3624594078315714e-3,0.5832444649832151]]","(((329.10661654390134) + ((-200.889513319039) * (np.tanh(((((x[:,2])**(-1)) * ((x[:,4])**(-1))) * ((x[:,0])**(-1))) * ((x[:,3])**(1)))))) / ((1.0) + (((-2.3624594078315714e-3) * (np.sin((((((x[:,2])**(-1)) * ((x[:,3])**(-1))) * ((x[:,0])**(1))) * ((x[:,1])**(0))) * ((x[:,4])**(-1))))) + ((0.5832444649832151) * ((((((x[:,3])**(-1)) * ((x[:,2])**(1))) * ((x[:,0])**(1))) * ((x[:,4])**(1))))))))"
"Exp(((-42.43979120569801) + (((-5.95295050385615e-4) * (Id(((x4)^(1)) * ((x0)^(1))))) + (((1.8402791436133992e-3) * (Sin((x2)^(1)))) + (((-33.60872184321) * (Id((((x2)^(-1)) * ((x0)^(-1))) * ((x3)^(-1))))) + (((47.235499344733164) * (Cos((x3)^(-1)))) + ((8.118656760620277e-4) * (Cos(((x4)^(0)) * ((x3)^(1)))))))))) / ((1.0) + (((-2.2831571320272026e-2) * (Tanh((((x2)^(-1)) * ((x0)^(-1))) * ((x4)^(-1))))) + (((7.14589608749646e-5) * (Id(((x4)^(-1)) * ((x2)^(1))))) + (((-9.781403283114473e-2) * (Sin(((x4)^(1)) * ((x0)^(0))))) + ((8.135773391716641e-5) * (Cos(((((x0)^(0)) * ((x3)^(1))) * ((x4)^(0))) * ((x2)^(-1))))))))))","[[-42.43979120569801,-5.95295050385615e-4,1.8402791436133992e-3,-33.60872184321,47.235499344733164,8.118656760620277e-4,-2.2831571320272026e-2,7.14589608749646e-5,-9.781403283114473e-2,8.135773391716641e-5]]","np.exp(((-42.43979120569801) + (((-5.95295050385615e-4) * ((((x[:,4])**(1)) * ((x[:,0])**(1))))) + (((1.8402791436133992e-3) * (np.sin((x[:,2])**(1)))) + (((-33.60872184321) * (((((x[:,2])**(-1)) * ((x[:,0])**(-1))) * ((x[:,3])**(-1))))) + (((47.235499344733164) * (np.cos((x[:,3])**(-1)))) + ((8.118656760620277e-4) * (np.cos(((x[:,4])**(0)) * ((x[:,3])**(1)))))))))) / ((1.0) + (((-2.2831571320272026e-2) * (np.tanh((((x[:,2])**(-1)) * ((x[:,0])**(-1))) * ((x[:,4])**(-1))))) + (((7.14589608749646e-5) * ((((x[:,4])**(-1)) * ((x[:,2])**(1))))) + (((-9.781403283114473e-2) * (np.sin(((x[:,4])**(1)) * ((x[:,0])**(0))))) + ((8.135773391716641e-5) * (np.cos(((((x[:,0])**(0)) * ((x[:,3])**(1))) * ((x[:,4])**(0))) * ((x[:,2])**(-1))))))))))"
"Id((-11731.404107892562) + (((1773983.8012424144) * (Cos(((((x2)^(-1)) * ((x0)^(-1))) * ((x3)^(-1))) * ((x1)^(0))))) + (((-32.29135075833283) * (Id(((x2)^(1)) * ((x0)^(0))))) + (((-334.4099704157464) * (Exp(((((x4)^(1)) * ((x3)^(0))) * ((x0)^(0))) * ((x2)^(0))))) + (((-31889.2633369391) * (Exp((x1)^(0)))) + (((-1675095.1045468464) * (Cos((((x1)^(1)) * ((x0)^(-1))) * ((x3)^(-1))))) + (((1551.008059800448) * (Tanh(((((x3)^(0)) * ((x0)^(-1))) * ((x2)^(1))) * ((x1)^(1))))) + (((-185.16555032610773) * (Id(((x0)^(0)) * ((x3)^(-1))))) + (((-3.73416710867196e-2) * (Sin((((((x3)^(1)) * ((x1)^(0))) * ((x2)^(1))) * ((x4)^(-1))) * ((x0)^(-1))))) + (((-1.0125627493948206e-3) * (Id((x0)^(1)))) + ((-2.640608217997753e-2) * (Sin((((((x3)^(0)) * ((x1)^(1))) * ((x4)^(-1))) * ((x0)^(0))) * ((x2)^(-1)))))))))))))))","[[-11731.404107892562,1773983.8012424144,-32.29135075833283,-334.4099704157464,-31889.2633369391,-1675095.1045468464,1551.008059800448,-185.16555032610773,-3.73416710867196e-2,-1.0125627493948206e-3,-2.640608217997753e-2]]","((-11731.404107892562) + (((1773983.8012424144) * (np.cos(((((x[:,2])**(-1)) * ((x[:,0])**(-1))) * ((x[:,3])**(-1))) * ((x[:,1])**(0))))) + (((-32.29135075833283) * ((((x[:,2])**(1)) * ((x[:,0])**(0))))) + (((-334.4099704157464) * (np.exp(((((x[:,4])**(1)) * ((x[:,3])**(0))) * ((x[:,0])**(0))) * ((x[:,2])**(0))))) + (((-31889.2633369391) * (np.exp((x[:,1])**(0)))) + (((-1675095.1045468464) * (np.cos((((x[:,1])**(1)) * ((x[:,0])**(-1))) * ((x[:,3])**(-1))))) + (((1551.008059800448) * (np.tanh(((((x[:,3])**(0)) * ((x[:,0])**(-1))) * ((x[:,2])**(1))) * ((x[:,1])**(1))))) + (((-185.16555032610773) * ((((x[:,0])**(0)) * ((x[:,3])**(-1))))) + (((-3.73416710867196e-2) * (np.sin((((((x[:,3])**(1)) * ((x[:,1])**(0))) * ((x[:,2])**(1))) * ((x[:,4])**(-1))) * ((x[:,0])**(-1))))) + (((-1.0125627493948206e-3) * (((x[:,0])**(1)))) + ((-2.640608217997753e-2) * (np.sin((((((x[:,3])**(0)) * ((x[:,1])**(1))) * ((x[:,4])**(-1))) * ((x[:,0])**(0))) * ((x[:,2])**(-1)))))))))))))))"
"Id((-28697.768821419522) + (((-8.125611450837988e-2) * (Id(((x3)^(-1)) * ((x0)^(1))))) + (((2.9182232159494584e-5) * (Id((((x4)^(0)) * ((x0)^(1))) * ((x2)^(-1))))) + (((-851.222722583907) * (Tanh(((((x4)^(1)) * ((x2)^(-1))) * ((x0)^(-1))) * ((x3)^(0))))) + (((-3955.1492795763065) * (Sin((((x2)^(-1)) * ((x0)^(-1))) * ((x3)^(-1))))) + (((-825.0411651837187) * (Tanh((((x3)^(-1)) * ((x2)^(1))) * ((x4)^(0))))) + (((3408434.117116886) * (Tanh((((((x0)^(-1)) * ((x1)^(0))) * ((x4)^(1))) * ((x2)^(0))) * ((x3)^(-1))))) + (((13020.18976191286) * (Cos((x4)^(1)))) + (((-0.34233604401392004) * (Cos(((((x1)^(0)) * ((x0)^(1))) * ((x4)^(-1))) * ((x2)^(-1))))) + (((0.8267975158335641) * (Cos(((((x4)^(-1)) * ((x1)^(1))) * ((x2)^(0))) * ((x3)^(-1))))) + ((15810.362950045033) * (Tanh(((((x3)^(-1)) * ((x2)^(1))) * ((x0)^(1))) * ((x4)^(-1)))))))))))))))","[[-28697.768821419522,-8.125611450837988e-2,2.9182232159494584e-5,-851.222722583907,-3955.1492795763065,-825.0411651837187,3408434.117116886,13020.18976191286,-0.34233604401392004,0.8267975158335641,15810.362950045033]]","((-28697.768821419522) + (((-8.125611450837988e-2) * ((((x[:,3])**(-1)) * ((x[:,0])**(1))))) + (((2.9182232159494584e-5) * (((((x[:,4])**(0)) * ((x[:,0])**(1))) * ((x[:,2])**(-1))))) + (((-851.222722583907) * (np.tanh(((((x[:,4])**(1)) * ((x[:,2])**(-1))) * ((x[:,0])**(-1))) * ((x[:,3])**(0))))) + (((-3955.1492795763065) * (np.sin((((x[:,2])**(-1)) * ((x[:,0])**(-1))) * ((x[:,3])**(-1))))) + (((-825.0411651837187) * (np.tanh((((x[:,3])**(-1)) * ((x[:,2])**(1))) * ((x[:,4])**(0))))) + (((3408434.117116886) * (np.tanh((((((x[:,0])**(-1)) * ((x[:,1])**(0))) * ((x[:,4])**(1))) * ((x[:,2])**(0))) * ((x[:,3])**(-1))))) + (((13020.18976191286) * (np.cos((x[:,4])**(1)))) + (((-0.34233604401392004) * (np.cos(((((x[:,1])**(0)) * ((x[:,0])**(1))) * ((x[:,4])**(-1))) * ((x[:,2])**(-1))))) + (((0.8267975158335641) * (np.cos(((((x[:,4])**(-1)) * ((x[:,1])**(1))) * ((x[:,2])**(0))) * ((x[:,3])**(-1))))) + ((15810.362950045033) * (np.tanh(((((x[:,3])**(-1)) * ((x[:,2])**(1))) * ((x[:,0])**(1))) * ((x[:,4])**(-1)))))))))))))))"
"Exp(((4.864854702189016) + (((-1.7035855576104229) * (Sin(((((x1)^(1)) * ((x3)^(-1))) * ((x2)^(-1))) * ((x0)^(-1))))) + (((-8.128786874408545e-3) * (Id((((x4)^(1)) * ((x0)^(1))) * ((x2)^(1))))) + (((-3.8928793276361765e-8) * (Id(((((x0)^(1)) * ((x4)^(-1))) * ((x3)^(-1))) * ((x1)^(1))))) + (((-3.409144203206038e-3) * (Sin((x1)^(1)))) + (((5.700636611800647e-4) * (Sin(((((x0)^(-1)) * ((x4)^(-1))) * ((x3)^(1))) * ((x2)^(1))))) + (((7.912258809967598e-3) * (Id((((x1)^(1)) * ((x0)^(-1))) * ((x3)^(1))))) + (((-3.930710682926913e-3) * (Cos(((((x4)^(1)) * ((x1)^(1))) * ((x2)^(-1))) * ((x3)^(1))))) + ((-0.10278212314764196) * (Tanh((x2)^(1)))))))))))) / ((1.0) + ((-2.2553477744956252e-5) * (Id((((x4)^(-1)) * ((x0)^(-1))) * ((x3)^(1)))))))","[[4.864854702189016,-1.7035855576104229,-8.128786874408545e-3,-3.8928793276361765e-8,-3.409144203206038e-3,5.700636611800647e-4,7.912258809967598e-3,-3.930710682926913e-3,-0.10278212314764196,-2.2553477744956252e-5]]","np.exp(((4.864854702189016) + (((-1.7035855576104229) * (np.sin(((((x[:,1])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(-1))) * ((x[:,0])**(-1))))) + (((-8.128786874408545e-3) * (((((x[:,4])**(1)) * ((x[:,0])**(1))) * ((x[:,2])**(1))))) + (((-3.8928793276361765e-8) * ((((((x[:,0])**(1)) * ((x[:,4])**(-1))) * ((x[:,3])**(-1))) * ((x[:,1])**(1))))) + (((-3.409144203206038e-3) * (np.sin((x[:,1])**(1)))) + (((5.700636611800647e-4) * (np.sin(((((x[:,0])**(-1)) * ((x[:,4])**(-1))) * ((x[:,3])**(1))) * ((x[:,2])**(1))))) + (((7.912258809967598e-3) * (((((x[:,1])**(1)) * ((x[:,0])**(-1))) * ((x[:,3])**(1))))) + (((-3.930710682926913e-3) * (np.cos(((((x[:,4])**(1)) * ((x[:,1])**(1))) * ((x[:,2])**(-1))) * ((x[:,3])**(1))))) + ((-0.10278212314764196) * (np.tanh((x[:,2])**(1)))))))))))) / ((1.0) + ((-2.2553477744956252e-5) * (((((x[:,4])**(-1)) * ((x[:,0])**(-1))) * ((x[:,3])**(1)))))))"
"Id((182.33373530327708) + (((24.5976811710826) * (Exp(((((x2)^(2)) * ((x1)^(2))) * ((x0)^(-2))) * ((x3)^(2))))) + (((-9.281126973561272e-8) * (Id(((((x3)^(2)) * ((x4)^(-1))) * ((x0)^(-1))) * ((x2)^(-3))))) + (((-2.1805014460555636) * (Log((((x3)^(1)) * ((x4)^(2))) * ((x2)^(3))))) + (((3.44409037556548) * (Log(((x0)^(-1)) * ((x2)^(1))))) + (((3215.322465875729) * (Exp(((((x1)^(3)) * ((x2)^(-3))) * ((x0)^(-3))) * ((x4)^(3))))) + (((-141.8745771545578) * (Id((((x2)^(-3)) * ((x0)^(-3))) * ((x1)^(1))))) + (((-0.6513928130162525) * (Cos((x1)^(2)))) + (((0.34261130374357185) * (Sin(((x3)^(-3)) * ((x4)^(-3))))) + (((72.12214031986855) * (Sqrt((x3)^(-1)))) + (((-3310.278888827718) * (Exp((x3)^(-2)))) + (((13.200664826477661) * (Sqrt((((x3)^(3)) * ((x0)^(-1))) * ((x4)^(3))))) + ((0.16822344440011716) * (Id((x3)^(1))))))))))))))))","[[182.33373530327708,24.5976811710826,-9.281126973561272e-8,-2.1805014460555636,3.44409037556548,3215.322465875729,-141.8745771545578,-0.6513928130162525,0.34261130374357185,72.12214031986855,-3310.278888827718,13.200664826477661,0.16822344440011716]]","((182.33373530327708) + (((24.5976811710826) * (np.exp(((((x[:,2])**(2)) * ((x[:,1])**(2))) * ((x[:,0])**(-2))) * ((x[:,3])**(2))))) + (((-9.281126973561272e-8) * ((((((x[:,3])**(2)) * ((x[:,4])**(-1))) * ((x[:,0])**(-1))) * ((x[:,2])**(-3))))) + (((-2.1805014460555636) * (np.log((((x[:,3])**(1)) * ((x[:,4])**(2))) * ((x[:,2])**(3))))) + (((3.44409037556548) * (np.log(((x[:,0])**(-1)) * ((x[:,2])**(1))))) + (((3215.322465875729) * (np.exp(((((x[:,1])**(3)) * ((x[:,2])**(-3))) * ((x[:,0])**(-3))) * ((x[:,4])**(3))))) + (((-141.8745771545578) * (((((x[:,2])**(-3)) * ((x[:,0])**(-3))) * ((x[:,1])**(1))))) + (((-0.6513928130162525) * (np.cos((x[:,1])**(2)))) + (((0.34261130374357185) * (np.sin(((x[:,3])**(-3)) * ((x[:,4])**(-3))))) + (((72.12214031986855) * (np.sqrt((x[:,3])**(-1)))) + (((-3310.278888827718) * (np.exp((x[:,3])**(-2)))) + (((13.200664826477661) * (np.sqrt((((x[:,3])**(3)) * ((x[:,0])**(-1))) * ((x[:,4])**(3))))) + ((0.16822344440011716) * (((x[:,3])**(1))))))))))))))))"
"Exp((-176.38222236279378) + (((181.2838532795291) * (Cos(((x0)^(-2)) * ((x2)^(-2))))) + (((-2.0783722799781e-3) * (Sin(((((x2)^(-1)) * ((x1)^(2))) * ((x0)^(3))) * ((x4)^(-2))))) + (((2.797583945943316e-3) * (Log((x0)^(-2)))) + (((-1.5492611364087156e-6) * (Sqrt((((x3)^(2)) * ((x4)^(2))) * ((x0)^(2))))) + (((-6.640502363954182e-4) * (Sqrt(((((x4)^(2)) * ((x3)^(-1))) * ((x0)^(3))) * ((x2)^(2))))) + (((-0.10244119711625554) * (Sin((x2)^(1)))) + ((-4.6946056753478945e-6) * (Id((((x1)^(3)) * ((x4)^(1))) * ((x2)^(-1))))))))))))","[[-176.38222236279378,181.2838532795291,-2.0783722799781e-3,2.797583945943316e-3,-1.5492611364087156e-6,-6.640502363954182e-4,-0.10244119711625554,-4.6946056753478945e-6]]","np.exp((-176.38222236279378) + (((181.2838532795291) * (np.cos(((x[:,0])**(-2)) * ((x[:,2])**(-2))))) + (((-2.0783722799781e-3) * (np.sin(((((x[:,2])**(-1)) * ((x[:,1])**(2))) * ((x[:,0])**(3))) * ((x[:,4])**(-2))))) + (((2.797583945943316e-3) * (np.log((x[:,0])**(-2)))) + (((-1.5492611364087156e-6) * (np.sqrt((((x[:,3])**(2)) * ((x[:,4])**(2))) * ((x[:,0])**(2))))) + (((-6.640502363954182e-4) * (np.sqrt(((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,0])**(3))) * ((x[:,2])**(2))))) + (((-0.10244119711625554) * (np.sin((x[:,2])**(1)))) + ((-4.6946056753478945e-6) * (((((x[:,1])**(3)) * ((x[:,4])**(1))) * ((x[:,2])**(-1))))))))))))"
"Exp(((4.809657485469125) + ((12558.373263996738) * (Id((((((x2)^(1)) * ((x4)^(-1))) * ((x3)^(-1))) * ((x0)^(-3))) * ((x1)^(2)))))) / ((1.0) + (((5.082459599190064e-11) * (Id((x0)^(2)))) + (((0.158158040959044) * (Id((((x0)^(-2)) * ((x4)^(-1))) * ((x3)^(1))))) + (((-5.824798410073335e-4) * (Sin((x4)^(-1)))) + (((3.57963324576957e-3) * (Log(((((x0)^(2)) * ((x2)^(1))) * ((x3)^(-1))) * ((x4)^(2))))) + ((-2.35421523488976e-11) * (Id((((((x3)^(-3)) * ((x1)^(2))) * ((x4)^(1))) * ((x0)^(2))) * ((x2)^(-3)))))))))))","[[4.809657485469125,12558.373263996738,5.082459599190064e-11,0.158158040959044,-5.824798410073335e-4,3.57963324576957e-3,-2.35421523488976e-11]]","np.exp(((4.809657485469125) + ((12558.373263996738) * (((((((x[:,2])**(1)) * ((x[:,4])**(-1))) * ((x[:,3])**(-1))) * ((x[:,0])**(-3))) * ((x[:,1])**(2)))))) / ((1.0) + (((5.082459599190064e-11) * (((x[:,0])**(2)))) + (((0.158158040959044) * (((((x[:,0])**(-2)) * ((x[:,4])**(-1))) * ((x[:,3])**(1))))) + (((-5.824798410073335e-4) * (np.sin((x[:,4])**(-1)))) + (((3.57963324576957e-3) * (np.log(((((x[:,0])**(2)) * ((x[:,2])**(1))) * ((x[:,3])**(-1))) * ((x[:,4])**(2))))) + ((-2.35421523488976e-11) * (((((((x[:,3])**(-3)) * ((x[:,1])**(2))) * ((x[:,4])**(1))) * ((x[:,0])**(2))) * ((x[:,2])**(-3)))))))))))"
"Id((-5.0117545955851614e8) + (((-1.514729949432636e-3) * (Sqrt(((x2)^(1)) * ((x0)^(2))))) + (((0.5105828330587077) * (Sin((x2)^(-3)))) + (((-1.0988184517334545) * (Log(((((x2)^(1)) * ((x0)^(3))) * ((x3)^(-2))) * ((x4)^(2))))) + (((-0.25889667734173294) * (Sin(((x3)^(3)) * ((x1)^(2))))) + (((3.698495645137534e-2) * (Cos((x1)^(3)))) + (((-292.70245310852) * (Sqrt((((((x0)^(-3)) * ((x3)^(-2))) * ((x1)^(1))) * ((x4)^(-1))) * ((x2)^(-3))))) + ((5.011755885748401e8) * (Cos((x4)^(3)))))))))))","[[-5.0117545955851614e8,-1.514729949432636e-3,0.5105828330587077,-1.0988184517334545,-0.25889667734173294,3.698495645137534e-2,-292.70245310852,5.011755885748401e8]]","((-5.0117545955851614e8) + (((-1.514729949432636e-3) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(2))))) + (((0.5105828330587077) * (np.sin((x[:,2])**(-3)))) + (((-1.0988184517334545) * (np.log(((((x[:,2])**(1)) * ((x[:,0])**(3))) * ((x[:,3])**(-2))) * ((x[:,4])**(2))))) + (((-0.25889667734173294) * (np.sin(((x[:,3])**(3)) * ((x[:,1])**(2))))) + (((3.698495645137534e-2) * (np.cos((x[:,1])**(3)))) + (((-292.70245310852) * (np.sqrt((((((x[:,0])**(-3)) * ((x[:,3])**(-2))) * ((x[:,1])**(1))) * ((x[:,4])**(-1))) * ((x[:,2])**(-3))))) + ((5.011755885748401e8) * (np.cos((x[:,4])**(3)))))))))))"
"Id((-1565056.0751175878) + (((-191212.94085519857) * (Sin(((((x4)^(1)) * ((x3)^(-1))) * ((x0)^(-1))) * ((x2)^(-1))))) + (((-270.4633496534353) * (Sqrt(((x0)^(-2)) * ((x4)^(-1))))) + (((-0.2765352544344104) * (Sin((x4)^(-3)))) + (((7.854585086219945e-3) * (Sin(((((x2)^(-3)) * ((x1)^(2))) * ((x0)^(-3))) * ((x4)^(-1))))) + (((3.174394968062958) * (Tanh(((x4)^(-1)) * ((x3)^(-2))))) + (((1565195.4438655595) * (Cos((x4)^(2)))) + (((0.4087065999840931) * (Cos(((x1)^(1)) * ((x0)^(1))))) + ((-2.166561890620347) * (Log(((((x2)^(2)) * ((x0)^(3))) * ((x4)^(1))) * ((x3)^(-2)))))))))))))","[[-1565056.0751175878,-191212.94085519857,-270.4633496534353,-0.2765352544344104,7.854585086219945e-3,3.174394968062958,1565195.4438655595,0.4087065999840931,-2.166561890620347]]","((-1565056.0751175878) + (((-191212.94085519857) * (np.sin(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,0])**(-1))) * ((x[:,2])**(-1))))) + (((-270.4633496534353) * (np.sqrt(((x[:,0])**(-2)) * ((x[:,4])**(-1))))) + (((-0.2765352544344104) * (np.sin((x[:,4])**(-3)))) + (((7.854585086219945e-3) * (np.sin(((((x[:,2])**(-3)) * ((x[:,1])**(2))) * ((x[:,0])**(-3))) * ((x[:,4])**(-1))))) + (((3.174394968062958) * (np.tanh(((x[:,4])**(-1)) * ((x[:,3])**(-2))))) + (((1565195.4438655595) * (np.cos((x[:,4])**(2)))) + (((0.4087065999840931) * (np.cos(((x[:,1])**(1)) * ((x[:,0])**(1))))) + ((-2.166561890620347) * (np.log(((((x[:,2])**(2)) * ((x[:,0])**(3))) * ((x[:,4])**(1))) * ((x[:,3])**(-2)))))))))))))"
"Id((112.9489075904208) + (((14.8418654855857) * (Tanh(((((x2)^(-3)) * ((x3)^(1))) * ((x4)^(-3))) * ((x0)^(-3))))) + (((0.13067465866584804) * (Cos((((((x1)^(3)) * ((x4)^(3))) * ((x0)^(2))) * ((x3)^(1))) * ((x2)^(2))))) + ((3.381657836408092e-2) * (Log(((((x2)^(-2)) * ((x0)^(-3))) * ((x4)^(2))) * ((x3)^(1))))))))","[[112.9489075904208,14.8418654855857,0.13067465866584804,3.381657836408092e-2]]","((112.9489075904208) + (((14.8418654855857) * (np.tanh(((((x[:,2])**(-3)) * ((x[:,3])**(1))) * ((x[:,4])**(-3))) * ((x[:,0])**(-3))))) + (((0.13067465866584804) * (np.cos((((((x[:,1])**(3)) * ((x[:,4])**(3))) * ((x[:,0])**(2))) * ((x[:,3])**(1))) * ((x[:,2])**(2))))) + ((3.381657836408092e-2) * (np.log(((((x[:,2])**(-2)) * ((x[:,0])**(-3))) * ((x[:,4])**(2))) * ((x[:,3])**(1))))))))"
"Id(((129.44247782637447) + (((-0.35497351441198965) * (Log((((x3)^(1)) * ((x0)^(3))) * ((x2)^(1))))) + ((10.462913922597036) * (Tanh(((((x2)^(-2)) * ((x4)^(-3))) * ((x3)^(-1))) * ((x0)^(-2))))))) / ((1.0) + ((1.4124494263158347) * (Sqrt((x3)^(-2))))))","[[129.44247782637447,-0.35497351441198965,10.462913922597036,1.4124494263158347]]","(((129.44247782637447) + (((-0.35497351441198965) * (np.log((((x[:,3])**(1)) * ((x[:,0])**(3))) * ((x[:,2])**(1))))) + ((10.462913922597036) * (np.tanh(((((x[:,2])**(-2)) * ((x[:,4])**(-3))) * ((x[:,3])**(-1))) * ((x[:,0])**(-2))))))) / ((1.0) + ((1.4124494263158347) * (np.sqrt((x[:,3])**(-2))))))"
"Id(((115.3189697949189) + (((1.941909559907873e-2) * (Sqrt((x1)^(3)))) + (((-2.455369566282414) * (Log((x4)^(1)))) + (((-1.9971489326582482e8) * (Sin((((x4)^(3)) * ((x3)^(-3))) * ((x1)^(1))))) + (((-0.19833389630654663) * (Sin((((x1)^(2)) * ((x3)^(3))) * ((x2)^(-1))))) + ((0.43528658120543806) * (Cos((((((x0)^(3)) * ((x3)^(2))) * ((x1)^(2))) * ((x2)^(-2))) * ((x4)^(2)))))))))) / ((1.0) + ((3.0182460015044086e-5) * (Sqrt(((x2)^(1)) * ((x0)^(2)))))))","[[115.3189697949189,1.941909559907873e-2,-2.455369566282414,-1.9971489326582482e8,-0.19833389630654663,0.43528658120543806,3.0182460015044086e-5]]","(((115.3189697949189) + (((1.941909559907873e-2) * (np.sqrt((x[:,1])**(3)))) + (((-2.455369566282414) * (np.log((x[:,4])**(1)))) + (((-1.9971489326582482e8) * (np.sin((((x[:,4])**(3)) * ((x[:,3])**(-3))) * ((x[:,1])**(1))))) + (((-0.19833389630654663) * (np.sin((((x[:,1])**(2)) * ((x[:,3])**(3))) * ((x[:,2])**(-1))))) + ((0.43528658120543806) * (np.cos((((((x[:,0])**(3)) * ((x[:,3])**(2))) * ((x[:,1])**(2))) * ((x[:,2])**(-2))) * ((x[:,4])**(2)))))))))) / ((1.0) + ((3.0182460015044086e-5) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(2)))))))"
"Id((-1.2104739844104202e7) + (((-1153.6526328645853) * (Tanh((((x0)^(1)) * ((x3)^(-3))) * ((x2)^(2))))) + (((1.2104865966725139e7) * (Cos(((((x4)^(-1)) * ((x3)^(-1))) * ((x1)^(3))) * ((x0)^(-3))))) + (((-12.699745411522883) * (Sqrt((((x4)^(2)) * ((x3)^(-1))) * ((x1)^(3))))) + (((-0.4550684901287845) * (Log((x2)^(2)))) + ((-1.5899408939608198e-4) * (Sqrt(((((x0)^(3)) * ((x1)^(2))) * ((x4)^(1))) * ((x2)^(2))))))))))","[[-1.2104739844104202e7,-1153.6526328645853,1.2104865966725139e7,-12.699745411522883,-0.4550684901287845,-1.5899408939608198e-4]]","((-1.2104739844104202e7) + (((-1153.6526328645853) * (np.tanh((((x[:,0])**(1)) * ((x[:,3])**(-3))) * ((x[:,2])**(2))))) + (((1.2104865966725139e7) * (np.cos(((((x[:,4])**(-1)) * ((x[:,3])**(-1))) * ((x[:,1])**(3))) * ((x[:,0])**(-3))))) + (((-12.699745411522883) * (np.sqrt((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,1])**(3))))) + (((-0.4550684901287845) * (np.log((x[:,2])**(2)))) + ((-1.5899408939608198e-4) * (np.sqrt(((((x[:,0])**(3)) * ((x[:,1])**(2))) * ((x[:,4])**(1))) * ((x[:,2])**(2))))))))))"
"Id((124.64999842033856) + (((-0.12212427451830808) * (Sqrt((((x4)^(1)) * ((x2)^(2))) * ((x0)^(2))))) + (((0.2736157500995495) * (Sin((x2)^(-3)))) + (((9.698205003125249e-2) * (Id((x3)^(1)))) + (((-9.899409154186408) * (Tanh((((((x2)^(2)) * ((x0)^(2))) * ((x4)^(-2))) * ((x1)^(1))) * ((x3)^(-2))))) + ((8.194204288361064) * (Tanh((((((x3)^(3)) * ((x4)^(-3))) * ((x0)^(-2))) * ((x1)^(1))) * ((x2)^(3))))))))))","[[124.64999842033856,-0.12212427451830808,0.2736157500995495,9.698205003125249e-2,-9.899409154186408,8.194204288361064]]","((124.64999842033856) + (((-0.12212427451830808) * (np.sqrt((((x[:,4])**(1)) * ((x[:,2])**(2))) * ((x[:,0])**(2))))) + (((0.2736157500995495) * (np.sin((x[:,2])**(-3)))) + (((9.698205003125249e-2) * (((x[:,3])**(1)))) + (((-9.899409154186408) * (np.tanh((((((x[:,2])**(2)) * ((x[:,0])**(2))) * ((x[:,4])**(-2))) * ((x[:,1])**(1))) * ((x[:,3])**(-2))))) + ((8.194204288361064) * (np.tanh((((((x[:,3])**(3)) * ((x[:,4])**(-3))) * ((x[:,0])**(-2))) * ((x[:,1])**(1))) * ((x[:,2])**(3))))))))))"
"Id(((146.95645557418695) + (((-2002.3061675740682) * (Id(((((x2)^(1)) * ((x0)^(-1))) * ((x3)^(-3))) * ((x4)^(-2))))) + (((1.167167624165935) * (Log(((x0)^(-3)) * ((x2)^(-2))))) + (((-4821.360520772107) * (Sin((x4)^(2)))) + ((-4893042.926754773) * (Tanh(((x0)^(-3)) * ((x2)^(-1))))))))) / ((1.0) + ((-2.570237765551346e-2) * (Sin((((x0)^(-2)) * ((x1)^(2))) * ((x4)^(-2)))))))","[[146.95645557418695,-2002.3061675740682,1.167167624165935,-4821.360520772107,-4893042.926754773,-2.570237765551346e-2]]","(((146.95645557418695) + (((-2002.3061675740682) * ((((((x[:,2])**(1)) * ((x[:,0])**(-1))) * ((x[:,3])**(-3))) * ((x[:,4])**(-2))))) + (((1.167167624165935) * (np.log(((x[:,0])**(-3)) * ((x[:,2])**(-2))))) + (((-4821.360520772107) * (np.sin((x[:,4])**(2)))) + ((-4893042.926754773) * (np.tanh(((x[:,0])**(-3)) * ((x[:,2])**(-1))))))))) / ((1.0) + ((-2.570237765551346e-2) * (np.sin((((x[:,0])**(-2)) * ((x[:,1])**(2))) * ((x[:,4])**(-2)))))))"
"Id((177.4114360600458) + (((0.22022236560978348) * (Sin((x0)^(1)))) + (((-26.89070878480596) * (Sqrt(((x3)^(-2)) * ((x1)^(2))))) + (((2.321950368797756) * (Log(((x2)^(-2)) * ((x0)^(-3))))) + (((-0.4189566954835735) * (Log((x4)^(1)))) + (((-288.97573206866383) * (Sqrt((x0)^(-1)))) + ((-1.9724821286300127) * (Cos((((((x4)^(-2)) * ((x3)^(3))) * ((x1)^(1))) * ((x2)^(3))) * ((x0)^(-3)))))))))))","[[177.4114360600458,0.22022236560978348,-26.89070878480596,2.321950368797756,-0.4189566954835735,-288.97573206866383,-1.9724821286300127]]","((177.4114360600458) + (((0.22022236560978348) * (np.sin((x[:,0])**(1)))) + (((-26.89070878480596) * (np.sqrt(((x[:,3])**(-2)) * ((x[:,1])**(2))))) + (((2.321950368797756) * (np.log(((x[:,2])**(-2)) * ((x[:,0])**(-3))))) + (((-0.4189566954835735) * (np.log((x[:,4])**(1)))) + (((-288.97573206866383) * (np.sqrt((x[:,0])**(-1)))) + ((-1.9724821286300127) * (np.cos((((((x[:,4])**(-2)) * ((x[:,3])**(3))) * ((x[:,1])**(1))) * ((x[:,2])**(3))) * ((x[:,0])**(-3)))))))))))"
"Id((199.29033000327047) + (((2.275374417843293) * (Log(((x3)^(-1)) * ((x4)^(-1))))) + (((8.797724269523684) * (Log((x0)^(-1)))) + (((-2920.4131421128513) * (Sqrt(((x3)^(-1)) * ((x0)^(-1))))) + ((-5.438215111535349e-7) * (Id((((((x3)^(3)) * ((x0)^(1))) * ((x1)^(1))) * ((x2)^(2))) * ((x4)^(1)))))))))","[[199.29033000327047,2.275374417843293,8.797724269523684,-2920.4131421128513,-5.438215111535349e-7]]","((199.29033000327047) + (((2.275374417843293) * (np.log(((x[:,3])**(-1)) * ((x[:,4])**(-1))))) + (((8.797724269523684) * (np.log((x[:,0])**(-1)))) + (((-2920.4131421128513) * (np.sqrt(((x[:,3])**(-1)) * ((x[:,0])**(-1))))) + ((-5.438215111535349e-7) * (((((((x[:,3])**(3)) * ((x[:,0])**(1))) * ((x[:,1])**(1))) * ((x[:,2])**(2))) * ((x[:,4])**(1)))))))))"
"Id((136.83638504996446) + (((-2.1590117539634074e-7) * (Id(((x2)^(1)) * ((x0)^(2))))) + (((-0.8939916674003365) * (Log(((x4)^(2)) * ((x0)^(3))))) + (((-0.16078512817411905) * (Tanh((((((x0)^(3)) * ((x2)^(-2))) * ((x1)^(3))) * ((x3)^(-1))) * ((x4)^(3))))) + (((-1001639.7676957105) * (Sin(((x2)^(3)) * ((x4)^(2))))) + (((-1.2715993268007875e-2) * (Id(((x3)^(2)) * ((x2)^(3))))) + ((-8537125.745505007) * (Id((((x3)^(-1)) * ((x0)^(-3))) * ((x1)^(2)))))))))))","[[136.83638504996446,-2.1590117539634074e-7,-0.8939916674003365,-0.16078512817411905,-1001639.7676957105,-1.2715993268007875e-2,-8537125.745505007]]","((136.83638504996446) + (((-2.1590117539634074e-7) * ((((x[:,2])**(1)) * ((x[:,0])**(2))))) + (((-0.8939916674003365) * (np.log(((x[:,4])**(2)) * ((x[:,0])**(3))))) + (((-0.16078512817411905) * (np.tanh((((((x[:,0])**(3)) * ((x[:,2])**(-2))) * ((x[:,1])**(3))) * ((x[:,3])**(-1))) * ((x[:,4])**(3))))) + (((-1001639.7676957105) * (np.sin(((x[:,2])**(3)) * ((x[:,4])**(2))))) + (((-1.2715993268007875e-2) * ((((x[:,3])**(2)) * ((x[:,2])**(3))))) + ((-8537125.745505007) * (((((x[:,3])**(-1)) * ((x[:,0])**(-3))) * ((x[:,1])**(2)))))))))))"
"Id((105.55257614288742) + (((7.257636701747857e-7) * (Sqrt(((x4)^(-2)) * ((x0)^(2))))) + (((-0.9109614029609325) * (Log(((x4)^(3)) * ((x3)^(-2))))) + (((-1.7382298277044128e-3) * (Id((x0)^(1)))) + (((2.2019220110142985) * (Tanh(((x3)^(1)) * ((x1)^(3))))) + (((-0.34603887404190636) * (Sin(((((x1)^(1)) * ((x0)^(2))) * ((x4)^(-3))) * ((x2)^(-3))))) + ((4.773234356421326e-10) * (Tanh((((((x4)^(2)) * ((x0)^(-3))) * ((x2)^(-2))) * ((x3)^(-3))) * ((x1)^(1)))))))))))","[[105.55257614288742,7.257636701747857e-7,-0.9109614029609325,-1.7382298277044128e-3,2.2019220110142985,-0.34603887404190636,4.773234356421326e-10]]","((105.55257614288742) + (((7.257636701747857e-7) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(2))))) + (((-0.9109614029609325) * (np.log(((x[:,4])**(3)) * ((x[:,3])**(-2))))) + (((-1.7382298277044128e-3) * (((x[:,0])**(1)))) + (((2.2019220110142985) * (np.tanh(((x[:,3])**(1)) * ((x[:,1])**(3))))) + (((-0.34603887404190636) * (np.sin(((((x[:,1])**(1)) * ((x[:,0])**(2))) * ((x[:,4])**(-3))) * ((x[:,2])**(-3))))) + ((4.773234356421326e-10) * (np.tanh((((((x[:,4])**(2)) * ((x[:,0])**(-3))) * ((x[:,2])**(-2))) * ((x[:,3])**(-3))) * ((x[:,1])**(1)))))))))))"
"Id((128.74513247613504) + (((-5.810252401394334e-2) * (Sqrt((((x2)^(1)) * ((x0)^(2))) * ((x4)^(1))))) + ((5.0550185648446266e-2) * (Sin((((x0)^(2)) * ((x3)^(3))) * ((x1)^(2)))))))","[[128.74513247613504,-5.810252401394334e-2,5.0550185648446266e-2]]","((128.74513247613504) + (((-5.810252401394334e-2) * (np.sqrt((((x[:,2])**(1)) * ((x[:,0])**(2))) * ((x[:,4])**(1))))) + ((5.0550185648446266e-2) * (np.sin((((x[:,0])**(2)) * ((x[:,3])**(3))) * ((x[:,1])**(2)))))))"
"Id((128.66409589252996) + (((0.9212542535758805) * (Id(((x1)^(2)) * ((x2)^(2))))) + (((-16.369921633460052) * (Tanh((((x0)^(1)) * ((x4)^(1))) * ((x2)^(2))))) + ((-1.34710203620329e8) * (Tanh(((x4)^(2)) * ((x0)^(-2))))))))","[[128.66409589252996,0.9212542535758805,-16.369921633460052,-1.34710203620329e8]]","((128.66409589252996) + (((0.9212542535758805) * ((((x[:,1])**(2)) * ((x[:,2])**(2))))) + (((-16.369921633460052) * (np.tanh((((x[:,0])**(1)) * ((x[:,4])**(1))) * ((x[:,2])**(2))))) + ((-1.34710203620329e8) * (np.tanh(((x[:,4])**(2)) * ((x[:,0])**(-2))))))))"
"Id(((121.23492822584343) + (((-1.1358577291670335) * (Log((x3)^(-2)))) + ((-0.3781306929800792) * (Id((((x2)^(1)) * ((x0)^(1))) * ((x3)^(-1))))))) / ((1.0) + (((1.9190866840382487e-2) * (Id(((((x3)^(-3)) * ((x0)^(2))) * ((x4)^(3))) * ((x2)^(-2))))) + (((2.569695979672902e-3) * (Id((x1)^(1)))) + ((3.2697720419010695e-12) * (Sqrt(((((x4)^(-2)) * ((x0)^(2))) * ((x1)^(1))) * ((x3)^(2)))))))))","[[121.23492822584343,-1.1358577291670335,-0.3781306929800792,1.9190866840382487e-2,2.569695979672902e-3,3.2697720419010695e-12]]","(((121.23492822584343) + (((-1.1358577291670335) * (np.log((x[:,3])**(-2)))) + ((-0.3781306929800792) * (((((x[:,2])**(1)) * ((x[:,0])**(1))) * ((x[:,3])**(-1))))))) / ((1.0) + (((1.9190866840382487e-2) * ((((((x[:,3])**(-3)) * ((x[:,0])**(2))) * ((x[:,4])**(3))) * ((x[:,2])**(-2))))) + (((2.569695979672902e-3) * (((x[:,1])**(1)))) + ((3.2697720419010695e-12) * (np.sqrt(((((x[:,4])**(-2)) * ((x[:,0])**(2))) * ((x[:,1])**(1))) * ((x[:,3])**(2)))))))))"
"Id(((127.08794569113844) + (((1.0439242313111876) * (Sin((((x1)^(3)) * ((x4)^(2))) * ((x3)^(1))))) + ((-4.987334974306385e-4) * (Sqrt(((((x1)^(1)) * ((x0)^(3))) * ((x4)^(1))) * ((x2)^(2))))))) / ((1.0) + ((5.864843714272171) * (Sin(((x2)^(1)) * ((x4)^(1)))))))","[[127.08794569113844,1.0439242313111876,-4.987334974306385e-4,5.864843714272171]]","(((127.08794569113844) + (((1.0439242313111876) * (np.sin((((x[:,1])**(3)) * ((x[:,4])**(2))) * ((x[:,3])**(1))))) + ((-4.987334974306385e-4) * (np.sqrt(((((x[:,1])**(1)) * ((x[:,0])**(3))) * ((x[:,4])**(1))) * ((x[:,2])**(2))))))) / ((1.0) + ((5.864843714272171) * (np.sin(((x[:,2])**(1)) * ((x[:,4])**(1)))))))"
"Id((53.05051414029505) + (((-0.8078667726507202) * (Sin(((x2)^(-3)) * ((x3)^(-1))))) + (((1.9458828897422897e-5) * (Id(((x2)^(3)) * ((x3)^(3))))) + (((0.4632995404107767) * (Log((((x4)^(-3)) * ((x2)^(-3))) * ((x0)^(3))))) + (((-1.4775696060007684e-3) * (Id((x0)^(1)))) + (((-616.6803256636507) * (Sqrt((x4)^(3)))) + ((56.36915679486179) * (Tanh(((((x4)^(-1)) * ((x3)^(3))) * ((x2)^(-2))) * ((x0)^(-2)))))))))))","[[53.05051414029505,-0.8078667726507202,1.9458828897422897e-5,0.4632995404107767,-1.4775696060007684e-3,-616.6803256636507,56.36915679486179]]","((53.05051414029505) + (((-0.8078667726507202) * (np.sin(((x[:,2])**(-3)) * ((x[:,3])**(-1))))) + (((1.9458828897422897e-5) * ((((x[:,2])**(3)) * ((x[:,3])**(3))))) + (((0.4632995404107767) * (np.log((((x[:,4])**(-3)) * ((x[:,2])**(-3))) * ((x[:,0])**(3))))) + (((-1.4775696060007684e-3) * (((x[:,0])**(1)))) + (((-616.6803256636507) * (np.sqrt((x[:,4])**(3)))) + ((56.36915679486179) * (np.tanh(((((x[:,4])**(-1)) * ((x[:,3])**(3))) * ((x[:,2])**(-2))) * ((x[:,0])**(-2)))))))))))"
"Id((131.13546341265734) + (((-1.84104922799635e9) * (Id(((((x4)^(2)) * ((x1)^(1))) * ((x3)^(-3))) * ((x0)^(-1))))) + ((-4.908348385144024) * (Sqrt((((x4)^(1)) * ((x2)^(1))) * ((x0)^(1)))))))","[[131.13546341265734,-1.84104922799635e9,-4.908348385144024]]","((131.13546341265734) + (((-1.84104922799635e9) * ((((((x[:,4])**(2)) * ((x[:,1])**(1))) * ((x[:,3])**(-3))) * ((x[:,0])**(-1))))) + ((-4.908348385144024) * (np.sqrt((((x[:,4])**(1)) * ((x[:,2])**(1))) * ((x[:,0])**(1)))))))"
"Id((126.56824690732579) + (((0.22716864703724626) * (Sin((((x2)^(-3)) * ((x0)^(1))) * ((x4)^(-1))))) + (((-14.369223860325008) * (Tanh(((((x4)^(1)) * ((x2)^(2))) * ((x0)^(2))) * ((x3)^(-2))))) + (((-0.37769450053263576) * (Log((((x4)^(2)) * ((x0)^(-1))) * ((x3)^(3))))) + ((-4.895442993429677e-8) * (Sqrt((((((x1)^(3)) * ((x3)^(1))) * ((x4)^(1))) * ((x2)^(-3))) * ((x0)^(2)))))))))","[[126.56824690732579,0.22716864703724626,-14.369223860325008,-0.37769450053263576,-4.895442993429677e-8]]","((126.56824690732579) + (((0.22716864703724626) * (np.sin((((x[:,2])**(-3)) * ((x[:,0])**(1))) * ((x[:,4])**(-1))))) + (((-14.369223860325008) * (np.tanh(((((x[:,4])**(1)) * ((x[:,2])**(2))) * ((x[:,0])**(2))) * ((x[:,3])**(-2))))) + (((-0.37769450053263576) * (np.log((((x[:,4])**(2)) * ((x[:,0])**(-1))) * ((x[:,3])**(3))))) + ((-4.895442993429677e-8) * (np.sqrt((((((x[:,1])**(3)) * ((x[:,3])**(1))) * ((x[:,4])**(1))) * ((x[:,2])**(-3))) * ((x[:,0])**(2)))))))))"
"Id((-548445.4255187836) + (((548589.3653201644) * (Exp(((x2)^(1)) * ((x0)^(-2))))) + (((-13.892898997356673) * (Exp((x2)^(1)))) + (((-2.057220991589566e-3) * (Sqrt((((x1)^(2)) * ((x0)^(2))) * ((x2)^(2))))) + ((-4.816082354204476e-2) * (Id(((x0)^(-1)) * ((x2)^(-3)))))))))","[[-548445.4255187836,548589.3653201644,-13.892898997356673,-2.057220991589566e-3,-4.816082354204476e-2]]","((-548445.4255187836) + (((548589.3653201644) * (np.exp(((x[:,2])**(1)) * ((x[:,0])**(-2))))) + (((-13.892898997356673) * (np.exp((x[:,2])**(1)))) + (((-2.057220991589566e-3) * (np.sqrt((((x[:,1])**(2)) * ((x[:,0])**(2))) * ((x[:,2])**(2))))) + ((-4.816082354204476e-2) * ((((x[:,0])**(-1)) * ((x[:,2])**(-3)))))))))"
"Id(((130.48063991921774) + (((0.4281711666057575) * (Log((x2)^(1)))) + (((-6.759094417753936e-3) * (Sqrt(((x0)^(2)) * ((x2)^(2))))) + ((-17.76553860260981) * (Tanh((((((x1)^(1)) * ((x3)^(-1))) * ((x4)^(3))) * ((x0)^(2))) * ((x2)^(2)))))))) / ((1.0) + ((14659.649310128447) * (Sin(((x0)^(-1)) * ((x3)^(-2)))))))","[[130.48063991921774,0.4281711666057575,-6.759094417753936e-3,-17.76553860260981,14659.649310128447]]","(((130.48063991921774) + (((0.4281711666057575) * (np.log((x[:,2])**(1)))) + (((-6.759094417753936e-3) * (np.sqrt(((x[:,0])**(2)) * ((x[:,2])**(2))))) + ((-17.76553860260981) * (np.tanh((((((x[:,1])**(1)) * ((x[:,3])**(-1))) * ((x[:,4])**(3))) * ((x[:,0])**(2))) * ((x[:,2])**(2)))))))) / ((1.0) + ((14659.649310128447) * (np.sin(((x[:,0])**(-1)) * ((x[:,3])**(-2)))))))"
"Id(((-1.0581362366933015e8) + (((1.0422687907894525e8) * (Exp((((x2)^(-1)) * ((x3)^(-1))) * ((x0)^(-3))))) + (((0.17135727065230988) * (Sqrt(((x4)^(3)) * ((x0)^(2))))) + (((1586872.6330524946) * (Exp(((((((x3)^(-2)) * ((x1)^(3))) * ((x2)^(2))) * ((x0)^(-2))) * ((x4)^(2))) * ((x1)^(2))))) + (((-2210.139581886922) * (Sin((x4)^(2)))) + (((-5.01784375371974) * (Log(((x0)^(1)) * ((x3)^(-1))))) + (((-0.17122717191269743) * (Id((((x3)^(1)) * ((x1)^(3))) * ((x0)^(-2))))) + (((13.157013023030302) * (Tanh((((((x4)^(3)) * ((x2)^(-1))) * ((x0)^(3))) * ((x3)^(2))) * ((x3)^(-3))))) + (((-1.643432414816079) * (Sqrt(((x4)^(1)) * ((x0)^(1))))) + ((5.141042406615411) * (Log((x2)^(-1))))))))))))) / ((1.0) + (((-1.7585559010735552e-2) * (Id((((x3)^(-3)) * ((x4)^(-1))) * ((x3)^(1))))) + ((2.0575518138884674) * (Sqrt(((x0)^(-2)) * ((x2)^(-2))))))))","[[-1.0581362366933015e8,1.0422687907894525e8,0.17135727065230988,1586872.6330524946,-2210.139581886922,-5.01784375371974,-0.17122717191269743,13.157013023030302,-1.643432414816079,5.141042406615411,-1.7585559010735552e-2,2.0575518138884674]]","(((-1.0581362366933015e8) + (((1.0422687907894525e8) * (np.exp((((x[:,2])**(-1)) * ((x[:,3])**(-1))) * ((x[:,0])**(-3))))) + (((0.17135727065230988) * (np.sqrt(((x[:,4])**(3)) * ((x[:,0])**(2))))) + (((1586872.6330524946) * (np.exp(((((((x[:,3])**(-2)) * ((x[:,1])**(3))) * ((x[:,2])**(2))) * ((x[:,0])**(-2))) * ((x[:,4])**(2))) * ((x[:,1])**(2))))) + (((-2210.139581886922) * (np.sin((x[:,4])**(2)))) + (((-5.01784375371974) * (np.log(((x[:,0])**(1)) * ((x[:,3])**(-1))))) + (((-0.17122717191269743) * (((((x[:,3])**(1)) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))) + (((13.157013023030302) * (np.tanh((((((x[:,4])**(3)) * ((x[:,2])**(-1))) * ((x[:,0])**(3))) * ((x[:,3])**(2))) * ((x[:,3])**(-3))))) + (((-1.643432414816079) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(1))))) + ((5.141042406615411) * (np.log((x[:,2])**(-1))))))))))))) / ((1.0) + (((-1.7585559010735552e-2) * (((((x[:,3])**(-3)) * ((x[:,4])**(-1))) * ((x[:,3])**(1))))) + ((2.0575518138884674) * (np.sqrt(((x[:,0])**(-2)) * ((x[:,2])**(-2))))))))"
"Id(((137.61944620009947) + (((-1.7231044241269097e-6) * (Id(((x0)^(1)) * ((x1)^(2))))) + (((-5.6715376602244794e-2) * (Log(((x0)^(-2)) * ((x4)^(1))))) + (((1.649702846286391e-3) * (Sqrt(((x4)^(-3)) * ((x3)^(-2))))) + (((-6.0657584385152745) * (Sqrt(((x4)^(-3)) * ((x0)^(-3))))) + (((-0.49451116830718017) * (Sqrt(((x0)^(1)) * ((x2)^(1))))) + (((-1833.977578291172) * (Sqrt((((x4)^(2)) * ((x2)^(1))) * ((x3)^(-1))))) + ((-7.835374219818716) * (Tanh(((((x3)^(-3)) * ((x4)^(2))) * ((x2)^(1))) * ((x0)^(3)))))))))))) / ((1.0) + (((1.591157788174119e-3) * (Tanh(((x1)^(2)) * ((x0)^(1))))) + (((5.559692336297085e-3) * (Sin((x2)^(-1)))) + (((3.801731886742593e-2) * (Tanh(((((x0)^(3)) * ((x2)^(3))) * ((x4)^(3))) * ((x3)^(-2))))) + (((1.000104212721925e-2) * (Sqrt(((((x3)^(2)) * ((x2)^(-3))) * ((x0)^(-3))) * ((x1)^(1))))) + (((-1.6364586860443606e-2) * (Sqrt((((((x0)^(-3)) * ((x2)^(2))) * ((x1)^(3))) * ((x4)^(-1))) * ((x3)^(3))))) + (((-3.4621550675237715e-6) * (Sqrt((((x0)^(2)) * ((x2)^(3))) * ((x4)^(-1))))) + ((15.734649555223898) * (Sqrt((x0)^(-2))))))))))))","[[137.61944620009947,-1.7231044241269097e-6,-5.6715376602244794e-2,1.649702846286391e-3,-6.0657584385152745,-0.49451116830718017,-1833.977578291172,-7.835374219818716,1.591157788174119e-3,5.559692336297085e-3,3.801731886742593e-2,1.000104212721925e-2,-1.6364586860443606e-2,-3.4621550675237715e-6,15.734649555223898]]","(((137.61944620009947) + (((-1.7231044241269097e-6) * ((((x[:,0])**(1)) * ((x[:,1])**(2))))) + (((-5.6715376602244794e-2) * (np.log(((x[:,0])**(-2)) * ((x[:,4])**(1))))) + (((1.649702846286391e-3) * (np.sqrt(((x[:,4])**(-3)) * ((x[:,3])**(-2))))) + (((-6.0657584385152745) * (np.sqrt(((x[:,4])**(-3)) * ((x[:,0])**(-3))))) + (((-0.49451116830718017) * (np.sqrt(((x[:,0])**(1)) * ((x[:,2])**(1))))) + (((-1833.977578291172) * (np.sqrt((((x[:,4])**(2)) * ((x[:,2])**(1))) * ((x[:,3])**(-1))))) + ((-7.835374219818716) * (np.tanh(((((x[:,3])**(-3)) * ((x[:,4])**(2))) * ((x[:,2])**(1))) * ((x[:,0])**(3)))))))))))) / ((1.0) + (((1.591157788174119e-3) * (np.tanh(((x[:,1])**(2)) * ((x[:,0])**(1))))) + (((5.559692336297085e-3) * (np.sin((x[:,2])**(-1)))) + (((3.801731886742593e-2) * (np.tanh(((((x[:,0])**(3)) * ((x[:,2])**(3))) * ((x[:,4])**(3))) * ((x[:,3])**(-2))))) + (((1.000104212721925e-2) * (np.sqrt(((((x[:,3])**(2)) * ((x[:,2])**(-3))) * ((x[:,0])**(-3))) * ((x[:,1])**(1))))) + (((-1.6364586860443606e-2) * (np.sqrt((((((x[:,0])**(-3)) * ((x[:,2])**(2))) * ((x[:,1])**(3))) * ((x[:,4])**(-1))) * ((x[:,3])**(3))))) + (((-3.4621550675237715e-6) * (np.sqrt((((x[:,0])**(2)) * ((x[:,2])**(3))) * ((x[:,4])**(-1))))) + ((15.734649555223898) * (np.sqrt((x[:,0])**(-2))))))))))))"
"Id(((-112346.24604991282) + (((107821.75453857049) * (Exp(((((x4)^(-2)) * ((x0)^(-3))) * ((x3)^(-3))) * ((x1)^(3))))) + (((-2786.532064686309) * (Id((((x4)^(1)) * ((x2)^(-1))) * ((x0)^(-1))))) + (((-2.4399165616538028) * (Tanh((((x1)^(3)) * ((x4)^(-1))) * ((x3)^(-3))))) + (((872.9892183556917) * (Exp(((x1)^(2)) * ((x0)^(-2))))) + (((-1.7087270889954207e-4) * (Sqrt((((((x1)^(2)) * ((x0)^(-2))) * ((x4)^(-2))) * ((x3)^(2))) * ((x2)^(-3))))) + (((3794.513964166409) * (Cos(((x4)^(2)) * ((x1)^(1))))) + (((4.988544575827003e-2) * (Cos(((x0)^(1)) * ((x2)^(-1))))) + (((-1.7970281708612994) * (Log((((((x4)^(2)) * ((x3)^(2))) * ((x0)^(3))) * ((x2)^(2))) * ((x3)^(-3))))) + (((-2.936664265585505e-11) * (Id((((((x2)^(2)) * ((x3)^(-1))) * ((x0)^(-1))) * ((x0)^(3))) * ((x4)^(-2))))) + (((-32.07879610487541) * (Sqrt((x2)^(1)))) + (((-13.46699368275642) * (Sqrt((((x0)^(-3)) * ((x1)^(2))) * ((x2)^(-3))))) + ((-18.666407459100043) * (Tanh(((((x2)^(-3)) * ((x4)^(-2))) * ((x0)^(-2))) * ((x2)^(3))))))))))))))))) / ((1.0) + (((-3.371878432679956e-2) * (Sqrt(((x2)^(2)) * ((x3)^(1))))) + (((-0.3655275760501051) * (Sqrt(((((x0)^(1)) * ((x2)^(2))) * ((x4)^(1))) * ((x3)^(-2))))) + (((3.966779835236196e-3) * (Cos(((x2)^(2)) * ((x0)^(1))))) + ((5.0355738255334714e-6) * (Sqrt((((x0)^(3)) * ((x3)^(-1))) * ((x4)^(1))))))))))","[[-112346.24604991282,107821.75453857049,-2786.532064686309,-2.4399165616538028,872.9892183556917,-1.7087270889954207e-4,3794.513964166409,4.988544575827003e-2,-1.7970281708612994,-2.936664265585505e-11,-32.07879610487541,-13.46699368275642,-18.666407459100043,-3.371878432679956e-2,-0.3655275760501051,3.966779835236196e-3,5.0355738255334714e-6]]","(((-112346.24604991282) + (((107821.75453857049) * (np.exp(((((x[:,4])**(-2)) * ((x[:,0])**(-3))) * ((x[:,3])**(-3))) * ((x[:,1])**(3))))) + (((-2786.532064686309) * (((((x[:,4])**(1)) * ((x[:,2])**(-1))) * ((x[:,0])**(-1))))) + (((-2.4399165616538028) * (np.tanh((((x[:,1])**(3)) * ((x[:,4])**(-1))) * ((x[:,3])**(-3))))) + (((872.9892183556917) * (np.exp(((x[:,1])**(2)) * ((x[:,0])**(-2))))) + (((-1.7087270889954207e-4) * (np.sqrt((((((x[:,1])**(2)) * ((x[:,0])**(-2))) * ((x[:,4])**(-2))) * ((x[:,3])**(2))) * ((x[:,2])**(-3))))) + (((3794.513964166409) * (np.cos(((x[:,4])**(2)) * ((x[:,1])**(1))))) + (((4.988544575827003e-2) * (np.cos(((x[:,0])**(1)) * ((x[:,2])**(-1))))) + (((-1.7970281708612994) * (np.log((((((x[:,4])**(2)) * ((x[:,3])**(2))) * ((x[:,0])**(3))) * ((x[:,2])**(2))) * ((x[:,3])**(-3))))) + (((-2.936664265585505e-11) * (((((((x[:,2])**(2)) * ((x[:,3])**(-1))) * ((x[:,0])**(-1))) * ((x[:,0])**(3))) * ((x[:,4])**(-2))))) + (((-32.07879610487541) * (np.sqrt((x[:,2])**(1)))) + (((-13.46699368275642) * (np.sqrt((((x[:,0])**(-3)) * ((x[:,1])**(2))) * ((x[:,2])**(-3))))) + ((-18.666407459100043) * (np.tanh(((((x[:,2])**(-3)) * ((x[:,4])**(-2))) * ((x[:,0])**(-2))) * ((x[:,2])**(3))))))))))))))))) / ((1.0) + (((-3.371878432679956e-2) * (np.sqrt(((x[:,2])**(2)) * ((x[:,3])**(1))))) + (((-0.3655275760501051) * (np.sqrt(((((x[:,0])**(1)) * ((x[:,2])**(2))) * ((x[:,4])**(1))) * ((x[:,3])**(-2))))) + (((3.966779835236196e-3) * (np.cos(((x[:,2])**(2)) * ((x[:,0])**(1))))) + ((5.0355738255334714e-6) * (np.sqrt((((x[:,0])**(3)) * ((x[:,3])**(-1))) * ((x[:,4])**(1))))))))))"
"Id(((180.95495236357698) + (((-1.6294981043710806) * (Tanh((((x4)^(1)) * ((x1)^(1))) * ((x3)^(3))))) + (((-1.5176274589207342e10) * (Tanh((((x3)^(-2)) * ((x0)^(-1))) * ((x4)^(3))))) + (((-8.393246828111147e-5) * (Sqrt(((((x2)^(-1)) * ((x0)^(-1))) * ((x4)^(-3))) * ((x1)^(1))))) + (((1.2567654868525426e-3) * (Id((x3)^(2)))) + (((0.6836233314382643) * (Sin((x2)^(-2)))) + (((426382.11708284693) * (Id((x0)^(-2)))) + (((-3.2935447102801037e9) * (Tanh(((((x0)^(-3)) * ((x2)^(3))) * ((x1)^(3))) * ((x3)^(-2))))) + (((-13.045250813421717) * (Sqrt(((x1)^(1)) * ((x4)^(1))))) + (((59264.243769768) * (Id((((x3)^(-1)) * ((x0)^(-3))) * ((x4)^(-2))))) + (((4.614578764337326) * (Log(((x2)^(-2)) * ((x0)^(-2))))) + ((10739.126206456178) * (Tanh((x4)^(3))))))))))))))) / ((1.0) + (((-10.30137318507776) * (Sin(((((x3)^(-3)) * ((x2)^(-3))) * ((x0)^(-2))) * ((x4)^(-1))))) + (((-6.5100950079718875e-3) * (Log(((x0)^(1)) * ((x2)^(3))))) + (((0.29015185270022226) * (Sqrt((((((x0)^(-2)) * ((x2)^(-2))) * ((x4)^(-1))) * ((x3)^(1))) * ((x4)^(1))))) + (((-8.24029842633027e-3) * (Log((((x4)^(-2)) * ((x0)^(-1))) * ((x3)^(-1))))) + (((4.30516257497386) * (Sqrt(((x4)^(-2)) * ((x0)^(-3))))) + ((743585.8561282142) * (Tanh(((x3)^(-3)) * ((x4)^(2))))))))))))","[[180.95495236357698,-1.6294981043710806,-1.5176274589207342e10,-8.393246828111147e-5,1.2567654868525426e-3,0.6836233314382643,426382.11708284693,-3.2935447102801037e9,-13.045250813421717,59264.243769768,4.614578764337326,10739.126206456178,-10.30137318507776,-6.5100950079718875e-3,0.29015185270022226,-8.24029842633027e-3,4.30516257497386,743585.8561282142]]","(((180.95495236357698) + (((-1.6294981043710806) * (np.tanh((((x[:,4])**(1)) * ((x[:,1])**(1))) * ((x[:,3])**(3))))) + (((-1.5176274589207342e10) * (np.tanh((((x[:,3])**(-2)) * ((x[:,0])**(-1))) * ((x[:,4])**(3))))) + (((-8.393246828111147e-5) * (np.sqrt(((((x[:,2])**(-1)) * ((x[:,0])**(-1))) * ((x[:,4])**(-3))) * ((x[:,1])**(1))))) + (((1.2567654868525426e-3) * (((x[:,3])**(2)))) + (((0.6836233314382643) * (np.sin((x[:,2])**(-2)))) + (((426382.11708284693) * (((x[:,0])**(-2)))) + (((-3.2935447102801037e9) * (np.tanh(((((x[:,0])**(-3)) * ((x[:,2])**(3))) * ((x[:,1])**(3))) * ((x[:,3])**(-2))))) + (((-13.045250813421717) * (np.sqrt(((x[:,1])**(1)) * ((x[:,4])**(1))))) + (((59264.243769768) * (((((x[:,3])**(-1)) * ((x[:,0])**(-3))) * ((x[:,4])**(-2))))) + (((4.614578764337326) * (np.log(((x[:,2])**(-2)) * ((x[:,0])**(-2))))) + ((10739.126206456178) * (np.tanh((x[:,4])**(3))))))))))))))) / ((1.0) + (((-10.30137318507776) * (np.sin(((((x[:,3])**(-3)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))) * ((x[:,4])**(-1))))) + (((-6.5100950079718875e-3) * (np.log(((x[:,0])**(1)) * ((x[:,2])**(3))))) + (((0.29015185270022226) * (np.sqrt((((((x[:,0])**(-2)) * ((x[:,2])**(-2))) * ((x[:,4])**(-1))) * ((x[:,3])**(1))) * ((x[:,4])**(1))))) + (((-8.24029842633027e-3) * (np.log((((x[:,4])**(-2)) * ((x[:,0])**(-1))) * ((x[:,3])**(-1))))) + (((4.30516257497386) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-3))))) + ((743585.8561282142) * (np.tanh(((x[:,3])**(-3)) * ((x[:,4])**(2))))))))))))"
"Id(((100.65637027006515) + (((2.461271539243878e-3) * (Id((x4)^(-1)))) + (((2.7869795048313515) * (Log((x3)^(2)))) + (((-0.27763366583908855) * (Tanh(((x2)^(1)) * ((x1)^(2))))) + (((-6.940816895353687e-7) * (Id((((x3)^(2)) * ((x2)^(-1))) * ((x1)^(1))))) + (((-1.6030975266337192e-6) * (Sqrt((x0)^(3)))) + (((1.0456896785189502e-9) * (Id((((x2)^(-2)) * ((x1)^(2))) * ((x3)^(2))))) + (((7.582164658301164) * (Tanh((((x0)^(-3)) * ((x4)^(-3))) * ((x2)^(-3))))) + (((3476.603350323929) * (Sin((x3)^(-2)))) + ((-4.411136205019833e-2) * (Sqrt((((x4)^(1)) * ((x0)^(2))) * ((x2)^(1)))))))))))))) / ((1.0) + (((-5.115560207129133e-2) * (Tanh(((x4)^(1)) * ((x3)^(1))))) + (((-14.877118078605537) * (Sqrt(((x0)^(-3)) * ((x3)^(1))))) + (((1.7295180621307813) * (Sqrt(((x4)^(-2)) * ((x0)^(-3))))) + (((5.7067798128513925e-3) * (Cos((x2)^(-1)))) + (((4.791792356382011) * (Sqrt((((x3)^(-3)) * ((x4)^(2))) * ((x1)^(3))))) + ((9.924290288322105e-4) * (Sqrt(((((x0)^(-2)) * ((x3)^(2))) * ((x1)^(2))) * ((x2)^(-2))))))))))))","[[100.65637027006515,2.461271539243878e-3,2.7869795048313515,-0.27763366583908855,-6.940816895353687e-7,-1.6030975266337192e-6,1.0456896785189502e-9,7.582164658301164,3476.603350323929,-4.411136205019833e-2,-5.115560207129133e-2,-14.877118078605537,1.7295180621307813,5.7067798128513925e-3,4.791792356382011,9.924290288322105e-4]]","(((100.65637027006515) + (((2.461271539243878e-3) * (((x[:,4])**(-1)))) + (((2.7869795048313515) * (np.log((x[:,3])**(2)))) + (((-0.27763366583908855) * (np.tanh(((x[:,2])**(1)) * ((x[:,1])**(2))))) + (((-6.940816895353687e-7) * (((((x[:,3])**(2)) * ((x[:,2])**(-1))) * ((x[:,1])**(1))))) + (((-1.6030975266337192e-6) * (np.sqrt((x[:,0])**(3)))) + (((1.0456896785189502e-9) * (((((x[:,2])**(-2)) * ((x[:,1])**(2))) * ((x[:,3])**(2))))) + (((7.582164658301164) * (np.tanh((((x[:,0])**(-3)) * ((x[:,4])**(-3))) * ((x[:,2])**(-3))))) + (((3476.603350323929) * (np.sin((x[:,3])**(-2)))) + ((-4.411136205019833e-2) * (np.sqrt((((x[:,4])**(1)) * ((x[:,0])**(2))) * ((x[:,2])**(1)))))))))))))) / ((1.0) + (((-5.115560207129133e-2) * (np.tanh(((x[:,4])**(1)) * ((x[:,3])**(1))))) + (((-14.877118078605537) * (np.sqrt(((x[:,0])**(-3)) * ((x[:,3])**(1))))) + (((1.7295180621307813) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-3))))) + (((5.7067798128513925e-3) * (np.cos((x[:,2])**(-1)))) + (((4.791792356382011) * (np.sqrt((((x[:,3])**(-3)) * ((x[:,4])**(2))) * ((x[:,1])**(3))))) + ((9.924290288322105e-4) * (np.sqrt(((((x[:,0])**(-2)) * ((x[:,3])**(2))) * ((x[:,1])**(2))) * ((x[:,2])**(-2))))))))))))"
"Id(((-4.1445126092683695e7) + (((-10.64017820239772) * (Sqrt(((x0)^(-1)) * ((x1)^(2))))) + (((4.233681630157962e7) * (Exp((((x2)^(-2)) * ((x3)^(-2))) * ((x0)^(-3))))) + (((-891507.2715308848) * (Cos((((x0)^(-1)) * ((x4)^(1))) * ((x2)^(-1))))) + (((66.82536888029313) * (Id(((((x3)^(-1)) * ((x2)^(-2))) * ((x0)^(-3))) * ((x4)^(-2))))) + (((7.446035388403716e-3) * (Sqrt(((x2)^(-2)) * ((x1)^(2))))) + (((-6.611695869392087e-4) * (Sqrt(((((x4)^(-2)) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-1))))) + (((-3.655564646369105) * (Id(((x0)^(-1)) * ((x2)^(-2))))) + (((-1.9695038878636334e-5) * (Sqrt(((x3)^(-1)) * ((x0)^(3))))) + (((-42.558670802858686) * (Sqrt((x4)^(1)))) + (((-2.5144645796124707) * (Log((x0)^(3)))) + (((-24.032386131547817) * (Id(((x4)^(-1)) * ((x0)^(-1))))) + (((0.7394148433357203) * (Sqrt((x4)^(-1)))) + ((-1.6897330406102293) * (Sqrt((((((x4)^(3)) * ((x2)^(-3))) * ((x0)^(-2))) * ((x1)^(1))) * ((x3)^(3)))))))))))))))))) / ((1.0) + (((1.5735483814396628e-2) * (Log(((((x3)^(-2)) * ((x4)^(-1))) * ((x2)^(2))) * ((x0)^(1))))) + (((18.48937942492047) * (Sin((x4)^(3)))) + ((594.3009792180218) * (Sqrt((((x2)^(1)) * ((x3)^(-3))) * ((x4)^(2)))))))))","[[-4.1445126092683695e7,-10.64017820239772,4.233681630157962e7,-891507.2715308848,66.82536888029313,7.446035388403716e-3,-6.611695869392087e-4,-3.655564646369105,-1.9695038878636334e-5,-42.558670802858686,-2.5144645796124707,-24.032386131547817,0.7394148433357203,-1.6897330406102293,1.5735483814396628e-2,18.48937942492047,594.3009792180218]]","(((-4.1445126092683695e7) + (((-10.64017820239772) * (np.sqrt(((x[:,0])**(-1)) * ((x[:,1])**(2))))) + (((4.233681630157962e7) * (np.exp((((x[:,2])**(-2)) * ((x[:,3])**(-2))) * ((x[:,0])**(-3))))) + (((-891507.2715308848) * (np.cos((((x[:,0])**(-1)) * ((x[:,4])**(1))) * ((x[:,2])**(-1))))) + (((66.82536888029313) * ((((((x[:,3])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))) * ((x[:,4])**(-2))))) + (((7.446035388403716e-3) * (np.sqrt(((x[:,2])**(-2)) * ((x[:,1])**(2))))) + (((-6.611695869392087e-4) * (np.sqrt(((((x[:,4])**(-2)) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))) + (((-3.655564646369105) * ((((x[:,0])**(-1)) * ((x[:,2])**(-2))))) + (((-1.9695038878636334e-5) * (np.sqrt(((x[:,3])**(-1)) * ((x[:,0])**(3))))) + (((-42.558670802858686) * (np.sqrt((x[:,4])**(1)))) + (((-2.5144645796124707) * (np.log((x[:,0])**(3)))) + (((-24.032386131547817) * ((((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((0.7394148433357203) * (np.sqrt((x[:,4])**(-1)))) + ((-1.6897330406102293) * (np.sqrt((((((x[:,4])**(3)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))) * ((x[:,1])**(1))) * ((x[:,3])**(3)))))))))))))))))) / ((1.0) + (((1.5735483814396628e-2) * (np.log(((((x[:,3])**(-2)) * ((x[:,4])**(-1))) * ((x[:,2])**(2))) * ((x[:,0])**(1))))) + (((18.48937942492047) * (np.sin((x[:,4])**(3)))) + ((594.3009792180218) * (np.sqrt((((x[:,2])**(1)) * ((x[:,3])**(-3))) * ((x[:,4])**(2)))))))))"
"Id(((132.3445681374146) + (((-0.24875446809622925) * (Log((((x4)^(1)) * ((x2)^(-3))) * ((x3)^(1))))) + (((-0.18651835865809047) * (Sqrt((((x3)^(2)) * ((x0)^(-2))) * ((x4)^(-2))))) + (((-1.583890197049742e-8) * (Id((x0)^(2)))) + (((67.35612186106079) * (Sqrt((((x2)^(-2)) * ((x1)^(1))) * ((x0)^(-3))))) + (((3.1011779200263856) * (Sqrt((((((x0)^(-2)) * ((x3)^(2))) * ((x2)^(2))) * ((x1)^(2))) * ((x4)^(-1))))) + (((-1693.7989204182893) * (Sqrt((x0)^(-2)))) + (((0.7110377137507493) * (Log((((x2)^(-3)) * ((x0)^(-3))) * ((x4)^(-1))))) + (((1.0905796727782147) * (Log((((((x2)^(-3)) * ((x3)^(3))) * ((x0)^(1))) * ((x3)^(3))) * ((x4)^(-3))))) + (((-2.2832122860381494) * (Log((x0)^(3)))) + (((-25.516011330965647) * (Sqrt(((((x4)^(1)) * ((x2)^(-3))) * ((x3)^(1))) * ((x0)^(-2))))) + ((1.1488812305982962e-2) * (Sqrt(((x4)^(-2)) * ((x3)^(-1)))))))))))))))) / ((1.0) + (((-5.740100438009019e-4) * (Cos(((x0)^(1)) * ((x2)^(-1))))) + (((307680.9677329503) * (Sin(((x4)^(3)) * ((x3)^(-2))))) + (((9.15826781341339e-3) * (Tanh((((x0)^(2)) * ((x3)^(1))) * ((x1)^(3))))) + (((4.301531288552498e-5) * (Sqrt((((((x3)^(2)) * ((x0)^(-3))) * ((x4)^(-3))) * ((x1)^(2))) * ((x3)^(1))))) + ((8.036051256647492e-2) * (Tanh(((x0)^(-3)) * ((x4)^(-3)))))))))))","[[132.3445681374146,-0.24875446809622925,-0.18651835865809047,-1.583890197049742e-8,67.35612186106079,3.1011779200263856,-1693.7989204182893,0.7110377137507493,1.0905796727782147,-2.2832122860381494,-25.516011330965647,1.1488812305982962e-2,-5.740100438009019e-4,307680.9677329503,9.15826781341339e-3,4.301531288552498e-5,8.036051256647492e-2]]","(((132.3445681374146) + (((-0.24875446809622925) * (np.log((((x[:,4])**(1)) * ((x[:,2])**(-3))) * ((x[:,3])**(1))))) + (((-0.18651835865809047) * (np.sqrt((((x[:,3])**(2)) * ((x[:,0])**(-2))) * ((x[:,4])**(-2))))) + (((-1.583890197049742e-8) * (((x[:,0])**(2)))) + (((67.35612186106079) * (np.sqrt((((x[:,2])**(-2)) * ((x[:,1])**(1))) * ((x[:,0])**(-3))))) + (((3.1011779200263856) * (np.sqrt((((((x[:,0])**(-2)) * ((x[:,3])**(2))) * ((x[:,2])**(2))) * ((x[:,1])**(2))) * ((x[:,4])**(-1))))) + (((-1693.7989204182893) * (np.sqrt((x[:,0])**(-2)))) + (((0.7110377137507493) * (np.log((((x[:,2])**(-3)) * ((x[:,0])**(-3))) * ((x[:,4])**(-1))))) + (((1.0905796727782147) * (np.log((((((x[:,2])**(-3)) * ((x[:,3])**(3))) * ((x[:,0])**(1))) * ((x[:,3])**(3))) * ((x[:,4])**(-3))))) + (((-2.2832122860381494) * (np.log((x[:,0])**(3)))) + (((-25.516011330965647) * (np.sqrt(((((x[:,4])**(1)) * ((x[:,2])**(-3))) * ((x[:,3])**(1))) * ((x[:,0])**(-2))))) + ((1.1488812305982962e-2) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,3])**(-1)))))))))))))))) / ((1.0) + (((-5.740100438009019e-4) * (np.cos(((x[:,0])**(1)) * ((x[:,2])**(-1))))) + (((307680.9677329503) * (np.sin(((x[:,4])**(3)) * ((x[:,3])**(-2))))) + (((9.15826781341339e-3) * (np.tanh((((x[:,0])**(2)) * ((x[:,3])**(1))) * ((x[:,1])**(3))))) + (((4.301531288552498e-5) * (np.sqrt((((((x[:,3])**(2)) * ((x[:,0])**(-3))) * ((x[:,4])**(-3))) * ((x[:,1])**(2))) * ((x[:,3])**(1))))) + ((8.036051256647492e-2) * (np.tanh(((x[:,0])**(-3)) * ((x[:,4])**(-3)))))))))))"
"Id(((-5268.987303888522) + (((-1472.4990425770195) * (Id((x0)^(-1)))) + (((-364.8568701100079) * (Cos(((x3)^(-3)) * ((x1)^(3))))) + (((1073.9323559244494) * (Sin((((x2)^(-2)) * ((x3)^(-2))) * ((x0)^(-1))))) + (((-0.6941837223642544) * (Cos((x2)^(-1)))) + (((5770.69177833223) * (Exp((((x4)^(-1)) * ((x1)^(2))) * ((x0)^(-3))))) + (((0.2879740615320574) * (Cos((((((x4)^(1)) * ((x1)^(3))) * ((x2)^(1))) * ((x3)^(3))) * ((x2)^(3))))) + (((1.7517496094478142) * (Log((x0)^(-1)))) + (((-2.9343431561776137) * (Log((((x3)^(-2)) * ((x0)^(-3))) * ((x4)^(1))))) + (((1.4459786882536907e-3) * (Sqrt((x3)^(2)))) + (((-0.4274326336607386) * (Sqrt(((((x4)^(-1)) * ((x0)^(-2))) * ((x1)^(3))) * ((x2)^(-2))))) + (((-22.012841847793933) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((0.32320200987261316) * (Log((((x4)^(1)) * ((x3)^(3))) * ((x0)^(3))))) + (((-3339.48404434117) * (Id((x4)^(2)))) + (((5.255248785510766) * (Log((x0)^(-3)))) + (((0.3653576516048276) * (Cos((((x0)^(3)) * ((x1)^(3))) * ((x3)^(-3))))) + (((-1.4350742428893017) * (Log((x2)^(3)))) + ((21.978146618419643) * (Id(((x3)^(1)) * ((x4)^(2)))))))))))))))))))))) / ((1.0) + (((-1.7948553929594269e-3) * (Sin(((((((((x1)^(3)) * ((x4)^(3))) * ((x0)^(2))) * ((x3)^(-1))) * ((x2)^(2))) * ((x2)^(1))) * ((x4)^(2))) * ((x3)^(3))))) + (((-6.683627290358674e-2) * (Sin((((x3)^(-2)) * ((x4)^(-3))) * ((x4)^(2))))) + ((2.729550856386427e-7) * (Sqrt(((x0)^(3)) * ((x4)^(1)))))))))","[[-5268.987303888522,-1472.4990425770195,-364.8568701100079,1073.9323559244494,-0.6941837223642544,5770.69177833223,0.2879740615320574,1.7517496094478142,-2.9343431561776137,1.4459786882536907e-3,-0.4274326336607386,-22.012841847793933,0.32320200987261316,-3339.48404434117,5.255248785510766,0.3653576516048276,-1.4350742428893017,21.978146618419643,-1.7948553929594269e-3,-6.683627290358674e-2,2.729550856386427e-7]]","(((-5268.987303888522) + (((-1472.4990425770195) * (((x[:,0])**(-1)))) + (((-364.8568701100079) * (np.cos(((x[:,3])**(-3)) * ((x[:,1])**(3))))) + (((1073.9323559244494) * (np.sin((((x[:,2])**(-2)) * ((x[:,3])**(-2))) * ((x[:,0])**(-1))))) + (((-0.6941837223642544) * (np.cos((x[:,2])**(-1)))) + (((5770.69177833223) * (np.exp((((x[:,4])**(-1)) * ((x[:,1])**(2))) * ((x[:,0])**(-3))))) + (((0.2879740615320574) * (np.cos((((((x[:,4])**(1)) * ((x[:,1])**(3))) * ((x[:,2])**(1))) * ((x[:,3])**(3))) * ((x[:,2])**(3))))) + (((1.7517496094478142) * (np.log((x[:,0])**(-1)))) + (((-2.9343431561776137) * (np.log((((x[:,3])**(-2)) * ((x[:,0])**(-3))) * ((x[:,4])**(1))))) + (((1.4459786882536907e-3) * (np.sqrt((x[:,3])**(2)))) + (((-0.4274326336607386) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,0])**(-2))) * ((x[:,1])**(3))) * ((x[:,2])**(-2))))) + (((-22.012841847793933) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((0.32320200987261316) * (np.log((((x[:,4])**(1)) * ((x[:,3])**(3))) * ((x[:,0])**(3))))) + (((-3339.48404434117) * (((x[:,4])**(2)))) + (((5.255248785510766) * (np.log((x[:,0])**(-3)))) + (((0.3653576516048276) * (np.cos((((x[:,0])**(3)) * ((x[:,1])**(3))) * ((x[:,3])**(-3))))) + (((-1.4350742428893017) * (np.log((x[:,2])**(3)))) + ((21.978146618419643) * ((((x[:,3])**(1)) * ((x[:,4])**(2)))))))))))))))))))))) / ((1.0) + (((-1.7948553929594269e-3) * (np.sin(((((((((x[:,1])**(3)) * ((x[:,4])**(3))) * ((x[:,0])**(2))) * ((x[:,3])**(-1))) * ((x[:,2])**(2))) * ((x[:,2])**(1))) * ((x[:,4])**(2))) * ((x[:,3])**(3))))) + (((-6.683627290358674e-2) * (np.sin((((x[:,3])**(-2)) * ((x[:,4])**(-3))) * ((x[:,4])**(2))))) + ((2.729550856386427e-7) * (np.sqrt(((x[:,0])**(3)) * ((x[:,4])**(1)))))))))"
"Id(((79.93649858609508) + (((-160.0289948269708) * (Tanh((x4)^(1)))) + (((68.72152213805214) * (Exp((x3)^(-1)))) + (((0.7536079191881371) * (Log((((x0)^(-1)) * ((x3)^(1))) * ((x2)^(-2))))) + (((-0.12677199206119516) * (Sqrt((((x3)^(2)) * ((x0)^(-3))) * ((x4)^(-3))))) + (((-148.2094722899533) * (Sqrt(((((x2)^(-1)) * ((x4)^(2))) * ((x3)^(-3))) * ((x1)^(2))))) + (((0.1898155139378339) * (Id(((x3)^(-1)) * ((x4)^(-1))))) + (((0.2186690261688764) * (Log(((x2)^(-3)) * ((x0)^(-3))))) + (((1.9473216422189683) * (Log((x4)^(-2)))) + (((2.710562314218654) * (Log((((x0)^(-1)) * ((x4)^(1))) * ((x3)^(3))))) + (((-1.3955530725832768) * (Log((x0)^(3)))) + ((-342.0228468165794) * (Sqrt(((x0)^(-2)) * ((x4)^(-1)))))))))))))))) / ((1.0) + (((5.3991681300748565e-3) * (Sqrt(((((x3)^(2)) * ((x0)^(-2))) * ((x2)^(-2))) * ((x1)^(1))))) + ((4.332224561066611e-2) * (Tanh((((((x4)^(2)) * ((x0)^(3))) * ((x2)^(2))) * ((x0)^(-1))) * ((x2)^(1))))))))","[[79.93649858609508,-160.0289948269708,68.72152213805214,0.7536079191881371,-0.12677199206119516,-148.2094722899533,0.1898155139378339,0.2186690261688764,1.9473216422189683,2.710562314218654,-1.3955530725832768,-342.0228468165794,5.3991681300748565e-3,4.332224561066611e-2]]","(((79.93649858609508) + (((-160.0289948269708) * (np.tanh((x[:,4])**(1)))) + (((68.72152213805214) * (np.exp((x[:,3])**(-1)))) + (((0.7536079191881371) * (np.log((((x[:,0])**(-1)) * ((x[:,3])**(1))) * ((x[:,2])**(-2))))) + (((-0.12677199206119516) * (np.sqrt((((x[:,3])**(2)) * ((x[:,0])**(-3))) * ((x[:,4])**(-3))))) + (((-148.2094722899533) * (np.sqrt(((((x[:,2])**(-1)) * ((x[:,4])**(2))) * ((x[:,3])**(-3))) * ((x[:,1])**(2))))) + (((0.1898155139378339) * ((((x[:,3])**(-1)) * ((x[:,4])**(-1))))) + (((0.2186690261688764) * (np.log(((x[:,2])**(-3)) * ((x[:,0])**(-3))))) + (((1.9473216422189683) * (np.log((x[:,4])**(-2)))) + (((2.710562314218654) * (np.log((((x[:,0])**(-1)) * ((x[:,4])**(1))) * ((x[:,3])**(3))))) + (((-1.3955530725832768) * (np.log((x[:,0])**(3)))) + ((-342.0228468165794) * (np.sqrt(((x[:,0])**(-2)) * ((x[:,4])**(-1)))))))))))))))) / ((1.0) + (((5.3991681300748565e-3) * (np.sqrt(((((x[:,3])**(2)) * ((x[:,0])**(-2))) * ((x[:,2])**(-2))) * ((x[:,1])**(1))))) + ((4.332224561066611e-2) * (np.tanh((((((x[:,4])**(2)) * ((x[:,0])**(3))) * ((x[:,2])**(2))) * ((x[:,0])**(-1))) * ((x[:,2])**(1))))))))"
"Id(((3716.3867204986486) + (((-2.272617380070141e-2) * (Cos(((x2)^(-3)) * ((x4)^(-2))))) + (((11.949242801176293) * (Tanh(((((x0)^(1)) * ((x3)^(-2))) * ((x4)^(-3))) * ((x2)^(3))))) + (((2.8232530878311275) * (Exp(((((x2)^(-2)) * ((x0)^(-1))) * ((x4)^(3))) * ((x1)^(3))))) + (((0.20511263679264202) * (Sqrt((x4)^(-1)))) + (((-3576.583837779104) * (Cos((x4)^(1)))) + (((-190.27801612952044) * (Sqrt((x3)^(-2)))) + (((5.439456765846245) * (Tanh(((x0)^(1)) * ((x2)^(2))))) + (((1.3523975892977842) * (Log(((x0)^(3)) * ((x4)^(-3))))) + (((-3.942474049041584) * (Log(((x2)^(-1)) * ((x0)^(3))))) + (((-4.5717370640359703e-4) * (Id((x0)^(1)))) + (((4.307760112369502) * (Log((x2)^(-2)))) + (((-12.71055026200034) * (Tanh(((((x4)^(-2)) * ((x1)^(1))) * ((x0)^(-3))) * ((x2)^(-2))))) + (((0.2547711623290281) * (Cos((x4)^(-3)))) + ((2.0117613581582883) * (Id(((((x3)^(-3)) * ((x0)^(-2))) * ((x4)^(-2))) * ((x2)^(-3))))))))))))))))))) / ((1.0) + (((0.16453299272075528) * (Id(((x0)^(-1)) * ((x4)^(-1))))) + (((1408.8218258537456) * (Tanh(((x4)^(2)) * ((x3)^(-1))))) + ((4.613996123514319e-3) * (Tanh(((((x4)^(1)) * ((x2)^(2))) * ((x1)^(1))) * ((x3)^(3)))))))))","[[3716.3867204986486,-2.272617380070141e-2,11.949242801176293,2.8232530878311275,0.20511263679264202,-3576.583837779104,-190.27801612952044,5.439456765846245,1.3523975892977842,-3.942474049041584,-4.5717370640359703e-4,4.307760112369502,-12.71055026200034,0.2547711623290281,2.0117613581582883,0.16453299272075528,1408.8218258537456,4.613996123514319e-3]]","(((3716.3867204986486) + (((-2.272617380070141e-2) * (np.cos(((x[:,2])**(-3)) * ((x[:,4])**(-2))))) + (((11.949242801176293) * (np.tanh(((((x[:,0])**(1)) * ((x[:,3])**(-2))) * ((x[:,4])**(-3))) * ((x[:,2])**(3))))) + (((2.8232530878311275) * (np.exp(((((x[:,2])**(-2)) * ((x[:,0])**(-1))) * ((x[:,4])**(3))) * ((x[:,1])**(3))))) + (((0.20511263679264202) * (np.sqrt((x[:,4])**(-1)))) + (((-3576.583837779104) * (np.cos((x[:,4])**(1)))) + (((-190.27801612952044) * (np.sqrt((x[:,3])**(-2)))) + (((5.439456765846245) * (np.tanh(((x[:,0])**(1)) * ((x[:,2])**(2))))) + (((1.3523975892977842) * (np.log(((x[:,0])**(3)) * ((x[:,4])**(-3))))) + (((-3.942474049041584) * (np.log(((x[:,2])**(-1)) * ((x[:,0])**(3))))) + (((-4.5717370640359703e-4) * (((x[:,0])**(1)))) + (((4.307760112369502) * (np.log((x[:,2])**(-2)))) + (((-12.71055026200034) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,1])**(1))) * ((x[:,0])**(-3))) * ((x[:,2])**(-2))))) + (((0.2547711623290281) * (np.cos((x[:,4])**(-3)))) + ((2.0117613581582883) * ((((((x[:,3])**(-3)) * ((x[:,0])**(-2))) * ((x[:,4])**(-2))) * ((x[:,2])**(-3))))))))))))))))))) / ((1.0) + (((0.16453299272075528) * ((((x[:,0])**(-1)) * ((x[:,4])**(-1))))) + (((1408.8218258537456) * (np.tanh(((x[:,4])**(2)) * ((x[:,3])**(-1))))) + ((4.613996123514319e-3) * (np.tanh(((((x[:,4])**(1)) * ((x[:,2])**(2))) * ((x[:,1])**(1))) * ((x[:,3])**(3)))))))))"
"Id(((218.48378704215253) + (((7.384012492459105e-9) * (Id(((((x1)^(2)) * ((x4)^(2))) * ((x2)^(3))) * ((x0)^(3))))) + (((111.36750265181107) * (Id((((x3)^(1)) * ((x2)^(2))) * ((x3)^(-1))))) + (((-53.65681218303685) * (Exp((x2)^(1)))) + (((-4.872050440505178) * (Log((((x0)^(2)) * ((x3)^(-1))) * ((x4)^(1))))) + (((8.14653517422856) * (Id(((x2)^(-1)) * ((x3)^(-1))))) + (((-1.3641517752978858e-9) * (Sqrt(((((((x1)^(2)) * ((x3)^(2))) * ((x2)^(2))) * ((x0)^(3))) * ((x4)^(-3))) * ((x4)^(2))))) + ((-14.188244738484062) * (Sqrt(((x4)^(-2)) * ((x0)^(-2)))))))))))) / ((1.0) + (((1.446535537937784) * (Sqrt(((x0)^(-2)) * ((x4)^(-1))))) + (((-8.885884908017821e-4) * (Id((((x0)^(-2)) * ((x2)^(-3))) * ((x4)^(-1))))) + (((9.151741578933281e-4) * (Sqrt((((x0)^(-2)) * ((x1)^(1))) * ((x4)^(-3))))) + (((0.32540246855928023) * (Sqrt(((x2)^(-3)) * ((x0)^(-2))))) + (((-0.5303073086611949) * (Sqrt((((x0)^(1)) * ((x3)^(1))) * ((x0)^(-3))))) + ((46.31472182414043) * (Id(((x4)^(1)) * ((x3)^(-1))))))))))))","[[218.48378704215253,7.384012492459105e-9,111.36750265181107,-53.65681218303685,-4.872050440505178,8.14653517422856,-1.3641517752978858e-9,-14.188244738484062,1.446535537937784,-8.885884908017821e-4,9.151741578933281e-4,0.32540246855928023,-0.5303073086611949,46.31472182414043]]","(((218.48378704215253) + (((7.384012492459105e-9) * ((((((x[:,1])**(2)) * ((x[:,4])**(2))) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((111.36750265181107) * (((((x[:,3])**(1)) * ((x[:,2])**(2))) * ((x[:,3])**(-1))))) + (((-53.65681218303685) * (np.exp((x[:,2])**(1)))) + (((-4.872050440505178) * (np.log((((x[:,0])**(2)) * ((x[:,3])**(-1))) * ((x[:,4])**(1))))) + (((8.14653517422856) * ((((x[:,2])**(-1)) * ((x[:,3])**(-1))))) + (((-1.3641517752978858e-9) * (np.sqrt(((((((x[:,1])**(2)) * ((x[:,3])**(2))) * ((x[:,2])**(2))) * ((x[:,0])**(3))) * ((x[:,4])**(-3))) * ((x[:,4])**(2))))) + ((-14.188244738484062) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-2)))))))))))) / ((1.0) + (((1.446535537937784) * (np.sqrt(((x[:,0])**(-2)) * ((x[:,4])**(-1))))) + (((-8.885884908017821e-4) * (((((x[:,0])**(-2)) * ((x[:,2])**(-3))) * ((x[:,4])**(-1))))) + (((9.151741578933281e-4) * (np.sqrt((((x[:,0])**(-2)) * ((x[:,1])**(1))) * ((x[:,4])**(-3))))) + (((0.32540246855928023) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((-0.5303073086611949) * (np.sqrt((((x[:,0])**(1)) * ((x[:,3])**(1))) * ((x[:,0])**(-3))))) + ((46.31472182414043) * ((((x[:,4])**(1)) * ((x[:,3])**(-1))))))))))))"
"Id(((4385515.78370515) + (((-197930.1703651097) * (Cos(((x0)^(-3)) * ((x2)^(-3))))) + (((-4315749.703749254) * (Exp((((x1)^(1)) * ((x4)^(3))) * ((x3)^(-2))))) + (((125265.48486692348) * (Exp((((x1)^(1)) * ((x0)^(-2))) * ((x2)^(1))))) + (((0.6480432950135793) * (Cos((x1)^(3)))) + (((-2.4227646085780562e-6) * (Sqrt((x0)^(3)))) + (((-0.7296930948179661) * (Cos((x2)^(-1)))) + (((2.358115484922402) * (Log((x0)^(-3)))) + (((3038.8150871631474) * (Exp((((x3)^(-1)) * ((x2)^(-1))) * ((x0)^(-1))))) + (((-27.69554179858603) * (Sin(((x0)^(-1)) * ((x4)^(-1))))) + (((2.0474713030544875) * (Log(((x4)^(-3)) * ((x2)^(2))))) + ((-5.180761198925161) * (Log((x2)^(2))))))))))))))) / ((1.0) + (((-1.2524640953195942e-4) * (Sin(((x3)^(-1)) * ((x0)^(3))))) + (((8.776320078452637e-3) * (Tanh((((x0)^(2)) * ((x3)^(1))) * ((x1)^(3))))) + (((-1.6429339740455622e-3) * (Sin(((((x1)^(2)) * ((x3)^(1))) * ((x0)^(3))) * ((x4)^(-1))))) + (((2.4053494665375177) * (Tanh(((x0)^(-1)) * ((x2)^(-1))))) + (((2.095566386303866e-2) * (Log(((x0)^(1)) * ((x3)^(-2))))) + (((-50.868568287236826) * (Tanh(((((x4)^(2)) * ((x3)^(-1))) * ((x0)^(1))) * ((x2)^(3))))) + ((-2.1032735604720187e-5) * (Cos((((x0)^(3)) * ((x1)^(3))) * ((x4)^(-2)))))))))))))","[[4385515.78370515,-197930.1703651097,-4315749.703749254,125265.48486692348,0.6480432950135793,-2.4227646085780562e-6,-0.7296930948179661,2.358115484922402,3038.8150871631474,-27.69554179858603,2.0474713030544875,-5.180761198925161,-1.2524640953195942e-4,8.776320078452637e-3,-1.6429339740455622e-3,2.4053494665375177,2.095566386303866e-2,-50.868568287236826,-2.1032735604720187e-5]]","(((4385515.78370515) + (((-197930.1703651097) * (np.cos(((x[:,0])**(-3)) * ((x[:,2])**(-3))))) + (((-4315749.703749254) * (np.exp((((x[:,1])**(1)) * ((x[:,4])**(3))) * ((x[:,3])**(-2))))) + (((125265.48486692348) * (np.exp((((x[:,1])**(1)) * ((x[:,0])**(-2))) * ((x[:,2])**(1))))) + (((0.6480432950135793) * (np.cos((x[:,1])**(3)))) + (((-2.4227646085780562e-6) * (np.sqrt((x[:,0])**(3)))) + (((-0.7296930948179661) * (np.cos((x[:,2])**(-1)))) + (((2.358115484922402) * (np.log((x[:,0])**(-3)))) + (((3038.8150871631474) * (np.exp((((x[:,3])**(-1)) * ((x[:,2])**(-1))) * ((x[:,0])**(-1))))) + (((-27.69554179858603) * (np.sin(((x[:,0])**(-1)) * ((x[:,4])**(-1))))) + (((2.0474713030544875) * (np.log(((x[:,4])**(-3)) * ((x[:,2])**(2))))) + ((-5.180761198925161) * (np.log((x[:,2])**(2))))))))))))))) / ((1.0) + (((-1.2524640953195942e-4) * (np.sin(((x[:,3])**(-1)) * ((x[:,0])**(3))))) + (((8.776320078452637e-3) * (np.tanh((((x[:,0])**(2)) * ((x[:,3])**(1))) * ((x[:,1])**(3))))) + (((-1.6429339740455622e-3) * (np.sin(((((x[:,1])**(2)) * ((x[:,3])**(1))) * ((x[:,0])**(3))) * ((x[:,4])**(-1))))) + (((2.4053494665375177) * (np.tanh(((x[:,0])**(-1)) * ((x[:,2])**(-1))))) + (((2.095566386303866e-2) * (np.log(((x[:,0])**(1)) * ((x[:,3])**(-2))))) + (((-50.868568287236826) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,0])**(1))) * ((x[:,2])**(3))))) + ((-2.1032735604720187e-5) * (np.cos((((x[:,0])**(3)) * ((x[:,1])**(3))) * ((x[:,4])**(-2)))))))))))))"
"Id(((129.4448865206297) + (((-3.460209323333025) * (Tanh((x1)^(3)))) + (((4.8965944317157355) * (Tanh((((((x0)^(2)) * ((x4)^(1))) * ((x3)^(-2))) * ((x1)^(2))) * ((x2)^(2))))) + (((61.12635790618904) * (Sqrt((x4)^(1)))) + (((-8.110689115405588e-9) * (Sqrt(((((x4)^(-2)) * ((x3)^(1))) * ((x2)^(1))) * ((x4)^(-3))))) + (((-26.15852494090453) * (Tanh(((x0)^(-2)) * ((x4)^(-2))))) + (((-5.927149225142523e-6) * (Sqrt(((((x1)^(1)) * ((x0)^(3))) * ((x3)^(-3))) * ((x3)^(2))))) + (((2.876516757322454) * (Log(((x0)^(-3)) * ((x3)^(1))))) + ((6.70304436124783) * (Log(((x2)^(-1)) * ((x4)^(-1))))))))))))) / ((1.0) + (((6.934402345093986e-3) * (Cos((x2)^(-1)))) + (((5.356193311831326e-6) * (Sqrt((((((x1)^(3)) * ((x4)^(-1))) * ((x3)^(2))) * ((x0)^(-2))) * ((x2)^(-3))))) + (((1185.35458939469) * (Sin(((x3)^(-1)) * ((x4)^(2))))) + (((-17.192235099158324) * (Sin((((((x2)^(-2)) * ((x0)^(-1))) * ((x1)^(1))) * ((x3)^(-2))) * ((x2)^(1))))) + (((0.618235818590188) * (Sqrt(((((x1)^(1)) * ((x3)^(-1))) * ((x2)^(-1))) * ((x0)^(-1))))) + ((3.159173653428507e-10) * (Sqrt(((x0)^(3)) * ((x2)^(-2))))))))))))","[[129.4448865206297,-3.460209323333025,4.8965944317157355,61.12635790618904,-8.110689115405588e-9,-26.15852494090453,-5.927149225142523e-6,2.876516757322454,6.70304436124783,6.934402345093986e-3,5.356193311831326e-6,1185.35458939469,-17.192235099158324,0.618235818590188,3.159173653428507e-10]]","(((129.4448865206297) + (((-3.460209323333025) * (np.tanh((x[:,1])**(3)))) + (((4.8965944317157355) * (np.tanh((((((x[:,0])**(2)) * ((x[:,4])**(1))) * ((x[:,3])**(-2))) * ((x[:,1])**(2))) * ((x[:,2])**(2))))) + (((61.12635790618904) * (np.sqrt((x[:,4])**(1)))) + (((-8.110689115405588e-9) * (np.sqrt(((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,2])**(1))) * ((x[:,4])**(-3))))) + (((-26.15852494090453) * (np.tanh(((x[:,0])**(-2)) * ((x[:,4])**(-2))))) + (((-5.927149225142523e-6) * (np.sqrt(((((x[:,1])**(1)) * ((x[:,0])**(3))) * ((x[:,3])**(-3))) * ((x[:,3])**(2))))) + (((2.876516757322454) * (np.log(((x[:,0])**(-3)) * ((x[:,3])**(1))))) + ((6.70304436124783) * (np.log(((x[:,2])**(-1)) * ((x[:,4])**(-1))))))))))))) / ((1.0) + (((6.934402345093986e-3) * (np.cos((x[:,2])**(-1)))) + (((5.356193311831326e-6) * (np.sqrt((((((x[:,1])**(3)) * ((x[:,4])**(-1))) * ((x[:,3])**(2))) * ((x[:,0])**(-2))) * ((x[:,2])**(-3))))) + (((1185.35458939469) * (np.sin(((x[:,3])**(-1)) * ((x[:,4])**(2))))) + (((-17.192235099158324) * (np.sin((((((x[:,2])**(-2)) * ((x[:,0])**(-1))) * ((x[:,1])**(1))) * ((x[:,3])**(-2))) * ((x[:,2])**(1))))) + (((0.618235818590188) * (np.sqrt(((((x[:,1])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(-1))) * ((x[:,0])**(-1))))) + ((3.159173653428507e-10) * (np.sqrt(((x[:,0])**(3)) * ((x[:,2])**(-2))))))))))))"
"Id(((-4911.585534406111) + (((-0.9734680145537367) * (Tanh((x1)^(1)))) + (((-0.9458383429542603) * (Log(((x0)^(2)) * ((x4)^(3))))) + (((5.4643014712314475e-2) * (Sqrt((x3)^(2)))) + (((-3336.6620946281387) * (Sqrt(((x0)^(-1)) * ((x4)^(2))))) + (((6285.505675389304) * (Sin((((x2)^(-3)) * ((x4)^(2))) * ((x3)^(-3))))) + (((-0.389184026944319) * (Cos((x2)^(-2)))) + (((-1261064.9000621117) * (Tanh(((x4)^(1)) * ((x0)^(-2))))) + (((-0.3417173787014982) * (Sin((x1)^(2)))) + (((-4.601986798055599) * (Sqrt((x3)^(-1)))) + (((-173.4365000859156) * (Sin((((x2)^(-2)) * ((x4)^(1))) * ((x0)^(-1))))) + (((5047.825517661019) * (Exp((x0)^(-1)))) + (((4.748661418654273e-5) * (Sqrt((x4)^(-3)))) + (((-18095.975722213127) * (Id((x4)^(3)))) + ((-0.1349147848278328) * (Sqrt((x0)^(1)))))))))))))))))) / ((1.0) + (((71.64235702844093) * (Sqrt((((x2)^(-3)) * ((x0)^(-3))) * ((x4)^(3))))) + (((-9.87350210520502) * (Tanh(((x2)^(-1)) * ((x3)^(-3))))) + (((4.950154589210007) * (Sqrt(((x4)^(-1)) * ((x0)^(-2))))) + ((8.348428863744317e-2) * (Tanh((((((x2)^(3)) * ((x3)^(-2))) * ((x0)^(2))) * ((x4)^(1))) * ((x2)^(-1))))))))))","[[-4911.585534406111,-0.9734680145537367,-0.9458383429542603,5.4643014712314475e-2,-3336.6620946281387,6285.505675389304,-0.389184026944319,-1261064.9000621117,-0.3417173787014982,-4.601986798055599,-173.4365000859156,5047.825517661019,4.748661418654273e-5,-18095.975722213127,-0.1349147848278328,71.64235702844093,-9.87350210520502,4.950154589210007,8.348428863744317e-2]]","(((-4911.585534406111) + (((-0.9734680145537367) * (np.tanh((x[:,1])**(1)))) + (((-0.9458383429542603) * (np.log(((x[:,0])**(2)) * ((x[:,4])**(3))))) + (((5.4643014712314475e-2) * (np.sqrt((x[:,3])**(2)))) + (((-3336.6620946281387) * (np.sqrt(((x[:,0])**(-1)) * ((x[:,4])**(2))))) + (((6285.505675389304) * (np.sin((((x[:,2])**(-3)) * ((x[:,4])**(2))) * ((x[:,3])**(-3))))) + (((-0.389184026944319) * (np.cos((x[:,2])**(-2)))) + (((-1261064.9000621117) * (np.tanh(((x[:,4])**(1)) * ((x[:,0])**(-2))))) + (((-0.3417173787014982) * (np.sin((x[:,1])**(2)))) + (((-4.601986798055599) * (np.sqrt((x[:,3])**(-1)))) + (((-173.4365000859156) * (np.sin((((x[:,2])**(-2)) * ((x[:,4])**(1))) * ((x[:,0])**(-1))))) + (((5047.825517661019) * (np.exp((x[:,0])**(-1)))) + (((4.748661418654273e-5) * (np.sqrt((x[:,4])**(-3)))) + (((-18095.975722213127) * (((x[:,4])**(3)))) + ((-0.1349147848278328) * (np.sqrt((x[:,0])**(1)))))))))))))))))) / ((1.0) + (((71.64235702844093) * (np.sqrt((((x[:,2])**(-3)) * ((x[:,0])**(-3))) * ((x[:,4])**(3))))) + (((-9.87350210520502) * (np.tanh(((x[:,2])**(-1)) * ((x[:,3])**(-3))))) + (((4.950154589210007) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,0])**(-2))))) + ((8.348428863744317e-2) * (np.tanh((((((x[:,2])**(3)) * ((x[:,3])**(-2))) * ((x[:,0])**(2))) * ((x[:,4])**(1))) * ((x[:,2])**(-1))))))))))"
"Id(((151.1228184898126) + (((-2.151250790759618e-3) * (Id(((x4)^(1)) * ((x3)^(2))))) + (((1.0870800177751896) * (Tanh(((((x1)^(2)) * ((x3)^(2))) * ((x0)^(-2))) * ((x2)^(-1))))) + (((-0.11124873930304358) * (Id(((x4)^(-1)) * ((x2)^(2))))) + (((-5.909006704381835e-8) * (Id(((x4)^(-1)) * ((x0)^(1))))) + (((2214.38611123126) * (Id(((x4)^(-1)) * ((x0)^(-2))))) + (((-2.903226362691324) * (Tanh((((x4)^(1)) * ((x0)^(3))) * ((x1)^(1))))) + (((7.512604642163115) * (Tanh((x2)^(1)))) + (((-13.037952121845617) * (Tanh(((((x0)^(2)) * ((x3)^(-1))) * ((x4)^(1))) * ((x0)^(-1))))) + (((-3.476755706061674) * (Cos(((x2)^(-1)) * ((x3)^(-1))))) + ((-1.013869895216697) * (Sqrt(((x0)^(1)) * ((x2)^(1))))))))))))))) / ((1.0) + (((1.6309495152377508e-8) * (Sqrt((((x2)^(3)) * ((x4)^(-1))) * ((x0)^(3))))) + (((-1.0470499897347399e-4) * (Sqrt(((x2)^(2)) * ((x0)^(2))))) + (((2214.364463524654) * (Id(((x4)^(1)) * ((x3)^(-2))))) + (((-214.77708153875332) * (Sin(((((x4)^(3)) * ((x2)^(-2))) * ((x3)^(-2))) * ((x2)^(-1))))) + (((6.663790041669287e-3) * (Cos((x2)^(-1)))) + (((3.3070679678208275) * (Sqrt(((x4)^(-2)) * ((x0)^(-3))))) + (((15.835600918518555) * (Id((((x1)^(2)) * ((x4)^(2))) * ((x0)^(-1))))) + ((7.429660594214984e-4) * (Sqrt((((x0)^(-1)) * ((x1)^(2))) * ((x2)^(-3))))))))))))))","[[151.1228184898126,-2.151250790759618e-3,1.0870800177751896,-0.11124873930304358,-5.909006704381835e-8,2214.38611123126,-2.903226362691324,7.512604642163115,-13.037952121845617,-3.476755706061674,-1.013869895216697,1.6309495152377508e-8,-1.0470499897347399e-4,2214.364463524654,-214.77708153875332,6.663790041669287e-3,3.3070679678208275,15.835600918518555,7.429660594214984e-4]]","(((151.1228184898126) + (((-2.151250790759618e-3) * ((((x[:,4])**(1)) * ((x[:,3])**(2))))) + (((1.0870800177751896) * (np.tanh(((((x[:,1])**(2)) * ((x[:,3])**(2))) * ((x[:,0])**(-2))) * ((x[:,2])**(-1))))) + (((-0.11124873930304358) * ((((x[:,4])**(-1)) * ((x[:,2])**(2))))) + (((-5.909006704381835e-8) * ((((x[:,4])**(-1)) * ((x[:,0])**(1))))) + (((2214.38611123126) * ((((x[:,4])**(-1)) * ((x[:,0])**(-2))))) + (((-2.903226362691324) * (np.tanh((((x[:,4])**(1)) * ((x[:,0])**(3))) * ((x[:,1])**(1))))) + (((7.512604642163115) * (np.tanh((x[:,2])**(1)))) + (((-13.037952121845617) * (np.tanh(((((x[:,0])**(2)) * ((x[:,3])**(-1))) * ((x[:,4])**(1))) * ((x[:,0])**(-1))))) + (((-3.476755706061674) * (np.cos(((x[:,2])**(-1)) * ((x[:,3])**(-1))))) + ((-1.013869895216697) * (np.sqrt(((x[:,0])**(1)) * ((x[:,2])**(1))))))))))))))) / ((1.0) + (((1.6309495152377508e-8) * (np.sqrt((((x[:,2])**(3)) * ((x[:,4])**(-1))) * ((x[:,0])**(3))))) + (((-1.0470499897347399e-4) * (np.sqrt(((x[:,2])**(2)) * ((x[:,0])**(2))))) + (((2214.364463524654) * ((((x[:,4])**(1)) * ((x[:,3])**(-2))))) + (((-214.77708153875332) * (np.sin(((((x[:,4])**(3)) * ((x[:,2])**(-2))) * ((x[:,3])**(-2))) * ((x[:,2])**(-1))))) + (((6.663790041669287e-3) * (np.cos((x[:,2])**(-1)))) + (((3.3070679678208275) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-3))))) + (((15.835600918518555) * (((((x[:,1])**(2)) * ((x[:,4])**(2))) * ((x[:,0])**(-1))))) + ((7.429660594214984e-4) * (np.sqrt((((x[:,0])**(-1)) * ((x[:,1])**(2))) * ((x[:,2])**(-3))))))))))))))"
"Id(((121.16168703935689) + (((-3.3032162935882674) * (Sqrt((((((x1)^(3)) * ((x2)^(1))) * ((x3)^(-2))) * ((x4)^(-2))) * ((x0)^(-1))))) + (((1.5392487075089948e7) * (Tanh((x0)^(-3)))) + (((3.698363477454121) * (Log(((x0)^(2)) * ((x3)^(2))))) + (((-1.7598956321787518) * (Log(((x0)^(2)) * ((x4)^(3))))) + (((-0.34511185785667786) * (Sin(((x4)^(-3)) * ((x1)^(2))))) + (((5.833931051435155) * (Log(((x2)^(-1)) * ((x0)^(-2))))) + (((-4.462243442290084e-4) * (Sqrt((x0)^(2)))) + ((-26723.451911551485) * (Sin((x4)^(3)))))))))))) / ((1.0) + (((-3922.1276988133864) * (Tanh((((x1)^(1)) * ((x4)^(2))) * ((x0)^(-2))))) + (((-802.6199040322842) * (Id((x3)^(-3)))) + (((1.2832519003099614e-5) * (Sqrt((((((x4)^(-1)) * ((x2)^(-2))) * ((x0)^(-1))) * ((x3)^(2))) * ((x1)^(1))))) + (((1.6046798506576317e-2) * (Sqrt((((x0)^(-2)) * ((x2)^(1))) * ((x4)^(-3))))) + ((1.4132176495146278) * (Tanh(((x0)^(-1)) * ((x2)^(-1)))))))))))","[[121.16168703935689,-3.3032162935882674,1.5392487075089948e7,3.698363477454121,-1.7598956321787518,-0.34511185785667786,5.833931051435155,-4.462243442290084e-4,-26723.451911551485,-3922.1276988133864,-802.6199040322842,1.2832519003099614e-5,1.6046798506576317e-2,1.4132176495146278]]","(((121.16168703935689) + (((-3.3032162935882674) * (np.sqrt((((((x[:,1])**(3)) * ((x[:,2])**(1))) * ((x[:,3])**(-2))) * ((x[:,4])**(-2))) * ((x[:,0])**(-1))))) + (((1.5392487075089948e7) * (np.tanh((x[:,0])**(-3)))) + (((3.698363477454121) * (np.log(((x[:,0])**(2)) * ((x[:,3])**(2))))) + (((-1.7598956321787518) * (np.log(((x[:,0])**(2)) * ((x[:,4])**(3))))) + (((-0.34511185785667786) * (np.sin(((x[:,4])**(-3)) * ((x[:,1])**(2))))) + (((5.833931051435155) * (np.log(((x[:,2])**(-1)) * ((x[:,0])**(-2))))) + (((-4.462243442290084e-4) * (np.sqrt((x[:,0])**(2)))) + ((-26723.451911551485) * (np.sin((x[:,4])**(3)))))))))))) / ((1.0) + (((-3922.1276988133864) * (np.tanh((((x[:,1])**(1)) * ((x[:,4])**(2))) * ((x[:,0])**(-2))))) + (((-802.6199040322842) * (((x[:,3])**(-3)))) + (((1.2832519003099614e-5) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-1))) * ((x[:,3])**(2))) * ((x[:,1])**(1))))) + (((1.6046798506576317e-2) * (np.sqrt((((x[:,0])**(-2)) * ((x[:,2])**(1))) * ((x[:,4])**(-3))))) + ((1.4132176495146278) * (np.tanh(((x[:,0])**(-1)) * ((x[:,2])**(-1)))))))))))"
"Id(((7.130555751156955e8) + (((1.29039639719655e7) * (Cos((x3)^(-1)))) + (((0.6448880219187245) * (Cos(((x0)^(1)) * ((x4)^(2))))) + (((9.341101699713916e7) * (Sin((x3)^(-3)))) + (((-178.05428256634073) * (Sin(((x4)^(2)) * ((x1)^(1))))) + (((-2.6053991032402857e-2) * (Sqrt((((x2)^(3)) * ((x1)^(3))) * ((x3)^(2))))) + (((7.339124132792052e-2) * (Sin((((x2)^(1)) * ((x4)^(-2))) * ((x1)^(2))))) + (((-624.9552111704675) * (Sqrt(((((x1)^(2)) * ((x4)^(1))) * ((x3)^(-2))) * ((x2)^(3))))) + (((72676.14272680401) * (Id((x0)^(-2)))) + (((-75.34022816926819) * (Id(((x3)^(1)) * ((x4)^(2))))) + (((0.1004699320155229) * (Sqrt((((x3)^(2)) * ((x2)^(-1))) * ((x4)^(1))))) + (((0.10173082979800627) * (Sin(((((x1)^(2)) * ((x0)^(1))) * ((x3)^(1))) * ((x2)^(-3))))) + (((0.47463163824697774) * (Sin((((((x4)^(-3)) * ((x1)^(3))) * ((x2)^(3))) * ((x3)^(-2))) * ((x1)^(1))))) + (((1.6833180572163022) * (Log(((x4)^(3)) * ((x2)^(-1))))) + (((-3064.4045064067263) * (Log((x3)^(2)))) + (((-4.649653232608052) * (Id(((((x3)^(-1)) * ((x2)^(1))) * ((x4)^(-2))) * ((x0)^(-1))))) + (((138.21670350316614) * (Sin(((((x1)^(3)) * ((x4)^(2))) * ((x0)^(-2))) * ((x0)^(1))))) + (((1.3065916251406482) * (Cos(((((x2)^(-2)) * ((x0)^(-1))) * ((x4)^(1))) * ((x3)^(1))))) + (((4129.908785949233) * (Sqrt((x4)^(3)))) + (((-1.1203316407651744) * (Sin(((x0)^(-1)) * ((x2)^(-2))))) + (((-6.009420593868892) * (Sin((((((x0)^(-3)) * ((x3)^(1))) * ((x2)^(-3))) * ((x1)^(2))) * ((x4)^(1))))) + (((6.668318320303211) * (Log((x2)^(-1)))) + (((-5.774842677689523e8) * (Cos((x4)^(3)))) + (((4.820351336806682) * (Id(((((x2)^(1)) * ((x0)^(1))) * ((x3)^(-3))) * ((x1)^(2))))) + (((-0.35133138045327916) * (Sin((((x1)^(2)) * ((x4)^(2))) * ((x0)^(3))))) + (((4.435741177518791) * (Sqrt((((((x3)^(-3)) * ((x2)^(-2))) * ((x1)^(2))) * ((x4)^(2))) * ((x0)^(1))))) + (((-0.9623007892505199) * (Cos((((x2)^(3)) * ((x0)^(1))) * ((x3)^(-1))))) + (((-18.858068931002386) * (Tanh(((x1)^(2)) * ((x0)^(-1))))) + (((1.2002117981943332e-4) * (Sqrt((((x4)^(-1)) * ((x0)^(2))) * ((x2)^(2))))) + (((62.807329254557146) * (Sqrt((x3)^(2)))) + (((-1.58695772546691e-6) * (Id(((x0)^(2)) * ((x3)^(-1))))) + (((-5.875604526419475) * (Tanh(((((x0)^(2)) * ((x2)^(1))) * ((x3)^(-1))) * ((x4)^(2))))) + (((-9466.727092096386) * (Id((x4)^(2)))) + (((-1.484524724327617e8) * (Exp(((x3)^(-2)) * ((x4)^(3))))) + (((1.9554995669278244e-4) * (Id((((((x2)^(3)) * ((x1)^(3))) * ((x4)^(-1))) * ((x3)^(-2))) * ((x3)^(3))))) + (((-10.089135875929454) * (Tanh((((x4)^(-3)) * ((x0)^(-3))) * ((x1)^(1))))) + (((2.9567146102668804) * (Id(((x2)^(-3)) * ((x3)^(-3))))) + (((6.462392292083862) * (Cos((x2)^(-1)))) + (((-1.5871142742607316) * (Sqrt((((x1)^(3)) * ((x0)^(1))) * ((x3)^(-3))))) + (((7.042444700625786) * (Id((((((x3)^(2)) * ((x4)^(-1))) * ((x0)^(-2))) * ((x1)^(1))) * ((x3)^(-1))))) + (((7.031452576429368) * (Tanh((((x0)^(2)) * ((x4)^(1))) * ((x3)^(-2))))) + (((0.23786856061786166) * (Cos((x0)^(1)))) + ((7.202172778778874) * (Log((((x0)^(-1)) * ((x4)^(-1))) * ((x3)^(1))))))))))))))))))))))))))))))))))))))))))))))) / ((1.0) + (((-5.1281703097255216e-2) * (Cos((x3)^(2)))) + (((-8.758892328876292e-3) * (Sin((((x1)^(1)) * ((x4)^(-1))) * ((x0)^(-1))))) + (((1.4921755582742668e-2) * (Sin((((x4)^(-1)) * ((x1)^(3))) * ((x4)^(3))))) + (((5.667448926399113e-2) * (Cos((x2)^(-1)))) + (((0.42210107519122975) * (Sin((((((x3)^(-2)) * ((x4)^(1))) * ((x1)^(3))) * ((x0)^(1))) * ((x3)^(-3))))) + (((-2.2103332373660516) * (Tanh((((x4)^(1)) * ((x2)^(-3))) * ((x3)^(-3))))) + (((3.4764168700427978e-3) * (Sin((x1)^(2)))) + ((0.11525982212272873) * (Sqrt(((x2)^(-2)) * ((x0)^(-1))))))))))))))","[[7.130555751156955e8,1.29039639719655e7,0.6448880219187245,9.341101699713916e7,-178.05428256634073,-2.6053991032402857e-2,7.339124132792052e-2,-624.9552111704675,72676.14272680401,-75.34022816926819,0.1004699320155229,0.10173082979800627,0.47463163824697774,1.6833180572163022,-3064.4045064067263,-4.649653232608052,138.21670350316614,1.3065916251406482,4129.908785949233,-1.1203316407651744,-6.009420593868892,6.668318320303211,-5.774842677689523e8,4.820351336806682,-0.35133138045327916,4.435741177518791,-0.9623007892505199,-18.858068931002386,1.2002117981943332e-4,62.807329254557146,-1.58695772546691e-6,-5.875604526419475,-9466.727092096386,-1.484524724327617e8,1.9554995669278244e-4,-10.089135875929454,2.9567146102668804,6.462392292083862,-1.5871142742607316,7.042444700625786,7.031452576429368,0.23786856061786166,7.202172778778874,-5.1281703097255216e-2,-8.758892328876292e-3,1.4921755582742668e-2,5.667448926399113e-2,0.42210107519122975,-2.2103332373660516,3.4764168700427978e-3,0.11525982212272873]]","(((7.130555751156955e8) + (((1.29039639719655e7) * (np.cos((x[:,3])**(-1)))) + (((0.6448880219187245) * (np.cos(((x[:,0])**(1)) * ((x[:,4])**(2))))) + (((9.341101699713916e7) * (np.sin((x[:,3])**(-3)))) + (((-178.05428256634073) * (np.sin(((x[:,4])**(2)) * ((x[:,1])**(1))))) + (((-2.6053991032402857e-2) * (np.sqrt((((x[:,2])**(3)) * ((x[:,1])**(3))) * ((x[:,3])**(2))))) + (((7.339124132792052e-2) * (np.sin((((x[:,2])**(1)) * ((x[:,4])**(-2))) * ((x[:,1])**(2))))) + (((-624.9552111704675) * (np.sqrt(((((x[:,1])**(2)) * ((x[:,4])**(1))) * ((x[:,3])**(-2))) * ((x[:,2])**(3))))) + (((72676.14272680401) * (((x[:,0])**(-2)))) + (((-75.34022816926819) * ((((x[:,3])**(1)) * ((x[:,4])**(2))))) + (((0.1004699320155229) * (np.sqrt((((x[:,3])**(2)) * ((x[:,2])**(-1))) * ((x[:,4])**(1))))) + (((0.10173082979800627) * (np.sin(((((x[:,1])**(2)) * ((x[:,0])**(1))) * ((x[:,3])**(1))) * ((x[:,2])**(-3))))) + (((0.47463163824697774) * (np.sin((((((x[:,4])**(-3)) * ((x[:,1])**(3))) * ((x[:,2])**(3))) * ((x[:,3])**(-2))) * ((x[:,1])**(1))))) + (((1.6833180572163022) * (np.log(((x[:,4])**(3)) * ((x[:,2])**(-1))))) + (((-3064.4045064067263) * (np.log((x[:,3])**(2)))) + (((-4.649653232608052) * ((((((x[:,3])**(-1)) * ((x[:,2])**(1))) * ((x[:,4])**(-2))) * ((x[:,0])**(-1))))) + (((138.21670350316614) * (np.sin(((((x[:,1])**(3)) * ((x[:,4])**(2))) * ((x[:,0])**(-2))) * ((x[:,0])**(1))))) + (((1.3065916251406482) * (np.cos(((((x[:,2])**(-2)) * ((x[:,0])**(-1))) * ((x[:,4])**(1))) * ((x[:,3])**(1))))) + (((4129.908785949233) * (np.sqrt((x[:,4])**(3)))) + (((-1.1203316407651744) * (np.sin(((x[:,0])**(-1)) * ((x[:,2])**(-2))))) + (((-6.009420593868892) * (np.sin((((((x[:,0])**(-3)) * ((x[:,3])**(1))) * ((x[:,2])**(-3))) * ((x[:,1])**(2))) * ((x[:,4])**(1))))) + (((6.668318320303211) * (np.log((x[:,2])**(-1)))) + (((-5.774842677689523e8) * (np.cos((x[:,4])**(3)))) + (((4.820351336806682) * ((((((x[:,2])**(1)) * ((x[:,0])**(1))) * ((x[:,3])**(-3))) * ((x[:,1])**(2))))) + (((-0.35133138045327916) * (np.sin((((x[:,1])**(2)) * ((x[:,4])**(2))) * ((x[:,0])**(3))))) + (((4.435741177518791) * (np.sqrt((((((x[:,3])**(-3)) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,4])**(2))) * ((x[:,0])**(1))))) + (((-0.9623007892505199) * (np.cos((((x[:,2])**(3)) * ((x[:,0])**(1))) * ((x[:,3])**(-1))))) + (((-18.858068931002386) * (np.tanh(((x[:,1])**(2)) * ((x[:,0])**(-1))))) + (((1.2002117981943332e-4) * (np.sqrt((((x[:,4])**(-1)) * ((x[:,0])**(2))) * ((x[:,2])**(2))))) + (((62.807329254557146) * (np.sqrt((x[:,3])**(2)))) + (((-1.58695772546691e-6) * ((((x[:,0])**(2)) * ((x[:,3])**(-1))))) + (((-5.875604526419475) * (np.tanh(((((x[:,0])**(2)) * ((x[:,2])**(1))) * ((x[:,3])**(-1))) * ((x[:,4])**(2))))) + (((-9466.727092096386) * (((x[:,4])**(2)))) + (((-1.484524724327617e8) * (np.exp(((x[:,3])**(-2)) * ((x[:,4])**(3))))) + (((1.9554995669278244e-4) * (((((((x[:,2])**(3)) * ((x[:,1])**(3))) * ((x[:,4])**(-1))) * ((x[:,3])**(-2))) * ((x[:,3])**(3))))) + (((-10.089135875929454) * (np.tanh((((x[:,4])**(-3)) * ((x[:,0])**(-3))) * ((x[:,1])**(1))))) + (((2.9567146102668804) * ((((x[:,2])**(-3)) * ((x[:,3])**(-3))))) + (((6.462392292083862) * (np.cos((x[:,2])**(-1)))) + (((-1.5871142742607316) * (np.sqrt((((x[:,1])**(3)) * ((x[:,0])**(1))) * ((x[:,3])**(-3))))) + (((7.042444700625786) * (((((((x[:,3])**(2)) * ((x[:,4])**(-1))) * ((x[:,0])**(-2))) * ((x[:,1])**(1))) * ((x[:,3])**(-1))))) + (((7.031452576429368) * (np.tanh((((x[:,0])**(2)) * ((x[:,4])**(1))) * ((x[:,3])**(-2))))) + (((0.23786856061786166) * (np.cos((x[:,0])**(1)))) + ((7.202172778778874) * (np.log((((x[:,0])**(-1)) * ((x[:,4])**(-1))) * ((x[:,3])**(1))))))))))))))))))))))))))))))))))))))))))))))) / ((1.0) + (((-5.1281703097255216e-2) * (np.cos((x[:,3])**(2)))) + (((-8.758892328876292e-3) * (np.sin((((x[:,1])**(1)) * ((x[:,4])**(-1))) * ((x[:,0])**(-1))))) + (((1.4921755582742668e-2) * (np.sin((((x[:,4])**(-1)) * ((x[:,1])**(3))) * ((x[:,4])**(3))))) + (((5.667448926399113e-2) * (np.cos((x[:,2])**(-1)))) + (((0.42210107519122975) * (np.sin((((((x[:,3])**(-2)) * ((x[:,4])**(1))) * ((x[:,1])**(3))) * ((x[:,0])**(1))) * ((x[:,3])**(-3))))) + (((-2.2103332373660516) * (np.tanh((((x[:,4])**(1)) * ((x[:,2])**(-3))) * ((x[:,3])**(-3))))) + (((3.4764168700427978e-3) * (np.sin((x[:,1])**(2)))) + ((0.11525982212272873) * (np.sqrt(((x[:,2])**(-2)) * ((x[:,0])**(-1))))))))))))))"
"Id(((145.2908890768691) + (((-2.4402481061194905) * (Tanh((((((x1)^(3)) * ((x4)^(2))) * ((x2)^(-2))) * ((x0)^(1))) * ((x3)^(-2))))) + (((-2.3730206336656093e-7) * (Id((((x1)^(3)) * ((x0)^(-1))) * ((x3)^(3))))) + (((-8.531485499296142) * (Sin(((x4)^(2)) * ((x1)^(2))))) + (((0.38879738192114865) * (Cos((x0)^(1)))) + (((80.62488675382221) * (Tanh((x4)^(1)))) + (((-10.462773583819875) * (Cos(((x4)^(3)) * ((x2)^(-3))))) + (((-538.5664183625498) * (Sqrt(((x2)^(1)) * ((x3)^(-3))))) + (((-44.41954882978004) * (Tanh(((x3)^(-1)) * ((x1)^(1))))) + (((10.0695372707128) * (Sqrt(((x4)^(-3)) * ((x0)^(-3))))) + (((-0.6376470149488989) * (Log((x4)^(3)))) + (((-0.1618627618344849) * (Sqrt((((x1)^(1)) * ((x4)^(-2))) * ((x0)^(-1))))) + (((-26.61773014070297) * (Sqrt(((x0)^(-2)) * ((x2)^(-3))))) + (((8.117955298330855) * (Tanh((((((x4)^(-2)) * ((x2)^(-3))) * ((x3)^(2))) * ((x2)^(1))) * ((x0)^(-3))))) + (((5.2798768510729475e-3) * (Id(((x0)^(1)) * ((x2)^(1))))) + (((-0.9337774907247054) * (Sin((x1)^(2)))) + ((1358.9197657757823) * (Id(((x0)^(-3)) * ((x2)^(-3))))))))))))))))))))) / ((1.0) + (((-2.0830847634777883e-2) * (Sin(((((x3)^(-3)) * ((x1)^(2))) * ((x0)^(-1))) * ((x2)^(-3))))) + (((-0.29070062717923273) * (Sin(((x1)^(2)) * ((x3)^(-2))))) + (((2.4425785270870367e-6) * (Sqrt(((x0)^(3)) * ((x3)^(-2))))) + (((-2.2933518831538546e-2) * (Id(((x2)^(-3)) * ((x3)^(-3))))) + (((6.300392056128532e-3) * (Cos((x2)^(-1)))) + (((6.606131688086565e-3) * (Sqrt(((x2)^(1)) * ((x0)^(1))))) + (((2.888386408958217e-2) * (Sqrt((((x0)^(-2)) * ((x4)^(-3))) * ((x2)^(1))))) + ((150.4600281851911) * (Sin((x4)^(3)))))))))))))","[[145.2908890768691,-2.4402481061194905,-2.3730206336656093e-7,-8.531485499296142,0.38879738192114865,80.62488675382221,-10.462773583819875,-538.5664183625498,-44.41954882978004,10.0695372707128,-0.6376470149488989,-0.1618627618344849,-26.61773014070297,8.117955298330855,5.2798768510729475e-3,-0.9337774907247054,1358.9197657757823,-2.0830847634777883e-2,-0.29070062717923273,2.4425785270870367e-6,-2.2933518831538546e-2,6.300392056128532e-3,6.606131688086565e-3,2.888386408958217e-2,150.4600281851911]]","(((145.2908890768691) + (((-2.4402481061194905) * (np.tanh((((((x[:,1])**(3)) * ((x[:,4])**(2))) * ((x[:,2])**(-2))) * ((x[:,0])**(1))) * ((x[:,3])**(-2))))) + (((-2.3730206336656093e-7) * (((((x[:,1])**(3)) * ((x[:,0])**(-1))) * ((x[:,3])**(3))))) + (((-8.531485499296142) * (np.sin(((x[:,4])**(2)) * ((x[:,1])**(2))))) + (((0.38879738192114865) * (np.cos((x[:,0])**(1)))) + (((80.62488675382221) * (np.tanh((x[:,4])**(1)))) + (((-10.462773583819875) * (np.cos(((x[:,4])**(3)) * ((x[:,2])**(-3))))) + (((-538.5664183625498) * (np.sqrt(((x[:,2])**(1)) * ((x[:,3])**(-3))))) + (((-44.41954882978004) * (np.tanh(((x[:,3])**(-1)) * ((x[:,1])**(1))))) + (((10.0695372707128) * (np.sqrt(((x[:,4])**(-3)) * ((x[:,0])**(-3))))) + (((-0.6376470149488989) * (np.log((x[:,4])**(3)))) + (((-0.1618627618344849) * (np.sqrt((((x[:,1])**(1)) * ((x[:,4])**(-2))) * ((x[:,0])**(-1))))) + (((-26.61773014070297) * (np.sqrt(((x[:,0])**(-2)) * ((x[:,2])**(-3))))) + (((8.117955298330855) * (np.tanh((((((x[:,4])**(-2)) * ((x[:,2])**(-3))) * ((x[:,3])**(2))) * ((x[:,2])**(1))) * ((x[:,0])**(-3))))) + (((5.2798768510729475e-3) * ((((x[:,0])**(1)) * ((x[:,2])**(1))))) + (((-0.9337774907247054) * (np.sin((x[:,1])**(2)))) + ((1358.9197657757823) * ((((x[:,0])**(-3)) * ((x[:,2])**(-3))))))))))))))))))))) / ((1.0) + (((-2.0830847634777883e-2) * (np.sin(((((x[:,3])**(-3)) * ((x[:,1])**(2))) * ((x[:,0])**(-1))) * ((x[:,2])**(-3))))) + (((-0.29070062717923273) * (np.sin(((x[:,1])**(2)) * ((x[:,3])**(-2))))) + (((2.4425785270870367e-6) * (np.sqrt(((x[:,0])**(3)) * ((x[:,3])**(-2))))) + (((-2.2933518831538546e-2) * ((((x[:,2])**(-3)) * ((x[:,3])**(-3))))) + (((6.300392056128532e-3) * (np.cos((x[:,2])**(-1)))) + (((6.606131688086565e-3) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(1))))) + (((2.888386408958217e-2) * (np.sqrt((((x[:,0])**(-2)) * ((x[:,4])**(-3))) * ((x[:,2])**(1))))) + ((150.4600281851911) * (np.sin((x[:,4])**(3)))))))))))))"
"Id(((914.3830054035501) + (((-3.2515861358697468e-3) * (Sqrt(((((x3)^(3)) * ((x4)^(-3))) * ((x2)^(3))) * ((x0)^(-2))))) + (((39.930023758725156) * (Sqrt(((x0)^(-3)) * ((x3)^(3))))) + (((39409.29571672943) * (Tanh(((x2)^(-2)) * ((x0)^(-3))))) + (((-4.006980489880407e-5) * (Sqrt((((x3)^(-1)) * ((x4)^(-2))) * ((x0)^(1))))) + (((21.470346923751002) * (Sqrt((((x4)^(1)) * ((x3)^(-3))) * ((x2)^(-3))))) + (((-715.2053235431903) * (Cos((x4)^(1)))) + (((-0.4439856986908377) * (Sin(((x3)^(3)) * ((x4)^(1))))) + (((11.849312861754733) * (Tanh(((x3)^(1)) * ((x4)^(1))))) + (((2.968859683611285) * (Log(((x2)^(-2)) * ((x3)^(-3))))) + (((74.34503831492752) * (Sqrt((x3)^(-1)))) + (((5.789544524288509) * (Log((x3)^(3)))) + (((1.7693519402081767e-4) * (Sqrt(((((x0)^(3)) * ((x4)^(1))) * ((x2)^(-1))) * ((x2)^(2))))) + (((-0.74269682904804) * (Cos((x2)^(-1)))) + (((-9.422983713514931) * (Tanh(((((x3)^(2)) * ((x0)^(-3))) * ((x4)^(-1))) * ((x2)^(-2))))) + (((-7947.872056283456) * (Sqrt(((x4)^(3)) * ((x0)^(-1))))) + (((-6.514037869767651e-4) * (Sqrt((x0)^(2)))) + (((-100.59208168903888) * (Cos(((x2)^(-2)) * ((x3)^(-3))))) + (((-7.795050902609546) * (Sqrt(((((x0)^(-2)) * ((x2)^(-2))) * ((x3)^(1))) * ((x1)^(1))))) + (((-3.142036819877292e-4) * (Sqrt(((x4)^(-2)) * ((x1)^(3))))) + (((-34.768701444615616) * (Tanh(((x0)^(-1)) * ((x4)^(-1))))) + (((-3.549562562583329) * (Log(((x4)^(3)) * ((x0)^(3))))) + ((105.06543553492732) * (Sqrt(((x1)^(2)) * ((x0)^(-2))))))))))))))))))))))))))) / ((1.0) + ((764.5006072714453) * (Sqrt((((x4)^(2)) * ((x3)^(-2))) * ((x0)^(-1)))))))","[[914.3830054035501,-3.2515861358697468e-3,39.930023758725156,39409.29571672943,-4.006980489880407e-5,21.470346923751002,-715.2053235431903,-0.4439856986908377,11.849312861754733,2.968859683611285,74.34503831492752,5.789544524288509,1.7693519402081767e-4,-0.74269682904804,-9.422983713514931,-7947.872056283456,-6.514037869767651e-4,-100.59208168903888,-7.795050902609546,-3.142036819877292e-4,-34.768701444615616,-3.549562562583329,105.06543553492732,764.5006072714453]]","(((914.3830054035501) + (((-3.2515861358697468e-3) * (np.sqrt(((((x[:,3])**(3)) * ((x[:,4])**(-3))) * ((x[:,2])**(3))) * ((x[:,0])**(-2))))) + (((39.930023758725156) * (np.sqrt(((x[:,0])**(-3)) * ((x[:,3])**(3))))) + (((39409.29571672943) * (np.tanh(((x[:,2])**(-2)) * ((x[:,0])**(-3))))) + (((-4.006980489880407e-5) * (np.sqrt((((x[:,3])**(-1)) * ((x[:,4])**(-2))) * ((x[:,0])**(1))))) + (((21.470346923751002) * (np.sqrt((((x[:,4])**(1)) * ((x[:,3])**(-3))) * ((x[:,2])**(-3))))) + (((-715.2053235431903) * (np.cos((x[:,4])**(1)))) + (((-0.4439856986908377) * (np.sin(((x[:,3])**(3)) * ((x[:,4])**(1))))) + (((11.849312861754733) * (np.tanh(((x[:,3])**(1)) * ((x[:,4])**(1))))) + (((2.968859683611285) * (np.log(((x[:,2])**(-2)) * ((x[:,3])**(-3))))) + (((74.34503831492752) * (np.sqrt((x[:,3])**(-1)))) + (((5.789544524288509) * (np.log((x[:,3])**(3)))) + (((1.7693519402081767e-4) * (np.sqrt(((((x[:,0])**(3)) * ((x[:,4])**(1))) * ((x[:,2])**(-1))) * ((x[:,2])**(2))))) + (((-0.74269682904804) * (np.cos((x[:,2])**(-1)))) + (((-9.422983713514931) * (np.tanh(((((x[:,3])**(2)) * ((x[:,0])**(-3))) * ((x[:,4])**(-1))) * ((x[:,2])**(-2))))) + (((-7947.872056283456) * (np.sqrt(((x[:,4])**(3)) * ((x[:,0])**(-1))))) + (((-6.514037869767651e-4) * (np.sqrt((x[:,0])**(2)))) + (((-100.59208168903888) * (np.cos(((x[:,2])**(-2)) * ((x[:,3])**(-3))))) + (((-7.795050902609546) * (np.sqrt(((((x[:,0])**(-2)) * ((x[:,2])**(-2))) * ((x[:,3])**(1))) * ((x[:,1])**(1))))) + (((-3.142036819877292e-4) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,1])**(3))))) + (((-34.768701444615616) * (np.tanh(((x[:,0])**(-1)) * ((x[:,4])**(-1))))) + (((-3.549562562583329) * (np.log(((x[:,4])**(3)) * ((x[:,0])**(3))))) + ((105.06543553492732) * (np.sqrt(((x[:,1])**(2)) * ((x[:,0])**(-2))))))))))))))))))))))))))) / ((1.0) + ((764.5006072714453) * (np.sqrt((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,0])**(-1)))))))"
"Id(((6587.404195351284) + (((13.75137460991952) * (Sqrt((((x2)^(1)) * ((x1)^(3))) * ((x3)^(-3))))) + (((5.045294247183833) * (Log((x0)^(-2)))) + (((-6442.876071879707) * (Exp((x0)^(-1)))) + (((63465.39686070764) * (Sqrt((x0)^(-3)))) + (((-0.41709029152123) * (Cos((x3)^(3)))) + (((-6.704704622501755) * (Tanh(((x4)^(-2)) * ((x1)^(2))))) + (((-5.018733562659298e-10) * (Id(((x0)^(2)) * ((x2)^(-1))))) + (((162385.55692356025) * (Id(((x2)^(1)) * ((x4)^(3))))) + (((-0.12345388218051334) * (Sqrt((x3)^(2)))) + (((13.181274160765517) * (Log((x3)^(2)))) + (((-6.2918884668303665) * (Tanh(((x1)^(2)) * ((x3)^(-1))))) + (((-1.792230073150597e-2) * (Id((x1)^(2)))) + (((-5.48688274721276) * (Log(((x2)^(1)) * ((x3)^(2))))) + (((57.32160720268398) * (Sqrt(((x3)^(-3)) * ((x4)^(-1))))) + (((5.237403431650557) * (Tanh((((x4)^(-2)) * ((x2)^(-2))) * ((x0)^(-2))))) + (((-0.17451972066827315) * (Sqrt((((x0)^(-1)) * ((x4)^(-3))) * ((x2)^(3))))) + (((-0.5885395955183417) * (Sin((x1)^(2)))) + (((2.1557625598998343e-5) * (Id(((x2)^(-1)) * ((x3)^(2))))) + ((12.306744892192032) * (Sin((((x0)^(-3)) * ((x2)^(-3))) * ((x4)^(-1)))))))))))))))))))))))) / ((1.0) + (((5.563023743966361e-3) * (Sin(((x1)^(1)) * ((x3)^(2))))) + (((-1.3279406719339992) * (Sin((((x0)^(-1)) * ((x2)^(-2))) * ((x3)^(-1))))) + (((1.1722268360598101e-2) * (Cos((x2)^(-3)))) + (((0.41761149163901656) * (Sqrt(((x2)^(-3)) * ((x0)^(-2))))) + (((569.1533315699961) * (Tanh((x4)^(3)))) + (((0.12094447367698244) * (Id(((x4)^(-1)) * ((x0)^(-1))))) + ((-4.1370784188306864e-2) * (Tanh(((((x0)^(2)) * ((x3)^(-3))) * ((x2)^(3))) * ((x1)^(3)))))))))))))","[[6587.404195351284,13.75137460991952,5.045294247183833,-6442.876071879707,63465.39686070764,-0.41709029152123,-6.704704622501755,-5.018733562659298e-10,162385.55692356025,-0.12345388218051334,13.181274160765517,-6.2918884668303665,-1.792230073150597e-2,-5.48688274721276,57.32160720268398,5.237403431650557,-0.17451972066827315,-0.5885395955183417,2.1557625598998343e-5,12.306744892192032,5.563023743966361e-3,-1.3279406719339992,1.1722268360598101e-2,0.41761149163901656,569.1533315699961,0.12094447367698244,-4.1370784188306864e-2]]","(((6587.404195351284) + (((13.75137460991952) * (np.sqrt((((x[:,2])**(1)) * ((x[:,1])**(3))) * ((x[:,3])**(-3))))) + (((5.045294247183833) * (np.log((x[:,0])**(-2)))) + (((-6442.876071879707) * (np.exp((x[:,0])**(-1)))) + (((63465.39686070764) * (np.sqrt((x[:,0])**(-3)))) + (((-0.41709029152123) * (np.cos((x[:,3])**(3)))) + (((-6.704704622501755) * (np.tanh(((x[:,4])**(-2)) * ((x[:,1])**(2))))) + (((-5.018733562659298e-10) * ((((x[:,0])**(2)) * ((x[:,2])**(-1))))) + (((162385.55692356025) * ((((x[:,2])**(1)) * ((x[:,4])**(3))))) + (((-0.12345388218051334) * (np.sqrt((x[:,3])**(2)))) + (((13.181274160765517) * (np.log((x[:,3])**(2)))) + (((-6.2918884668303665) * (np.tanh(((x[:,1])**(2)) * ((x[:,3])**(-1))))) + (((-1.792230073150597e-2) * (((x[:,1])**(2)))) + (((-5.48688274721276) * (np.log(((x[:,2])**(1)) * ((x[:,3])**(2))))) + (((57.32160720268398) * (np.sqrt(((x[:,3])**(-3)) * ((x[:,4])**(-1))))) + (((5.237403431650557) * (np.tanh((((x[:,4])**(-2)) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + (((-0.17451972066827315) * (np.sqrt((((x[:,0])**(-1)) * ((x[:,4])**(-3))) * ((x[:,2])**(3))))) + (((-0.5885395955183417) * (np.sin((x[:,1])**(2)))) + (((2.1557625598998343e-5) * ((((x[:,2])**(-1)) * ((x[:,3])**(2))))) + ((12.306744892192032) * (np.sin((((x[:,0])**(-3)) * ((x[:,2])**(-3))) * ((x[:,4])**(-1)))))))))))))))))))))))) / ((1.0) + (((5.563023743966361e-3) * (np.sin(((x[:,1])**(1)) * ((x[:,3])**(2))))) + (((-1.3279406719339992) * (np.sin((((x[:,0])**(-1)) * ((x[:,2])**(-2))) * ((x[:,3])**(-1))))) + (((1.1722268360598101e-2) * (np.cos((x[:,2])**(-3)))) + (((0.41761149163901656) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((569.1533315699961) * (np.tanh((x[:,4])**(3)))) + (((0.12094447367698244) * ((((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + ((-4.1370784188306864e-2) * (np.tanh(((((x[:,0])**(2)) * ((x[:,3])**(-3))) * ((x[:,2])**(3))) * ((x[:,1])**(3)))))))))))))"
"Id(((107.01883212946024) + (((43.2239964876357) * (Sqrt((((x2)^(1)) * ((x3)^(-3))) * ((x1)^(3))))) + (((-1.4651686962376065) * (Sqrt(((x3)^(-2)) * ((x1)^(3))))) + (((2.867156985588692) * (Log((((x3)^(2)) * ((x0)^(3))) * ((x2)^(-2))))) + (((-7.246890325662122) * (Log((x3)^(-1)))) + (((-143630.84438400564) * (Sqrt((((x0)^(-2)) * ((x3)^(-1))) * ((x4)^(2))))) + (((-1.5656162664826756) * (Log(((x3)^(3)) * ((x4)^(3))))) + (((-6.567687365515752) * (Tanh((((((x4)^(-3)) * ((x0)^(-3))) * ((x2)^(-2))) * ((x3)^(-1))) * ((x1)^(1))))) + (((6.3060331925084) * (Tanh((((x2)^(-3)) * ((x4)^(2))) * ((x0)^(1))))) + (((-1.7131944745366445e-2) * (Sqrt(((((x1)^(2)) * ((x0)^(-2))) * ((x2)^(-3))) * ((x3)^(2))))) + (((-7.427650341455205) * (Sqrt((x0)^(-1)))) + (((9.36968273307805) * (Tanh(((x0)^(1)) * ((x2)^(2))))) + (((52.28558224091283) * (Sqrt(((((x4)^(-2)) * ((x3)^(-2))) * ((x0)^(-1))) * ((x2)^(1))))) + (((-17.097122788295863) * (Log((x0)^(1)))) + ((19.266384882232828) * (Id((((((x3)^(3)) * ((x4)^(-2))) * ((x0)^(-2))) * ((x3)^(-2))) * ((x3)^(-1))))))))))))))))))) / ((1.0) + (((-0.9271439791841698) * (Id((((x3)^(-3)) * ((x2)^(-3))) * ((x2)^(1))))) + (((7.0733575316958425e-3) * (Cos((x2)^(-1)))) + (((421.9892319100986) * (Id(((x4)^(2)) * ((x3)^(-1))))) + (((0.34522685187441293) * (Sqrt(((x0)^(-3)) * ((x4)^(-3))))) + ((3.7037620988419437e-9) * (Sqrt(((x0)^(3)) * ((x2)^(-1)))))))))))","[[107.01883212946024,43.2239964876357,-1.4651686962376065,2.867156985588692,-7.246890325662122,-143630.84438400564,-1.5656162664826756,-6.567687365515752,6.3060331925084,-1.7131944745366445e-2,-7.427650341455205,9.36968273307805,52.28558224091283,-17.097122788295863,19.266384882232828,-0.9271439791841698,7.0733575316958425e-3,421.9892319100986,0.34522685187441293,3.7037620988419437e-9]]","(((107.01883212946024) + (((43.2239964876357) * (np.sqrt((((x[:,2])**(1)) * ((x[:,3])**(-3))) * ((x[:,1])**(3))))) + (((-1.4651686962376065) * (np.sqrt(((x[:,3])**(-2)) * ((x[:,1])**(3))))) + (((2.867156985588692) * (np.log((((x[:,3])**(2)) * ((x[:,0])**(3))) * ((x[:,2])**(-2))))) + (((-7.246890325662122) * (np.log((x[:,3])**(-1)))) + (((-143630.84438400564) * (np.sqrt((((x[:,0])**(-2)) * ((x[:,3])**(-1))) * ((x[:,4])**(2))))) + (((-1.5656162664826756) * (np.log(((x[:,3])**(3)) * ((x[:,4])**(3))))) + (((-6.567687365515752) * (np.tanh((((((x[:,4])**(-3)) * ((x[:,0])**(-3))) * ((x[:,2])**(-2))) * ((x[:,3])**(-1))) * ((x[:,1])**(1))))) + (((6.3060331925084) * (np.tanh((((x[:,2])**(-3)) * ((x[:,4])**(2))) * ((x[:,0])**(1))))) + (((-1.7131944745366445e-2) * (np.sqrt(((((x[:,1])**(2)) * ((x[:,0])**(-2))) * ((x[:,2])**(-3))) * ((x[:,3])**(2))))) + (((-7.427650341455205) * (np.sqrt((x[:,0])**(-1)))) + (((9.36968273307805) * (np.tanh(((x[:,0])**(1)) * ((x[:,2])**(2))))) + (((52.28558224091283) * (np.sqrt(((((x[:,4])**(-2)) * ((x[:,3])**(-2))) * ((x[:,0])**(-1))) * ((x[:,2])**(1))))) + (((-17.097122788295863) * (np.log((x[:,0])**(1)))) + ((19.266384882232828) * (((((((x[:,3])**(3)) * ((x[:,4])**(-2))) * ((x[:,0])**(-2))) * ((x[:,3])**(-2))) * ((x[:,3])**(-1))))))))))))))))))) / ((1.0) + (((-0.9271439791841698) * (((((x[:,3])**(-3)) * ((x[:,2])**(-3))) * ((x[:,2])**(1))))) + (((7.0733575316958425e-3) * (np.cos((x[:,2])**(-1)))) + (((421.9892319100986) * ((((x[:,4])**(2)) * ((x[:,3])**(-1))))) + (((0.34522685187441293) * (np.sqrt(((x[:,0])**(-3)) * ((x[:,4])**(-3))))) + ((3.7037620988419437e-9) * (np.sqrt(((x[:,0])**(3)) * ((x[:,2])**(-1)))))))))))"
"Id(((141.97589974817544) + (((0.6520449116695399) * (Sin(((((x4)^(-3)) * ((x1)^(3))) * ((x0)^(-2))) * ((x3)^(-2))))) + (((9.790127023416284e-2) * (Sqrt(((x3)^(1)) * ((x1)^(1))))) + (((-284.68657177935506) * (Id((x3)^(-2)))) + (((-4.105636750555931) * (Sqrt((x1)^(1)))) + (((-284.6864272361816) * (Sin((x3)^(-2)))) + (((5.048718813627791e-7) * (Sqrt((((x0)^(1)) * ((x4)^(1))) * ((x0)^(3))))) + (((3.4354313672497474) * (Tanh((x1)^(1)))) + (((-1.814415312512649) * (Log(((x0)^(3)) * ((x2)^(-1))))) + (((-7.034917942637717) * (Tanh((((x4)^(-2)) * ((x2)^(-3))) * ((x0)^(-3))))) + (((-248.52298631378773) * (Tanh((x4)^(1)))) + (((-6.727260088974563e-3) * (Id(((((x0)^(1)) * ((x2)^(-1))) * ((x1)^(2))) * ((x3)^(-3))))) + (((1.2186047527038886) * (Id(((((x2)^(-3)) * ((x3)^(-3))) * ((x2)^(-2))) * ((x3)^(-2))))) + (((510.29361690680736) * (Sin((((x2)^(-3)) * ((x4)^(2))) * ((x3)^(-2))))) + (((-2.8878234587495575) * (Sqrt((((x2)^(-2)) * ((x0)^(-1))) * ((x1)^(1))))) + (((1.635661136544246) * (Log((x2)^(-3)))) + (((1.4813934345650939) * (Tanh(((x2)^(2)) * ((x1)^(2))))) + (((-0.7865452273531034) * (Log((x0)^(1)))) + (((-2.940334237828278) * (Log(((x2)^(2)) * ((x3)^(-2))))) + (((-2.6843271893072274) * (Sqrt((((x0)^(-2)) * ((x4)^(-2))) * ((x3)^(1))))) + (((-0.8147632371401272) * (Cos((x2)^(-1)))) + (((1.7329456449800675) * (Tanh((((x1)^(3)) * ((x0)^(-2))) * ((x3)^(2))))) + ((9.905731891914002e-3) * (Sqrt((x4)^(-2)))))))))))))))))))))))))) / ((1.0) + (((1.8886070812030309e-3) * (Sin((x1)^(2)))) + (((-1.1403847454189861e-2) * (Sqrt((((x4)^(-1)) * ((x0)^(-2))) * ((x1)^(3))))) + (((1.586020032051247e-8) * (Id((x4)^(-2)))) + ((1.0275197950349149e-5) * (Id((x0)^(1)))))))))","[[141.97589974817544,0.6520449116695399,9.790127023416284e-2,-284.68657177935506,-4.105636750555931,-284.6864272361816,5.048718813627791e-7,3.4354313672497474,-1.814415312512649,-7.034917942637717,-248.52298631378773,-6.727260088974563e-3,1.2186047527038886,510.29361690680736,-2.8878234587495575,1.635661136544246,1.4813934345650939,-0.7865452273531034,-2.940334237828278,-2.6843271893072274,-0.8147632371401272,1.7329456449800675,9.905731891914002e-3,1.8886070812030309e-3,-1.1403847454189861e-2,1.586020032051247e-8,1.0275197950349149e-5]]","(((141.97589974817544) + (((0.6520449116695399) * (np.sin(((((x[:,4])**(-3)) * ((x[:,1])**(3))) * ((x[:,0])**(-2))) * ((x[:,3])**(-2))))) + (((9.790127023416284e-2) * (np.sqrt(((x[:,3])**(1)) * ((x[:,1])**(1))))) + (((-284.68657177935506) * (((x[:,3])**(-2)))) + (((-4.105636750555931) * (np.sqrt((x[:,1])**(1)))) + (((-284.6864272361816) * (np.sin((x[:,3])**(-2)))) + (((5.048718813627791e-7) * (np.sqrt((((x[:,0])**(1)) * ((x[:,4])**(1))) * ((x[:,0])**(3))))) + (((3.4354313672497474) * (np.tanh((x[:,1])**(1)))) + (((-1.814415312512649) * (np.log(((x[:,0])**(3)) * ((x[:,2])**(-1))))) + (((-7.034917942637717) * (np.tanh((((x[:,4])**(-2)) * ((x[:,2])**(-3))) * ((x[:,0])**(-3))))) + (((-248.52298631378773) * (np.tanh((x[:,4])**(1)))) + (((-6.727260088974563e-3) * ((((((x[:,0])**(1)) * ((x[:,2])**(-1))) * ((x[:,1])**(2))) * ((x[:,3])**(-3))))) + (((1.2186047527038886) * ((((((x[:,2])**(-3)) * ((x[:,3])**(-3))) * ((x[:,2])**(-2))) * ((x[:,3])**(-2))))) + (((510.29361690680736) * (np.sin((((x[:,2])**(-3)) * ((x[:,4])**(2))) * ((x[:,3])**(-2))))) + (((-2.8878234587495575) * (np.sqrt((((x[:,2])**(-2)) * ((x[:,0])**(-1))) * ((x[:,1])**(1))))) + (((1.635661136544246) * (np.log((x[:,2])**(-3)))) + (((1.4813934345650939) * (np.tanh(((x[:,2])**(2)) * ((x[:,1])**(2))))) + (((-0.7865452273531034) * (np.log((x[:,0])**(1)))) + (((-2.940334237828278) * (np.log(((x[:,2])**(2)) * ((x[:,3])**(-2))))) + (((-2.6843271893072274) * (np.sqrt((((x[:,0])**(-2)) * ((x[:,4])**(-2))) * ((x[:,3])**(1))))) + (((-0.8147632371401272) * (np.cos((x[:,2])**(-1)))) + (((1.7329456449800675) * (np.tanh((((x[:,1])**(3)) * ((x[:,0])**(-2))) * ((x[:,3])**(2))))) + ((9.905731891914002e-3) * (np.sqrt((x[:,4])**(-2)))))))))))))))))))))))))) / ((1.0) + (((1.8886070812030309e-3) * (np.sin((x[:,1])**(2)))) + (((-1.1403847454189861e-2) * (np.sqrt((((x[:,4])**(-1)) * ((x[:,0])**(-2))) * ((x[:,1])**(3))))) + (((1.586020032051247e-8) * (((x[:,4])**(-2)))) + ((1.0275197950349149e-5) * (((x[:,0])**(1)))))))))"
"Id(((128.6356239508423) + (((-4.610812023450334) * (Tanh((((x4)^(-1)) * ((x2)^(3))) * ((x3)^(2))))) + (((2.0697750246206237e-2) * (Cos((((x0)^(2)) * ((x3)^(3))) * ((x1)^(2))))) + (((5.351839600674622e-8) * (Id(((((x4)^(-2)) * ((x2)^(-3))) * ((x1)^(1))) * ((x0)^(-1))))) + (((-0.44412398460068947) * (Sin(((x3)^(2)) * ((x1)^(2))))) + (((1.355269523385435e-4) * (Id((x3)^(2)))) + (((31.325643946289194) * (Id(((x3)^(-3)) * ((x4)^(-1))))) + (((9.137137646325222e-2) * (Log(((x3)^(-1)) * ((x0)^(1))))) + (((1.0093099702361492) * (Log((x0)^(-2)))) + (((-3.28675010651829) * (Log((x2)^(3)))) + (((-0.7087726150817881) * (Cos((x2)^(-1)))) + (((67.47774174667786) * (Sqrt(((x0)^(-2)) * ((x3)^(2))))) + (((-1186.0070842410162) * (Id(((x4)^(-1)) * ((x0)^(-2))))) + (((-4.690107291891264) * (Log(((((x0)^(1)) * ((x4)^(1))) * ((x3)^(-1))) * ((x2)^(-1))))) + (((-3.772736970239443e-3) * (Id((((x0)^(-1)) * ((x4)^(-2))) * ((x1)^(1))))) + (((-23.79818192847547) * (Tanh(((((x4)^(-1)) * ((x0)^(-2))) * ((x3)^(1))) * ((x2)^(-1))))) + ((-1080.1732178735097) * (Id((x4)^(2)))))))))))))))))))) / ((1.0) + (((7.499570551229884e-2) * (Tanh(((((x4)^(-2)) * ((x2)^(2))) * ((x3)^(1))) * ((x0)^(-2))))) + (((4.850624147612878e-3) * (Sqrt(((((x1)^(1)) * ((x2)^(-2))) * ((x0)^(-2))) * ((x3)^(2))))) + (((6746.903768260379) * (Id(((x0)^(-1)) * ((x4)^(2))))) + ((3.01869041736006e-6) * (Sqrt((x0)^(2)))))))))","[[128.6356239508423,-4.610812023450334,2.0697750246206237e-2,5.351839600674622e-8,-0.44412398460068947,1.355269523385435e-4,31.325643946289194,9.137137646325222e-2,1.0093099702361492,-3.28675010651829,-0.7087726150817881,67.47774174667786,-1186.0070842410162,-4.690107291891264,-3.772736970239443e-3,-23.79818192847547,-1080.1732178735097,7.499570551229884e-2,4.850624147612878e-3,6746.903768260379,3.01869041736006e-6]]","(((128.6356239508423) + (((-4.610812023450334) * (np.tanh((((x[:,4])**(-1)) * ((x[:,2])**(3))) * ((x[:,3])**(2))))) + (((2.0697750246206237e-2) * (np.cos((((x[:,0])**(2)) * ((x[:,3])**(3))) * ((x[:,1])**(2))))) + (((5.351839600674622e-8) * ((((((x[:,4])**(-2)) * ((x[:,2])**(-3))) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((-0.44412398460068947) * (np.sin(((x[:,3])**(2)) * ((x[:,1])**(2))))) + (((1.355269523385435e-4) * (((x[:,3])**(2)))) + (((31.325643946289194) * ((((x[:,3])**(-3)) * ((x[:,4])**(-1))))) + (((9.137137646325222e-2) * (np.log(((x[:,3])**(-1)) * ((x[:,0])**(1))))) + (((1.0093099702361492) * (np.log((x[:,0])**(-2)))) + (((-3.28675010651829) * (np.log((x[:,2])**(3)))) + (((-0.7087726150817881) * (np.cos((x[:,2])**(-1)))) + (((67.47774174667786) * (np.sqrt(((x[:,0])**(-2)) * ((x[:,3])**(2))))) + (((-1186.0070842410162) * ((((x[:,4])**(-1)) * ((x[:,0])**(-2))))) + (((-4.690107291891264) * (np.log(((((x[:,0])**(1)) * ((x[:,4])**(1))) * ((x[:,3])**(-1))) * ((x[:,2])**(-1))))) + (((-3.772736970239443e-3) * (((((x[:,0])**(-1)) * ((x[:,4])**(-2))) * ((x[:,1])**(1))))) + (((-23.79818192847547) * (np.tanh(((((x[:,4])**(-1)) * ((x[:,0])**(-2))) * ((x[:,3])**(1))) * ((x[:,2])**(-1))))) + ((-1080.1732178735097) * (((x[:,4])**(2)))))))))))))))))))) / ((1.0) + (((7.499570551229884e-2) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,2])**(2))) * ((x[:,3])**(1))) * ((x[:,0])**(-2))))) + (((4.850624147612878e-3) * (np.sqrt(((((x[:,1])**(1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))) * ((x[:,3])**(2))))) + (((6746.903768260379) * ((((x[:,0])**(-1)) * ((x[:,4])**(2))))) + ((3.01869041736006e-6) * (np.sqrt((x[:,0])**(2)))))))))"
"Id(((561.810007399454) + (((2.4216868302987665e-3) * (Id(((x0)^(-1)) * ((x3)^(3))))) + (((5.590488247754859) * (Id(((((x3)^(-2)) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-1))))) + (((-2.537709702813121) * (Tanh((((x4)^(2)) * ((x0)^(1))) * ((x2)^(-1))))) + (((-1.6945898858662378) * (Tanh(((((((x0)^(2)) * ((x4)^(-3))) * ((x3)^(-3))) * ((x1)^(3))) * ((x2)^(2))) * ((x3)^(2))))) + (((-2.590053084000237) * (Log((((x2)^(2)) * ((x4)^(-2))) * ((x3)^(-2))))) + (((-1.6217647156672626e-7) * (Sqrt(((x3)^(1)) * ((x0)^(3))))) + (((-6.6231866013677525) * (Tanh(((x3)^(-3)) * ((x0)^(2))))) + (((1.076937685333771) * (Sin((x2)^(-2)))) + (((-3.250032542055287) * (Log((x4)^(3)))) + (((-5290.586856591162) * (Sin((x4)^(2)))) + (((4.297640527064407) * (Tanh(((((((x4)^(3)) * ((x3)^(1))) * ((x0)^(-1))) * ((x2)^(-3))) * ((x1)^(1))) * ((x2)^(-2))))) + (((97601.84983308853) * (Tanh((((x0)^(-2)) * ((x4)^(-1))) * ((x2)^(3))))) + (((-412.5809155063498) * (Tanh((x2)^(-1)))) + (((8.731517409175131) * (Log((x0)^(-1)))) + (((-75.36069326760402) * (Id((((x2)^(1)) * ((x4)^(-1))) * ((x0)^(-1))))) + ((298.9856961089829) * (Sqrt((((x4)^(3)) * ((x0)^(1))) * ((x2)^(3))))))))))))))))))))) / ((1.0) + (((0.1991481272437532) * (Tanh(((((x4)^(-1)) * ((x3)^(1))) * ((x2)^(-1))) * ((x0)^(-2))))) + ((7.391193165661433e-3) * (Sqrt(((((x1)^(1)) * ((x3)^(1))) * ((x2)^(-3))) * ((x0)^(-2))))))))","[[561.810007399454,2.4216868302987665e-3,5.590488247754859,-2.537709702813121,-1.6945898858662378,-2.590053084000237,-1.6217647156672626e-7,-6.6231866013677525,1.076937685333771,-3.250032542055287,-5290.586856591162,4.297640527064407,97601.84983308853,-412.5809155063498,8.731517409175131,-75.36069326760402,298.9856961089829,0.1991481272437532,7.391193165661433e-3]]","(((561.810007399454) + (((2.4216868302987665e-3) * ((((x[:,0])**(-1)) * ((x[:,3])**(3))))) + (((5.590488247754859) * ((((((x[:,3])**(-2)) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))) + (((-2.537709702813121) * (np.tanh((((x[:,4])**(2)) * ((x[:,0])**(1))) * ((x[:,2])**(-1))))) + (((-1.6945898858662378) * (np.tanh(((((((x[:,0])**(2)) * ((x[:,4])**(-3))) * ((x[:,3])**(-3))) * ((x[:,1])**(3))) * ((x[:,2])**(2))) * ((x[:,3])**(2))))) + (((-2.590053084000237) * (np.log((((x[:,2])**(2)) * ((x[:,4])**(-2))) * ((x[:,3])**(-2))))) + (((-1.6217647156672626e-7) * (np.sqrt(((x[:,3])**(1)) * ((x[:,0])**(3))))) + (((-6.6231866013677525) * (np.tanh(((x[:,3])**(-3)) * ((x[:,0])**(2))))) + (((1.076937685333771) * (np.sin((x[:,2])**(-2)))) + (((-3.250032542055287) * (np.log((x[:,4])**(3)))) + (((-5290.586856591162) * (np.sin((x[:,4])**(2)))) + (((4.297640527064407) * (np.tanh(((((((x[:,4])**(3)) * ((x[:,3])**(1))) * ((x[:,0])**(-1))) * ((x[:,2])**(-3))) * ((x[:,1])**(1))) * ((x[:,2])**(-2))))) + (((97601.84983308853) * (np.tanh((((x[:,0])**(-2)) * ((x[:,4])**(-1))) * ((x[:,2])**(3))))) + (((-412.5809155063498) * (np.tanh((x[:,2])**(-1)))) + (((8.731517409175131) * (np.log((x[:,0])**(-1)))) + (((-75.36069326760402) * (((((x[:,2])**(1)) * ((x[:,4])**(-1))) * ((x[:,0])**(-1))))) + ((298.9856961089829) * (np.sqrt((((x[:,4])**(3)) * ((x[:,0])**(1))) * ((x[:,2])**(3))))))))))))))))))))) / ((1.0) + (((0.1991481272437532) * (np.tanh(((((x[:,4])**(-1)) * ((x[:,3])**(1))) * ((x[:,2])**(-1))) * ((x[:,0])**(-2))))) + ((7.391193165661433e-3) * (np.sqrt(((((x[:,1])**(1)) * ((x[:,3])**(1))) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))))))"
"Id(((198.86743208752773) + (((402.36066680678215) * (Sqrt((((x1)^(1)) * ((x0)^(-3))) * ((x4)^(-1))))) + (((-2.1394847686175575) * (Log((x4)^(3)))) + (((-2.9932543958800157) * (Tanh((((((x2)^(1)) * ((x0)^(2))) * ((x3)^(-3))) * ((x4)^(-3))) * ((x1)^(3))))) + (((-1.6042620165507948e-2) * (Sin((((x3)^(-1)) * ((x2)^(3))) * ((x0)^(2))))) + (((5.325904996439811) * (Log(((x4)^(1)) * ((x0)^(-2))))) + (((-2598.6305458342645) * (Tanh((x4)^(2)))) + (((-8.799196157122484) * (Tanh(((x3)^(3)) * ((x2)^(3))))) + (((-0.12475665484959819) * (Sqrt((((x2)^(-1)) * ((x0)^(1))) * ((x3)^(-1))))) + (((2.557068617428687) * (Sqrt((((x4)^(1)) * ((x2)^(2))) * ((x0)^(1))))) + (((4.757531897905967) * (Log((x2)^(-3)))) + (((-14.58342372851321) * (Tanh(((((x0)^(-2)) * ((x3)^(-1))) * ((x2)^(1))) * ((x4)^(-3))))) + (((10711.438646909139) * (Sin((((x3)^(-2)) * ((x2)^(-1))) * ((x4)^(1))))) + (((-0.4056603456064205) * (Sin((x1)^(2)))) + (((-38.384145198080994) * (Sqrt(((x1)^(1)) * ((x3)^(-1))))) + ((-164.9065171748471) * (Sqrt(((x2)^(-1)) * ((x0)^(-1)))))))))))))))))))) / ((1.0) + (((-2.496060295283943e-2) * (Tanh(((((x0)^(-3)) * ((x2)^(-1))) * ((x1)^(2))) * ((x4)^(-3))))) + (((4.585378305865721e-3) * (Cos((x2)^(-1)))) + (((-4.044403102386211) * (Sqrt((((x0)^(-3)) * ((x1)^(1))) * ((x0)^(1))))) + ((-7.084189792299983e-2) * (Tanh((((((x1)^(1)) * ((x0)^(2))) * ((x2)^(1))) * ((x4)^(1))) * ((x3)^(-2))))))))))","[[198.86743208752773,402.36066680678215,-2.1394847686175575,-2.9932543958800157,-1.6042620165507948e-2,5.325904996439811,-2598.6305458342645,-8.799196157122484,-0.12475665484959819,2.557068617428687,4.757531897905967,-14.58342372851321,10711.438646909139,-0.4056603456064205,-38.384145198080994,-164.9065171748471,-2.496060295283943e-2,4.585378305865721e-3,-4.044403102386211,-7.084189792299983e-2]]","(((198.86743208752773) + (((402.36066680678215) * (np.sqrt((((x[:,1])**(1)) * ((x[:,0])**(-3))) * ((x[:,4])**(-1))))) + (((-2.1394847686175575) * (np.log((x[:,4])**(3)))) + (((-2.9932543958800157) * (np.tanh((((((x[:,2])**(1)) * ((x[:,0])**(2))) * ((x[:,3])**(-3))) * ((x[:,4])**(-3))) * ((x[:,1])**(3))))) + (((-1.6042620165507948e-2) * (np.sin((((x[:,3])**(-1)) * ((x[:,2])**(3))) * ((x[:,0])**(2))))) + (((5.325904996439811) * (np.log(((x[:,4])**(1)) * ((x[:,0])**(-2))))) + (((-2598.6305458342645) * (np.tanh((x[:,4])**(2)))) + (((-8.799196157122484) * (np.tanh(((x[:,3])**(3)) * ((x[:,2])**(3))))) + (((-0.12475665484959819) * (np.sqrt((((x[:,2])**(-1)) * ((x[:,0])**(1))) * ((x[:,3])**(-1))))) + (((2.557068617428687) * (np.sqrt((((x[:,4])**(1)) * ((x[:,2])**(2))) * ((x[:,0])**(1))))) + (((4.757531897905967) * (np.log((x[:,2])**(-3)))) + (((-14.58342372851321) * (np.tanh(((((x[:,0])**(-2)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,4])**(-3))))) + (((10711.438646909139) * (np.sin((((x[:,3])**(-2)) * ((x[:,2])**(-1))) * ((x[:,4])**(1))))) + (((-0.4056603456064205) * (np.sin((x[:,1])**(2)))) + (((-38.384145198080994) * (np.sqrt(((x[:,1])**(1)) * ((x[:,3])**(-1))))) + ((-164.9065171748471) * (np.sqrt(((x[:,2])**(-1)) * ((x[:,0])**(-1)))))))))))))))))))) / ((1.0) + (((-2.496060295283943e-2) * (np.tanh(((((x[:,0])**(-3)) * ((x[:,2])**(-1))) * ((x[:,1])**(2))) * ((x[:,4])**(-3))))) + (((4.585378305865721e-3) * (np.cos((x[:,2])**(-1)))) + (((-4.044403102386211) * (np.sqrt((((x[:,0])**(-3)) * ((x[:,1])**(1))) * ((x[:,0])**(1))))) + ((-7.084189792299983e-2) * (np.tanh((((((x[:,1])**(1)) * ((x[:,0])**(2))) * ((x[:,2])**(1))) * ((x[:,4])**(1))) * ((x[:,3])**(-2))))))))))"
"Id((-1030.3603753110553) + (((-0.23539571039964224) * (Cos((x1)^(2)))) + (((1.5449560002928353) * (Log((((x0)^(-2)) * ((x3)^(-3))) * ((x2)^(-2))))) + (((1.6535248025668636e-2) * (Sin(((((x4)^(-3)) * ((x1)^(1))) * ((x0)^(-3))) * ((x3)^(1))))) + (((1209.2176939398516) * (Exp((x0)^(-1)))) + (((-0.10836642356321857) * (Cos((x3)^(2)))) + (((151.69789075741267) * (Sqrt(((x2)^(2)) * ((x3)^(-1))))) + (((-8.876486589234283e-10) * (Sqrt((((x0)^(3)) * ((x4)^(-3))) * ((x3)^(-2))))) + (((-8.288792993878396) * (Tanh(((x2)^(3)) * ((x3)^(3))))) + (((-0.7113617153004135) * (Cos((x2)^(-1)))) + (((-0.36550277202363723) * (Sin((((x1)^(3)) * ((x2)^(1))) * ((x2)^(3))))) + (((2.6204140837532037) * (Tanh(((((x1)^(3)) * ((x3)^(3))) * ((x4)^(1))) * ((x0)^(-2))))) + (((-23.006159553090605) * (Tanh(((((x3)^(1)) * ((x2)^(-1))) * ((x0)^(-2))) * ((x4)^(-1))))) + (((-73.79565464714089) * (Sqrt(((x2)^(-1)) * ((x0)^(-1))))) + (((-720.4438690319377) * (Sqrt(((x0)^(-1)) * ((x2)^(1))))) + (((2.5174688503249945) * (Tanh((((x0)^(-3)) * ((x4)^(-3))) * ((x3)^(2))))) + (((-0.5444238368196164) * (Sqrt(((x1)^(1)) * ((x2)^(-1))))) + (((-281.4490061693946) * (Sin((x4)^(1)))) + (((3.8127129746784454) * (Log((((x0)^(-2)) * ((x2)^(-2))) * ((x3)^(3))))) + ((16.966028506966822) * (Sqrt((((((x0)^(-3)) * ((x1)^(3))) * ((x3)^(2))) * ((x2)^(2))) * ((x4)^(-1))))))))))))))))))))))))","[[-1030.3603753110553,-0.23539571039964224,1.5449560002928353,1.6535248025668636e-2,1209.2176939398516,-0.10836642356321857,151.69789075741267,-8.876486589234283e-10,-8.288792993878396,-0.7113617153004135,-0.36550277202363723,2.6204140837532037,-23.006159553090605,-73.79565464714089,-720.4438690319377,2.5174688503249945,-0.5444238368196164,-281.4490061693946,3.8127129746784454,16.966028506966822]]","((-1030.3603753110553) + (((-0.23539571039964224) * (np.cos((x[:,1])**(2)))) + (((1.5449560002928353) * (np.log((((x[:,0])**(-2)) * ((x[:,3])**(-3))) * ((x[:,2])**(-2))))) + (((1.6535248025668636e-2) * (np.sin(((((x[:,4])**(-3)) * ((x[:,1])**(1))) * ((x[:,0])**(-3))) * ((x[:,3])**(1))))) + (((1209.2176939398516) * (np.exp((x[:,0])**(-1)))) + (((-0.10836642356321857) * (np.cos((x[:,3])**(2)))) + (((151.69789075741267) * (np.sqrt(((x[:,2])**(2)) * ((x[:,3])**(-1))))) + (((-8.876486589234283e-10) * (np.sqrt((((x[:,0])**(3)) * ((x[:,4])**(-3))) * ((x[:,3])**(-2))))) + (((-8.288792993878396) * (np.tanh(((x[:,2])**(3)) * ((x[:,3])**(3))))) + (((-0.7113617153004135) * (np.cos((x[:,2])**(-1)))) + (((-0.36550277202363723) * (np.sin((((x[:,1])**(3)) * ((x[:,2])**(1))) * ((x[:,2])**(3))))) + (((2.6204140837532037) * (np.tanh(((((x[:,1])**(3)) * ((x[:,3])**(3))) * ((x[:,4])**(1))) * ((x[:,0])**(-2))))) + (((-23.006159553090605) * (np.tanh(((((x[:,3])**(1)) * ((x[:,2])**(-1))) * ((x[:,0])**(-2))) * ((x[:,4])**(-1))))) + (((-73.79565464714089) * (np.sqrt(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((-720.4438690319377) * (np.sqrt(((x[:,0])**(-1)) * ((x[:,2])**(1))))) + (((2.5174688503249945) * (np.tanh((((x[:,0])**(-3)) * ((x[:,4])**(-3))) * ((x[:,3])**(2))))) + (((-0.5444238368196164) * (np.sqrt(((x[:,1])**(1)) * ((x[:,2])**(-1))))) + (((-281.4490061693946) * (np.sin((x[:,4])**(1)))) + (((3.8127129746784454) * (np.log((((x[:,0])**(-2)) * ((x[:,2])**(-2))) * ((x[:,3])**(3))))) + ((16.966028506966822) * (np.sqrt((((((x[:,0])**(-3)) * ((x[:,1])**(3))) * ((x[:,3])**(2))) * ((x[:,2])**(2))) * ((x[:,4])**(-1))))))))))))))))))))))))"
"Id(((147.71918262619303) + (((6.255827487350062e-10) * (Sqrt((((((x4)^(-2)) * ((x3)^(-2))) * ((x2)^(-1))) * ((x1)^(3))) * ((x0)^(3))))) + (((0.17389682369544535) * (Cos((x4)^(-2)))) + (((-15.033324001617864) * (Tanh(((x0)^(-1)) * ((x1)^(2))))) + (((-3.0987070081216572) * (Sin(((((x0)^(-2)) * ((x4)^(-2))) * ((x2)^(3))) * ((x3)^(1))))) + (((-1.7984502402484592) * (Tanh((((((x2)^(-2)) * ((x0)^(3))) * ((x1)^(1))) * ((x3)^(3))) * ((x4)^(2))))) + (((180.92494267968877) * (Sin((x2)^(3)))) + (((2546.0148316599634) * (Id((x0)^(-1)))) + (((3.6195490613090686) * (Log((x4)^(-1)))) + (((-4.921998401944673) * (Tanh((((x3)^(-2)) * ((x2)^(-2))) * ((x1)^(1))))) + (((6.279084845814549) * (Tanh(((((x0)^(-3)) * ((x3)^(2))) * ((x2)^(-2))) * ((x4)^(-2))))) + (((0.775065313924789) * (Log((x2)^(-1)))) + (((-2.3252059603199893) * (Log((x2)^(3)))) + (((-1.1942221770042523) * (Sin((x2)^(-1)))) + (((-62804.835189203906) * (Sqrt((((x0)^(-1)) * ((x4)^(3))) * ((x2)^(2))))) + (((2.599864693898252) * (Log((x0)^(-3)))) + (((-0.6036320231958068) * (Sin((x1)^(2)))) + ((0.10779859998125096) * (Sqrt((x3)^(2))))))))))))))))))))) / ((1.0) + (((2.574175894549141e-3) * (Id(((x2)^(3)) * ((x4)^(-1))))) + (((-3.9651055634906587e-4) * (Id(((x2)^(-3)) * ((x3)^(-2))))) + (((1.7386422536850006) * (Sqrt(((x4)^(-1)) * ((x0)^(-2))))) + (((-7.293159363841108e-4) * (Id(((((x1)^(3)) * ((x0)^(-3))) * ((x4)^(-2))) * ((x2)^(-1))))) + (((1.082131408202034e-6) * (Sqrt((((x0)^(2)) * ((x4)^(-1))) * ((x3)^(-1))))) + (((0.23119689352995576) * (Tanh(((x0)^(-1)) * ((x4)^(-1))))) + (((3.376522981406403e-2) * (Sqrt((((x2)^(-3)) * ((x0)^(-2))) * ((x3)^(1))))) + ((-6.943967955652719e-3) * (Sqrt((((x3)^(-2)) * ((x4)^(-2))) * ((x2)^(1))))))))))))))","[[147.71918262619303,6.255827487350062e-10,0.17389682369544535,-15.033324001617864,-3.0987070081216572,-1.7984502402484592,180.92494267968877,2546.0148316599634,3.6195490613090686,-4.921998401944673,6.279084845814549,0.775065313924789,-2.3252059603199893,-1.1942221770042523,-62804.835189203906,2.599864693898252,-0.6036320231958068,0.10779859998125096,2.574175894549141e-3,-3.9651055634906587e-4,1.7386422536850006,-7.293159363841108e-4,1.082131408202034e-6,0.23119689352995576,3.376522981406403e-2,-6.943967955652719e-3]]","(((147.71918262619303) + (((6.255827487350062e-10) * (np.sqrt((((((x[:,4])**(-2)) * ((x[:,3])**(-2))) * ((x[:,2])**(-1))) * ((x[:,1])**(3))) * ((x[:,0])**(3))))) + (((0.17389682369544535) * (np.cos((x[:,4])**(-2)))) + (((-15.033324001617864) * (np.tanh(((x[:,0])**(-1)) * ((x[:,1])**(2))))) + (((-3.0987070081216572) * (np.sin(((((x[:,0])**(-2)) * ((x[:,4])**(-2))) * ((x[:,2])**(3))) * ((x[:,3])**(1))))) + (((-1.7984502402484592) * (np.tanh((((((x[:,2])**(-2)) * ((x[:,0])**(3))) * ((x[:,1])**(1))) * ((x[:,3])**(3))) * ((x[:,4])**(2))))) + (((180.92494267968877) * (np.sin((x[:,2])**(3)))) + (((2546.0148316599634) * (((x[:,0])**(-1)))) + (((3.6195490613090686) * (np.log((x[:,4])**(-1)))) + (((-4.921998401944673) * (np.tanh((((x[:,3])**(-2)) * ((x[:,2])**(-2))) * ((x[:,1])**(1))))) + (((6.279084845814549) * (np.tanh(((((x[:,0])**(-3)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,4])**(-2))))) + (((0.775065313924789) * (np.log((x[:,2])**(-1)))) + (((-2.3252059603199893) * (np.log((x[:,2])**(3)))) + (((-1.1942221770042523) * (np.sin((x[:,2])**(-1)))) + (((-62804.835189203906) * (np.sqrt((((x[:,0])**(-1)) * ((x[:,4])**(3))) * ((x[:,2])**(2))))) + (((2.599864693898252) * (np.log((x[:,0])**(-3)))) + (((-0.6036320231958068) * (np.sin((x[:,1])**(2)))) + ((0.10779859998125096) * (np.sqrt((x[:,3])**(2))))))))))))))))))))) / ((1.0) + (((2.574175894549141e-3) * ((((x[:,2])**(3)) * ((x[:,4])**(-1))))) + (((-3.9651055634906587e-4) * ((((x[:,2])**(-3)) * ((x[:,3])**(-2))))) + (((1.7386422536850006) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,0])**(-2))))) + (((-7.293159363841108e-4) * ((((((x[:,1])**(3)) * ((x[:,0])**(-3))) * ((x[:,4])**(-2))) * ((x[:,2])**(-1))))) + (((1.082131408202034e-6) * (np.sqrt((((x[:,0])**(2)) * ((x[:,4])**(-1))) * ((x[:,3])**(-1))))) + (((0.23119689352995576) * (np.tanh(((x[:,0])**(-1)) * ((x[:,4])**(-1))))) + (((3.376522981406403e-2) * (np.sqrt((((x[:,2])**(-3)) * ((x[:,0])**(-2))) * ((x[:,3])**(1))))) + ((-6.943967955652719e-3) * (np.sqrt((((x[:,3])**(-2)) * ((x[:,4])**(-2))) * ((x[:,2])**(1))))))))))))))"
"Id(((88.25919585590957) + (((-0.5336703816469779) * (Cos((x1)^(2)))) + (((-3.5591511007390864) * (Tanh((((x2)^(2)) * ((x4)^(-2))) * ((x3)^(-1))))) + (((-1.2109640050877273) * (Cos((((x4)^(3)) * ((x1)^(1))) * ((x3)^(3))))) + (((-20112.496352857695) * (Sqrt(((x4)^(3)) * ((x3)^(-2))))) + (((2.8413293064071476e-2) * (Id((x3)^(1)))) + (((54.46389359007715) * (Sin((((x1)^(2)) * ((x0)^(-3))) * ((x4)^(-2))))) + (((38.735313373240174) * (Tanh(((x4)^(1)) * ((x0)^(1))))) + (((-0.2057999333786783) * (Sqrt((x0)^(1)))) + (((-5.266878213753986) * (Sin((((x4)^(-3)) * ((x0)^(-3))) * ((x1)^(1))))) + (((2.8138043151659478) * (Log((x2)^(-3)))) + (((-0.8957780773727109) * (Tanh((((x4)^(3)) * ((x0)^(2))) * ((x2)^(1))))) + ((-13.723985177979795) * (Tanh((((x3)^(-1)) * ((x4)^(1))) * ((x0)^(1))))))))))))))))) / ((1.0) + (((-6.863998578735958e-4) * (Sin((((x4)^(2)) * ((x0)^(1))) * ((x3)^(2))))) + (((0.32491334530136484) * (Sin(((x4)^(3)) * ((x1)^(2))))) + (((-14.375812688311132) * (Id((x0)^(-1)))) + (((2.770860048031995e-3) * (Sqrt(((x1)^(1)) * ((x2)^(-1))))) + (((-2.386871887537982e-5) * (Sqrt(((x2)^(2)) * ((x0)^(2))))) + (((5.6782336564055735e-3) * (Sin((x2)^(-1)))) + (((-2.342077892261374e-3) * (Sin((x4)^(-1)))) + (((-29660.538256867454) * (Tanh((((((x0)^(-1)) * ((x2)^(-3))) * ((x4)^(2))) * ((x3)^(-2))) * ((x3)^(-1))))) + (((2.4298412622378995) * (Tanh(((x0)^(-1)) * ((x2)^(-1))))) + ((-2.874840652450956e-3) * (Sqrt(((((x3)^(-1)) * ((x2)^(-3))) * ((x3)^(-3))) * ((x2)^(-2))))))))))))))))","[[88.25919585590957,-0.5336703816469779,-3.5591511007390864,-1.2109640050877273,-20112.496352857695,2.8413293064071476e-2,54.46389359007715,38.735313373240174,-0.2057999333786783,-5.266878213753986,2.8138043151659478,-0.8957780773727109,-13.723985177979795,-6.863998578735958e-4,0.32491334530136484,-14.375812688311132,2.770860048031995e-3,-2.386871887537982e-5,5.6782336564055735e-3,-2.342077892261374e-3,-29660.538256867454,2.4298412622378995,-2.874840652450956e-3]]","(((88.25919585590957) + (((-0.5336703816469779) * (np.cos((x[:,1])**(2)))) + (((-3.5591511007390864) * (np.tanh((((x[:,2])**(2)) * ((x[:,4])**(-2))) * ((x[:,3])**(-1))))) + (((-1.2109640050877273) * (np.cos((((x[:,4])**(3)) * ((x[:,1])**(1))) * ((x[:,3])**(3))))) + (((-20112.496352857695) * (np.sqrt(((x[:,4])**(3)) * ((x[:,3])**(-2))))) + (((2.8413293064071476e-2) * (((x[:,3])**(1)))) + (((54.46389359007715) * (np.sin((((x[:,1])**(2)) * ((x[:,0])**(-3))) * ((x[:,4])**(-2))))) + (((38.735313373240174) * (np.tanh(((x[:,4])**(1)) * ((x[:,0])**(1))))) + (((-0.2057999333786783) * (np.sqrt((x[:,0])**(1)))) + (((-5.266878213753986) * (np.sin((((x[:,4])**(-3)) * ((x[:,0])**(-3))) * ((x[:,1])**(1))))) + (((2.8138043151659478) * (np.log((x[:,2])**(-3)))) + (((-0.8957780773727109) * (np.tanh((((x[:,4])**(3)) * ((x[:,0])**(2))) * ((x[:,2])**(1))))) + ((-13.723985177979795) * (np.tanh((((x[:,3])**(-1)) * ((x[:,4])**(1))) * ((x[:,0])**(1))))))))))))))))) / ((1.0) + (((-6.863998578735958e-4) * (np.sin((((x[:,4])**(2)) * ((x[:,0])**(1))) * ((x[:,3])**(2))))) + (((0.32491334530136484) * (np.sin(((x[:,4])**(3)) * ((x[:,1])**(2))))) + (((-14.375812688311132) * (((x[:,0])**(-1)))) + (((2.770860048031995e-3) * (np.sqrt(((x[:,1])**(1)) * ((x[:,2])**(-1))))) + (((-2.386871887537982e-5) * (np.sqrt(((x[:,2])**(2)) * ((x[:,0])**(2))))) + (((5.6782336564055735e-3) * (np.sin((x[:,2])**(-1)))) + (((-2.342077892261374e-3) * (np.sin((x[:,4])**(-1)))) + (((-29660.538256867454) * (np.tanh((((((x[:,0])**(-1)) * ((x[:,2])**(-3))) * ((x[:,4])**(2))) * ((x[:,3])**(-2))) * ((x[:,3])**(-1))))) + (((2.4298412622378995) * (np.tanh(((x[:,0])**(-1)) * ((x[:,2])**(-1))))) + ((-2.874840652450956e-3) * (np.sqrt(((((x[:,3])**(-1)) * ((x[:,2])**(-3))) * ((x[:,3])**(-3))) * ((x[:,2])**(-2))))))))))))))))"
"Id(((171.02483016143685) + (((-18118.85054871923) * (Sqrt(((((x0)^(-1)) * ((x2)^(3))) * ((x3)^(-3))) * ((x1)^(2))))) + (((-8.35892771499962) * (Tanh((((((x0)^(-3)) * ((x4)^(-2))) * ((x2)^(-1))) * ((x3)^(1))) * ((x1)^(1))))) + (((3.64295383033246) * (Log((x2)^(1)))) + (((1.0626996266159927) * (Exp(((x2)^(-2)) * ((x3)^(-2))))) + (((-0.4956004620768413) * (Sin((x1)^(2)))) + (((-1.2511629662903476) * (Log(((x2)^(-1)) * ((x3)^(-3))))) + (((133.08769583923015) * (Sqrt(((((x0)^(-2)) * ((x4)^(-1))) * ((x2)^(2))) * ((x1)^(3))))) + (((-3.666680189496212) * (Sqrt(((((((x3)^(-1)) * ((x0)^(3))) * ((x1)^(3))) * ((x2)^(-2))) * ((x0)^(-3))) * ((x2)^(3))))) + (((-1.3769885125282384) * (Log(((x0)^(1)) * ((x4)^(2))))) + (((-410.0375684138185) * (Sqrt((x0)^(-1)))) + ((-3.2122176113285072) * (Log(((x0)^(3)) * ((x2)^(3)))))))))))))))) / ((1.0) + (((6.872426291761269e-3) * (Tanh((((x3)^(-2)) * ((x1)^(1))) * ((x4)^(-1))))) + (((8916.743568144937) * (Sqrt((((x2)^(2)) * ((x0)^(-2))) * ((x4)^(3))))) + (((4.292336567567737e-3) * (Cos((x2)^(-1)))) + (((-0.46147428897737874) * (Sqrt((x4)^(2)))) + (((1.7570405165455005e-4) * (Sqrt((((((x4)^(2)) * ((x2)^(-2))) * ((x0)^(-1))) * ((x1)^(3))) * ((x3)^(2))))) + (((0.12331225744927177) * (Tanh(((((x0)^(-3)) * ((x4)^(-1))) * ((x2)^(-2))) * ((x0)^(1))))) + ((-8.471018749133737e-2) * (Tanh(((((x0)^(2)) * ((x3)^(-1))) * ((x4)^(2))) * ((x2)^(-1)))))))))))))","[[171.02483016143685,-18118.85054871923,-8.35892771499962,3.64295383033246,1.0626996266159927,-0.4956004620768413,-1.2511629662903476,133.08769583923015,-3.666680189496212,-1.3769885125282384,-410.0375684138185,-3.2122176113285072,6.872426291761269e-3,8916.743568144937,4.292336567567737e-3,-0.46147428897737874,1.7570405165455005e-4,0.12331225744927177,-8.471018749133737e-2]]","(((171.02483016143685) + (((-18118.85054871923) * (np.sqrt(((((x[:,0])**(-1)) * ((x[:,2])**(3))) * ((x[:,3])**(-3))) * ((x[:,1])**(2))))) + (((-8.35892771499962) * (np.tanh((((((x[:,0])**(-3)) * ((x[:,4])**(-2))) * ((x[:,2])**(-1))) * ((x[:,3])**(1))) * ((x[:,1])**(1))))) + (((3.64295383033246) * (np.log((x[:,2])**(1)))) + (((1.0626996266159927) * (np.exp(((x[:,2])**(-2)) * ((x[:,3])**(-2))))) + (((-0.4956004620768413) * (np.sin((x[:,1])**(2)))) + (((-1.2511629662903476) * (np.log(((x[:,2])**(-1)) * ((x[:,3])**(-3))))) + (((133.08769583923015) * (np.sqrt(((((x[:,0])**(-2)) * ((x[:,4])**(-1))) * ((x[:,2])**(2))) * ((x[:,1])**(3))))) + (((-3.666680189496212) * (np.sqrt(((((((x[:,3])**(-1)) * ((x[:,0])**(3))) * ((x[:,1])**(3))) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))) * ((x[:,2])**(3))))) + (((-1.3769885125282384) * (np.log(((x[:,0])**(1)) * ((x[:,4])**(2))))) + (((-410.0375684138185) * (np.sqrt((x[:,0])**(-1)))) + ((-3.2122176113285072) * (np.log(((x[:,0])**(3)) * ((x[:,2])**(3)))))))))))))))) / ((1.0) + (((6.872426291761269e-3) * (np.tanh((((x[:,3])**(-2)) * ((x[:,1])**(1))) * ((x[:,4])**(-1))))) + (((8916.743568144937) * (np.sqrt((((x[:,2])**(2)) * ((x[:,0])**(-2))) * ((x[:,4])**(3))))) + (((4.292336567567737e-3) * (np.cos((x[:,2])**(-1)))) + (((-0.46147428897737874) * (np.sqrt((x[:,4])**(2)))) + (((1.7570405165455005e-4) * (np.sqrt((((((x[:,4])**(2)) * ((x[:,2])**(-2))) * ((x[:,0])**(-1))) * ((x[:,1])**(3))) * ((x[:,3])**(2))))) + (((0.12331225744927177) * (np.tanh(((((x[:,0])**(-3)) * ((x[:,4])**(-1))) * ((x[:,2])**(-2))) * ((x[:,0])**(1))))) + ((-8.471018749133737e-2) * (np.tanh(((((x[:,0])**(2)) * ((x[:,3])**(-1))) * ((x[:,4])**(2))) * ((x[:,2])**(-1)))))))))))))"
"Id(((127.50571680099893) + (((-2.082997062903987e-3) * (Id(((x4)^(-2)) * ((x0)^(-1))))) + (((-0.5449529405064749) * (Sin((x1)^(2)))) + (((-0.6401099316964947) * (Cos(((x2)^(-3)) * ((x0)^(-1))))) + (((-0.10017713779993659) * (Id(((x4)^(-1)) * ((x2)^(2))))) + (((17.337707684733687) * (Sin(((x2)^(-3)) * ((x4)^(3))))) + (((0.12589888367106739) * (Sqrt((x3)^(2)))) + (((-1.625874708905537) * (Sqrt(((x2)^(-3)) * ((x0)^(-1))))) + (((-373232.15264614194) * (Tanh((((x4)^(2)) * ((x3)^(-3))) * ((x1)^(2))))) + (((-0.9224988427056746) * (Id((x1)^(1)))) + (((1.3267229121834907) * (Exp(((x2)^(-3)) * ((x0)^(-2))))) + (((0.5535490538647236) * (Log(((x3)^(2)) * ((x4)^(3))))) + (((-1.4082355963318232) * (Cos((x2)^(-3)))) + (((0.1628928144370756) * (Cos((x1)^(3)))) + ((11.147402212690572) * (Tanh((((x4)^(2)) * ((x2)^(1))) * ((x0)^(2))))))))))))))))))) / ((1.0) + (((1490358.0479453765) * (Tanh(((((x2)^(2)) * ((x0)^(-2))) * ((x1)^(1))) * ((x3)^(-2))))) + (((1.2745343048186641e-3) * (Sqrt((((x2)^(-1)) * ((x1)^(3))) * ((x0)^(-1))))) + (((-4.8280619456037774e-2) * (Tanh(((((x1)^(2)) * ((x0)^(-1))) * ((x4)^(1))) * ((x3)^(2))))) + (((-3.4794689777681377e-7) * (Id(((x4)^(-1)) * ((x3)^(1))))) + (((3.004522419885454e-2) * (Log((((x4)^(2)) * ((x0)^(2))) * ((x2)^(2))))) + (((-9.326547546744477e-4) * (Id(((x3)^(-2)) * ((x2)^(-3))))) + (((8.249504813498832e-6) * (Sqrt((x0)^(2)))) + ((1.917504970262443e-2) * (Sqrt((((x0)^(-1)) * ((x3)^(1))) * ((x4)^(-1))))))))))))))","[[127.50571680099893,-2.082997062903987e-3,-0.5449529405064749,-0.6401099316964947,-0.10017713779993659,17.337707684733687,0.12589888367106739,-1.625874708905537,-373232.15264614194,-0.9224988427056746,1.3267229121834907,0.5535490538647236,-1.4082355963318232,0.1628928144370756,11.147402212690572,1490358.0479453765,1.2745343048186641e-3,-4.8280619456037774e-2,-3.4794689777681377e-7,3.004522419885454e-2,-9.326547546744477e-4,8.249504813498832e-6,1.917504970262443e-2]]","(((127.50571680099893) + (((-2.082997062903987e-3) * ((((x[:,4])**(-2)) * ((x[:,0])**(-1))))) + (((-0.5449529405064749) * (np.sin((x[:,1])**(2)))) + (((-0.6401099316964947) * (np.cos(((x[:,2])**(-3)) * ((x[:,0])**(-1))))) + (((-0.10017713779993659) * ((((x[:,4])**(-1)) * ((x[:,2])**(2))))) + (((17.337707684733687) * (np.sin(((x[:,2])**(-3)) * ((x[:,4])**(3))))) + (((0.12589888367106739) * (np.sqrt((x[:,3])**(2)))) + (((-1.625874708905537) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-1))))) + (((-373232.15264614194) * (np.tanh((((x[:,4])**(2)) * ((x[:,3])**(-3))) * ((x[:,1])**(2))))) + (((-0.9224988427056746) * (((x[:,1])**(1)))) + (((1.3267229121834907) * (np.exp(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((0.5535490538647236) * (np.log(((x[:,3])**(2)) * ((x[:,4])**(3))))) + (((-1.4082355963318232) * (np.cos((x[:,2])**(-3)))) + (((0.1628928144370756) * (np.cos((x[:,1])**(3)))) + ((11.147402212690572) * (np.tanh((((x[:,4])**(2)) * ((x[:,2])**(1))) * ((x[:,0])**(2))))))))))))))))))) / ((1.0) + (((1490358.0479453765) * (np.tanh(((((x[:,2])**(2)) * ((x[:,0])**(-2))) * ((x[:,1])**(1))) * ((x[:,3])**(-2))))) + (((1.2745343048186641e-3) * (np.sqrt((((x[:,2])**(-1)) * ((x[:,1])**(3))) * ((x[:,0])**(-1))))) + (((-4.8280619456037774e-2) * (np.tanh(((((x[:,1])**(2)) * ((x[:,0])**(-1))) * ((x[:,4])**(1))) * ((x[:,3])**(2))))) + (((-3.4794689777681377e-7) * ((((x[:,4])**(-1)) * ((x[:,3])**(1))))) + (((3.004522419885454e-2) * (np.log((((x[:,4])**(2)) * ((x[:,0])**(2))) * ((x[:,2])**(2))))) + (((-9.326547546744477e-4) * ((((x[:,3])**(-2)) * ((x[:,2])**(-3))))) + (((8.249504813498832e-6) * (np.sqrt((x[:,0])**(2)))) + ((1.917504970262443e-2) * (np.sqrt((((x[:,0])**(-1)) * ((x[:,3])**(1))) * ((x[:,4])**(-1))))))))))))))"
"Id(((-4272.823981555227) + (((-1.9730963756576037) * (Tanh(((x4)^(3)) * ((x0)^(2))))) + (((64.95654466746745) * (Sqrt((((x4)^(1)) * ((x3)^(1))) * ((x0)^(-1))))) + (((-1.772921241065104) * (Tanh(((x2)^(-2)) * ((x4)^(1))))) + (((76.08614719337734) * (Sin(((((((x4)^(-2)) * ((x2)^(1))) * ((x1)^(3))) * ((x3)^(-2))) * ((x0)^(-2))) * ((x1)^(1))))) + (((8.902208219544328e-2) * (Id(((x3)^(-2)) * ((x2)^(-3))))) + (((-627.6374868488375) * (Sqrt(((x0)^(-3)) * ((x4)^(-2))))) + (((-33.427893638839635) * (Sqrt((x2)^(1)))) + (((3428.402037846342) * (Exp(((x4)^(-2)) * ((x0)^(-3))))) + (((-8.870993323414414) * (Tanh((((((x2)^(-3)) * ((x0)^(-3))) * ((x3)^(-1))) * ((x1)^(1))) * ((x4)^(-2))))) + (((-50042.28148216571) * (Sqrt((((x1)^(1)) * ((x4)^(3))) * ((x0)^(-2))))) + (((-4.642678892022458) * (Log((((x3)^(-1)) * ((x2)^(1))) * ((x0)^(2))))) + (((1023.9634024252398) * (Exp((((((x2)^(3)) * ((x1)^(3))) * ((x2)^(-3))) * ((x2)^(1))) * ((x0)^(-2))))) + (((-29.228031645738156) * (Sqrt(((x0)^(-1)) * ((x2)^(-1))))) + (((12.454935318499846) * (Sqrt(((x4)^(-1)) * ((x3)^(-3))))) + (((-9.899803873507793) * (Sqrt((((x0)^(-2)) * ((x1)^(3))) * ((x2)^(-1))))) + ((1.669123321703363) * (Log(((x2)^(3)) * ((x4)^(-2))))))))))))))))))))) / ((1.0) + (((5.170575622562068e-3) * (Sin(((x4)^(-2)) * ((x3)^(-3))))) + (((6.05353041815191e-3) * (Cos((x2)^(-1)))) + ((19.16253867492904) * (Sqrt(((((x2)^(3)) * ((x4)^(2))) * ((x3)^(-2))) * ((x1)^(3)))))))))","[[-4272.823981555227,-1.9730963756576037,64.95654466746745,-1.772921241065104,76.08614719337734,8.902208219544328e-2,-627.6374868488375,-33.427893638839635,3428.402037846342,-8.870993323414414,-50042.28148216571,-4.642678892022458,1023.9634024252398,-29.228031645738156,12.454935318499846,-9.899803873507793,1.669123321703363,5.170575622562068e-3,6.05353041815191e-3,19.16253867492904]]","(((-4272.823981555227) + (((-1.9730963756576037) * (np.tanh(((x[:,4])**(3)) * ((x[:,0])**(2))))) + (((64.95654466746745) * (np.sqrt((((x[:,4])**(1)) * ((x[:,3])**(1))) * ((x[:,0])**(-1))))) + (((-1.772921241065104) * (np.tanh(((x[:,2])**(-2)) * ((x[:,4])**(1))))) + (((76.08614719337734) * (np.sin(((((((x[:,4])**(-2)) * ((x[:,2])**(1))) * ((x[:,1])**(3))) * ((x[:,3])**(-2))) * ((x[:,0])**(-2))) * ((x[:,1])**(1))))) + (((8.902208219544328e-2) * ((((x[:,3])**(-2)) * ((x[:,2])**(-3))))) + (((-627.6374868488375) * (np.sqrt(((x[:,0])**(-3)) * ((x[:,4])**(-2))))) + (((-33.427893638839635) * (np.sqrt((x[:,2])**(1)))) + (((3428.402037846342) * (np.exp(((x[:,4])**(-2)) * ((x[:,0])**(-3))))) + (((-8.870993323414414) * (np.tanh((((((x[:,2])**(-3)) * ((x[:,0])**(-3))) * ((x[:,3])**(-1))) * ((x[:,1])**(1))) * ((x[:,4])**(-2))))) + (((-50042.28148216571) * (np.sqrt((((x[:,1])**(1)) * ((x[:,4])**(3))) * ((x[:,0])**(-2))))) + (((-4.642678892022458) * (np.log((((x[:,3])**(-1)) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + (((1023.9634024252398) * (np.exp((((((x[:,2])**(3)) * ((x[:,1])**(3))) * ((x[:,2])**(-3))) * ((x[:,2])**(1))) * ((x[:,0])**(-2))))) + (((-29.228031645738156) * (np.sqrt(((x[:,0])**(-1)) * ((x[:,2])**(-1))))) + (((12.454935318499846) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,3])**(-3))))) + (((-9.899803873507793) * (np.sqrt((((x[:,0])**(-2)) * ((x[:,1])**(3))) * ((x[:,2])**(-1))))) + ((1.669123321703363) * (np.log(((x[:,2])**(3)) * ((x[:,4])**(-2))))))))))))))))))))) / ((1.0) + (((5.170575622562068e-3) * (np.sin(((x[:,4])**(-2)) * ((x[:,3])**(-3))))) + (((6.05353041815191e-3) * (np.cos((x[:,2])**(-1)))) + ((19.16253867492904) * (np.sqrt(((((x[:,2])**(3)) * ((x[:,4])**(2))) * ((x[:,3])**(-2))) * ((x[:,1])**(3)))))))))"
"Id(((39.65877324206245) + (((-47527.73620590878) * (Tanh(((x1)^(3)) * ((x3)^(2))))) + (((4.7211220802936795) * (Log((x4)^(-1)))) + (((47526.01183801007) * (Tanh(((((((x1)^(2)) * ((x4)^(-1))) * ((x2)^(1))) * ((x3)^(1))) * ((x0)^(3))) * ((x0)^(-3))))) + (((-0.9558788173806185) * (Cos((x2)^(-3)))) + (((-0.29914538476895736) * (Cos(((x0)^(1)) * ((x1)^(2))))) + (((-3.9788551151866534) * (Log((x2)^(2)))) + (((0.9821958257275849) * (Log(((((x0)^(-1)) * ((x2)^(1))) * ((x2)^(-2))) * ((x2)^(3))))) + (((-3.9952812727984996) * (Tanh((((x4)^(-2)) * ((x2)^(3))) * ((x0)^(-1))))) + (((-1.9713067011332452e9) * (Id(((((x0)^(-1)) * ((x2)^(2))) * ((x3)^(-1))) * ((x4)^(2))))) + (((-11613.52039935317) * (Id(((x3)^(-3)) * ((x1)^(1))))) + (((354.41334806604885) * (Sqrt((x0)^(-1)))) + (((6.570038981017639) * (Tanh((((x3)^(-1)) * ((x0)^(3))) * ((x4)^(3))))) + (((52.04293982969871) * (Tanh(((x4)^(1)) * ((x0)^(1))))) + (((4.487327494378635) * (Id((((x0)^(-2)) * ((x2)^(-2))) * ((x4)^(-1))))) + (((-0.20264009610809475) * (Sqrt((x0)^(1)))) + (((8.951217244027454e-2) * (Sqrt((x3)^(2)))) + ((-177.8570336893067) * (Sqrt(((x2)^(-2)) * ((x0)^(-2)))))))))))))))))))))) / ((1.0) + (((-2.9650768264983304e-5) * (Id(((x0)^(1)) * ((x2)^(2))))) + (((-2.212101327727232) * (Tanh(((((x1)^(1)) * ((x3)^(-3))) * ((x2)^(-2))) * ((x3)^(-1))))) + ((2.141408171765528e-4) * (Sqrt((((((x4)^(-2)) * ((x2)^(-1))) * ((x3)^(1))) * ((x0)^(-2))) * ((x1)^(3)))))))))","[[39.65877324206245,-47527.73620590878,4.7211220802936795,47526.01183801007,-0.9558788173806185,-0.29914538476895736,-3.9788551151866534,0.9821958257275849,-3.9952812727984996,-1.9713067011332452e9,-11613.52039935317,354.41334806604885,6.570038981017639,52.04293982969871,4.487327494378635,-0.20264009610809475,8.951217244027454e-2,-177.8570336893067,-2.9650768264983304e-5,-2.212101327727232,2.141408171765528e-4]]","(((39.65877324206245) + (((-47527.73620590878) * (np.tanh(((x[:,1])**(3)) * ((x[:,3])**(2))))) + (((4.7211220802936795) * (np.log((x[:,4])**(-1)))) + (((47526.01183801007) * (np.tanh(((((((x[:,1])**(2)) * ((x[:,4])**(-1))) * ((x[:,2])**(1))) * ((x[:,3])**(1))) * ((x[:,0])**(3))) * ((x[:,0])**(-3))))) + (((-0.9558788173806185) * (np.cos((x[:,2])**(-3)))) + (((-0.29914538476895736) * (np.cos(((x[:,0])**(1)) * ((x[:,1])**(2))))) + (((-3.9788551151866534) * (np.log((x[:,2])**(2)))) + (((0.9821958257275849) * (np.log(((((x[:,0])**(-1)) * ((x[:,2])**(1))) * ((x[:,2])**(-2))) * ((x[:,2])**(3))))) + (((-3.9952812727984996) * (np.tanh((((x[:,4])**(-2)) * ((x[:,2])**(3))) * ((x[:,0])**(-1))))) + (((-1.9713067011332452e9) * ((((((x[:,0])**(-1)) * ((x[:,2])**(2))) * ((x[:,3])**(-1))) * ((x[:,4])**(2))))) + (((-11613.52039935317) * ((((x[:,3])**(-3)) * ((x[:,1])**(1))))) + (((354.41334806604885) * (np.sqrt((x[:,0])**(-1)))) + (((6.570038981017639) * (np.tanh((((x[:,3])**(-1)) * ((x[:,0])**(3))) * ((x[:,4])**(3))))) + (((52.04293982969871) * (np.tanh(((x[:,4])**(1)) * ((x[:,0])**(1))))) + (((4.487327494378635) * (((((x[:,0])**(-2)) * ((x[:,2])**(-2))) * ((x[:,4])**(-1))))) + (((-0.20264009610809475) * (np.sqrt((x[:,0])**(1)))) + (((8.951217244027454e-2) * (np.sqrt((x[:,3])**(2)))) + ((-177.8570336893067) * (np.sqrt(((x[:,2])**(-2)) * ((x[:,0])**(-2)))))))))))))))))))))) / ((1.0) + (((-2.9650768264983304e-5) * ((((x[:,0])**(1)) * ((x[:,2])**(2))))) + (((-2.212101327727232) * (np.tanh(((((x[:,1])**(1)) * ((x[:,3])**(-3))) * ((x[:,2])**(-2))) * ((x[:,3])**(-1))))) + ((2.141408171765528e-4) * (np.sqrt((((((x[:,4])**(-2)) * ((x[:,2])**(-1))) * ((x[:,3])**(1))) * ((x[:,0])**(-2))) * ((x[:,1])**(3)))))))))"
"Id(((142.7222282413626) + (((-3.5895392937255615) * (Log(((x3)^(-1)) * ((x2)^(-2))))) + (((35.00964827838442) * (Sqrt((x0)^(-1)))) + (((3060058.4544523438) * (Sin((((x2)^(-2)) * ((x0)^(-3))) * ((x3)^(-1))))) + (((-0.809535658824543) * (Cos((x2)^(-1)))) + (((-464.7912980170441) * (Id(((x2)^(-1)) * ((x3)^(-2))))) + (((-3.4388338332847717) * (Tanh((((x4)^(-3)) * ((x0)^(-3))) * ((x1)^(1))))) + (((-32976.95924608704) * (Sin((x4)^(3)))) + (((-3.7412411257590344e-4) * (Id((x0)^(1)))) + (((3510.8605547700154) * (Tanh((x3)^(-3)))) + (((-2058.8868505849546) * (Sqrt(((x0)^(-1)) * ((x4)^(2))))) + (((-3.3459727967219943) * (Sqrt((((x2)^(3)) * ((x0)^(-1))) * ((x4)^(-2))))) + (((2.2657189254807992) * (Log((((x3)^(3)) * ((x0)^(-3))) * ((x3)^(-3))))) + (((-14.49186767942496) * (Log((x2)^(1)))) + (((830.8884862598118) * (Id(((((x1)^(3)) * ((x3)^(-2))) * ((x4)^(-1))) * ((x0)^(-2))))) + (((-1.1389266380199187e-2) * (Sqrt(((x4)^(-1)) * ((x1)^(3))))) + (((-715.7739608795173) * (Id(((x0)^(-2)) * ((x2)^(-2))))) + (((1.7009386263465882e-3) * (Id((((((x3)^(3)) * ((x4)^(-1))) * ((x0)^(-2))) * ((x1)^(2))) * ((x2)^(1))))) + (((-0.517581062675413) * (Log((x4)^(1)))) + ((-1.0313621506344088) * (Log((x4)^(2))))))))))))))))))))))) / ((1.0) + (((-2.3086604110575427e-3) * (Cos((x0)^(1)))) + (((2.8681604595372168e-2) * (Tanh(((((x4)^(2)) * ((x0)^(2))) * ((x3)^(-3))) * ((x1)^(3))))) + (((-2.6735663548541413) * (Sin(((x2)^(-2)) * ((x3)^(-3))))) + ((0.20205160022956514) * (Tanh(((((x3)^(1)) * ((x0)^(-2))) * ((x4)^(-1))) * ((x2)^(-1))))))))))","[[142.7222282413626,-3.5895392937255615,35.00964827838442,3060058.4544523438,-0.809535658824543,-464.7912980170441,-3.4388338332847717,-32976.95924608704,-3.7412411257590344e-4,3510.8605547700154,-2058.8868505849546,-3.3459727967219943,2.2657189254807992,-14.49186767942496,830.8884862598118,-1.1389266380199187e-2,-715.7739608795173,1.7009386263465882e-3,-0.517581062675413,-1.0313621506344088,-2.3086604110575427e-3,2.8681604595372168e-2,-2.6735663548541413,0.20205160022956514]]","(((142.7222282413626) + (((-3.5895392937255615) * (np.log(((x[:,3])**(-1)) * ((x[:,2])**(-2))))) + (((35.00964827838442) * (np.sqrt((x[:,0])**(-1)))) + (((3060058.4544523438) * (np.sin((((x[:,2])**(-2)) * ((x[:,0])**(-3))) * ((x[:,3])**(-1))))) + (((-0.809535658824543) * (np.cos((x[:,2])**(-1)))) + (((-464.7912980170441) * ((((x[:,2])**(-1)) * ((x[:,3])**(-2))))) + (((-3.4388338332847717) * (np.tanh((((x[:,4])**(-3)) * ((x[:,0])**(-3))) * ((x[:,1])**(1))))) + (((-32976.95924608704) * (np.sin((x[:,4])**(3)))) + (((-3.7412411257590344e-4) * (((x[:,0])**(1)))) + (((3510.8605547700154) * (np.tanh((x[:,3])**(-3)))) + (((-2058.8868505849546) * (np.sqrt(((x[:,0])**(-1)) * ((x[:,4])**(2))))) + (((-3.3459727967219943) * (np.sqrt((((x[:,2])**(3)) * ((x[:,0])**(-1))) * ((x[:,4])**(-2))))) + (((2.2657189254807992) * (np.log((((x[:,3])**(3)) * ((x[:,0])**(-3))) * ((x[:,3])**(-3))))) + (((-14.49186767942496) * (np.log((x[:,2])**(1)))) + (((830.8884862598118) * ((((((x[:,1])**(3)) * ((x[:,3])**(-2))) * ((x[:,4])**(-1))) * ((x[:,0])**(-2))))) + (((-1.1389266380199187e-2) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,1])**(3))))) + (((-715.7739608795173) * ((((x[:,0])**(-2)) * ((x[:,2])**(-2))))) + (((1.7009386263465882e-3) * (((((((x[:,3])**(3)) * ((x[:,4])**(-1))) * ((x[:,0])**(-2))) * ((x[:,1])**(2))) * ((x[:,2])**(1))))) + (((-0.517581062675413) * (np.log((x[:,4])**(1)))) + ((-1.0313621506344088) * (np.log((x[:,4])**(2))))))))))))))))))))))) / ((1.0) + (((-2.3086604110575427e-3) * (np.cos((x[:,0])**(1)))) + (((2.8681604595372168e-2) * (np.tanh(((((x[:,4])**(2)) * ((x[:,0])**(2))) * ((x[:,3])**(-3))) * ((x[:,1])**(3))))) + (((-2.6735663548541413) * (np.sin(((x[:,2])**(-2)) * ((x[:,3])**(-3))))) + ((0.20205160022956514) * (np.tanh(((((x[:,3])**(1)) * ((x[:,0])**(-2))) * ((x[:,4])**(-1))) * ((x[:,2])**(-1))))))))))"
"Id(((8452825.561544528) + (((-1.8828058517430992e-4) * (Id((((x0)^(-1)) * ((x3)^(3))) * ((x1)^(1))))) + (((1.5758417951022202e-2) * (Sqrt((x4)^(-2)))) + (((-888.5153467649989) * (Sqrt((((x4)^(1)) * ((x2)^(2))) * ((x3)^(-1))))) + (((-8444242.687751917) * (Exp(((x3)^(-1)) * ((x0)^(-2))))) + (((6.362018698503096) * (Sqrt(((x0)^(-3)) * ((x4)^(-3))))) + (((1.2138347297244736) * (Sqrt((x3)^(1)))) + (((-0.18823790060821222) * (Id((((x3)^(-2)) * ((x4)^(-1))) * ((x1)^(2))))) + (((-170.58014345047405) * (Id(((x4)^(2)) * ((x1)^(1))))) + (((-3.1196901367946612) * (Tanh((((x0)^(1)) * ((x4)^(2))) * ((x1)^(1))))) + (((3119.371927600825) * (Sin((x0)^(-1)))) + (((4.2850539895814346e-4) * (Sqrt((((x4)^(2)) * ((x0)^(3))) * ((x2)^(2))))) + (((0.49251614338181515) * (Sin((((x3)^(2)) * ((x1)^(1))) * ((x2)^(-1))))) + (((-2.0306341471958405) * (Sqrt((x4)^(1)))) + (((-9.006474560536043) * (Tanh((((x1)^(1)) * ((x4)^(-2))) * ((x0)^(-2))))) + (((-8404.024727256981) * (Cos(((x2)^(-1)) * ((x3)^(-2))))) + (((-0.5010594573544457) * (Sin((x1)^(2)))) + (((-3.612031906079392) * (Log((x2)^(2)))) + (((42741.15841616953) * (Id(((x3)^(-2)) * ((x2)^(3))))) + (((-9.523118599383193e-4) * (Sqrt((((x2)^(-1)) * ((x0)^(2))) * ((x3)^(-1))))) + (((-1.9440899648253806e-4) * (Sqrt((x4)^(-3)))) + (((4.430723718352773) * (Log((x0)^(-2)))) + (((-130.37480267138648) * (Sqrt(((x2)^(-1)) * ((x0)^(-1))))) + (((-1.2859822399465333) * (Cos((x2)^(-3)))) + ((-3.0281973421458304) * (Sqrt((((x2)^(1)) * ((x0)^(-2))) * ((x4)^(-3))))))))))))))))))))))))))))) / ((1.0) + ((-4.0292792808803046e-2) * (Tanh((((x2)^(-2)) * ((x4)^(-2))) * ((x0)^(-2)))))))","[[8452825.561544528,-1.8828058517430992e-4,1.5758417951022202e-2,-888.5153467649989,-8444242.687751917,6.362018698503096,1.2138347297244736,-0.18823790060821222,-170.58014345047405,-3.1196901367946612,3119.371927600825,4.2850539895814346e-4,0.49251614338181515,-2.0306341471958405,-9.006474560536043,-8404.024727256981,-0.5010594573544457,-3.612031906079392,42741.15841616953,-9.523118599383193e-4,-1.9440899648253806e-4,4.430723718352773,-130.37480267138648,-1.2859822399465333,-3.0281973421458304,-4.0292792808803046e-2]]","(((8452825.561544528) + (((-1.8828058517430992e-4) * (((((x[:,0])**(-1)) * ((x[:,3])**(3))) * ((x[:,1])**(1))))) + (((1.5758417951022202e-2) * (np.sqrt((x[:,4])**(-2)))) + (((-888.5153467649989) * (np.sqrt((((x[:,4])**(1)) * ((x[:,2])**(2))) * ((x[:,3])**(-1))))) + (((-8444242.687751917) * (np.exp(((x[:,3])**(-1)) * ((x[:,0])**(-2))))) + (((6.362018698503096) * (np.sqrt(((x[:,0])**(-3)) * ((x[:,4])**(-3))))) + (((1.2138347297244736) * (np.sqrt((x[:,3])**(1)))) + (((-0.18823790060821222) * (((((x[:,3])**(-2)) * ((x[:,4])**(-1))) * ((x[:,1])**(2))))) + (((-170.58014345047405) * ((((x[:,4])**(2)) * ((x[:,1])**(1))))) + (((-3.1196901367946612) * (np.tanh((((x[:,0])**(1)) * ((x[:,4])**(2))) * ((x[:,1])**(1))))) + (((3119.371927600825) * (np.sin((x[:,0])**(-1)))) + (((4.2850539895814346e-4) * (np.sqrt((((x[:,4])**(2)) * ((x[:,0])**(3))) * ((x[:,2])**(2))))) + (((0.49251614338181515) * (np.sin((((x[:,3])**(2)) * ((x[:,1])**(1))) * ((x[:,2])**(-1))))) + (((-2.0306341471958405) * (np.sqrt((x[:,4])**(1)))) + (((-9.006474560536043) * (np.tanh((((x[:,1])**(1)) * ((x[:,4])**(-2))) * ((x[:,0])**(-2))))) + (((-8404.024727256981) * (np.cos(((x[:,2])**(-1)) * ((x[:,3])**(-2))))) + (((-0.5010594573544457) * (np.sin((x[:,1])**(2)))) + (((-3.612031906079392) * (np.log((x[:,2])**(2)))) + (((42741.15841616953) * ((((x[:,3])**(-2)) * ((x[:,2])**(3))))) + (((-9.523118599383193e-4) * (np.sqrt((((x[:,2])**(-1)) * ((x[:,0])**(2))) * ((x[:,3])**(-1))))) + (((-1.9440899648253806e-4) * (np.sqrt((x[:,4])**(-3)))) + (((4.430723718352773) * (np.log((x[:,0])**(-2)))) + (((-130.37480267138648) * (np.sqrt(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((-1.2859822399465333) * (np.cos((x[:,2])**(-3)))) + ((-3.0281973421458304) * (np.sqrt((((x[:,2])**(1)) * ((x[:,0])**(-2))) * ((x[:,4])**(-3))))))))))))))))))))))))))))) / ((1.0) + ((-4.0292792808803046e-2) * (np.tanh((((x[:,2])**(-2)) * ((x[:,4])**(-2))) * ((x[:,0])**(-2)))))))"
"Id(((204.38820563494107) + (((128.7884562054295) * (Sin((((((x2)^(-1)) * ((x0)^(-1))) * ((x1)^(3))) * ((x3)^(-2))) * ((x4)^(1))))) + (((4.1234922736701384e9) * (Tanh(((((x4)^(3)) * ((x1)^(1))) * ((x3)^(-1))) * ((x0)^(-2))))) + (((-2.9291191774018692) * (Tanh((((x0)^(3)) * ((x1)^(1))) * ((x3)^(-3))))) + (((-43.85673284242304) * (Cos(((x2)^(-1)) * ((x4)^(1))))) + (((-2.5973630722270907e-3) * (Sqrt(((((x3)^(2)) * ((x2)^(3))) * ((x0)^(-1))) * ((x4)^(-3))))) + (((2.912838816725678) * (Log((x3)^(3)))) + (((105.10471763682) * (Tanh((x3)^(-1)))) + (((0.6954312315864435) * (Tanh(((((x1)^(2)) * ((x2)^(-1))) * ((x0)^(-3))) * ((x4)^(-3))))) + (((-17.461945689784216) * (Tanh((x2)^(2)))) + (((4.701489559039872) * (Log(((x0)^(-2)) * ((x2)^(-1))))) + (((-2501804.97259784) * (Sqrt(((((x2)^(1)) * ((x3)^(-2))) * ((x0)^(-1))) * ((x4)^(3))))) + (((400.4263297227235) * (Id((((((x1)^(1)) * ((x4)^(-1))) * ((x0)^(-2))) * ((x3)^(-2))) * ((x2)^(-2))))) + (((-3.1239969993935857e-3) * (Sqrt(((x0)^(1)) * ((x4)^(-1))))) + (((-1.0900976511274003) * (Cos((x2)^(-3)))) + (((-0.272971023958638) * (Sqrt((x1)^(3)))) + (((712.1487675521951) * (Tanh((x0)^(-1)))) + (((-3.795205336240718) * (Tanh(((((x2)^(3)) * ((x0)^(3))) * ((x4)^(1))) * ((x3)^(-3))))) + (((-295.9609330359948) * (Sin(((x0)^(-1)) * ((x2)^(-1))))) + (((0.6196018481075563) * (Sqrt((x4)^(-1)))) + ((-37.18127749165495) * (Tanh(((x4)^(-1)) * ((x0)^(-1))))))))))))))))))))))))) / ((1.0) + (((-20056.037830938898) * (Id(((x2)^(-1)) * ((x0)^(-3))))) + ((-0.8608121866398859) * (Tanh(((x3)^(-2)) * ((x2)^(-1))))))))","[[204.38820563494107,128.7884562054295,4.1234922736701384e9,-2.9291191774018692,-43.85673284242304,-2.5973630722270907e-3,2.912838816725678,105.10471763682,0.6954312315864435,-17.461945689784216,4.701489559039872,-2501804.97259784,400.4263297227235,-3.1239969993935857e-3,-1.0900976511274003,-0.272971023958638,712.1487675521951,-3.795205336240718,-295.9609330359948,0.6196018481075563,-37.18127749165495,-20056.037830938898,-0.8608121866398859]]","(((204.38820563494107) + (((128.7884562054295) * (np.sin((((((x[:,2])**(-1)) * ((x[:,0])**(-1))) * ((x[:,1])**(3))) * ((x[:,3])**(-2))) * ((x[:,4])**(1))))) + (((4.1234922736701384e9) * (np.tanh(((((x[:,4])**(3)) * ((x[:,1])**(1))) * ((x[:,3])**(-1))) * ((x[:,0])**(-2))))) + (((-2.9291191774018692) * (np.tanh((((x[:,0])**(3)) * ((x[:,1])**(1))) * ((x[:,3])**(-3))))) + (((-43.85673284242304) * (np.cos(((x[:,2])**(-1)) * ((x[:,4])**(1))))) + (((-2.5973630722270907e-3) * (np.sqrt(((((x[:,3])**(2)) * ((x[:,2])**(3))) * ((x[:,0])**(-1))) * ((x[:,4])**(-3))))) + (((2.912838816725678) * (np.log((x[:,3])**(3)))) + (((105.10471763682) * (np.tanh((x[:,3])**(-1)))) + (((0.6954312315864435) * (np.tanh(((((x[:,1])**(2)) * ((x[:,2])**(-1))) * ((x[:,0])**(-3))) * ((x[:,4])**(-3))))) + (((-17.461945689784216) * (np.tanh((x[:,2])**(2)))) + (((4.701489559039872) * (np.log(((x[:,0])**(-2)) * ((x[:,2])**(-1))))) + (((-2501804.97259784) * (np.sqrt(((((x[:,2])**(1)) * ((x[:,3])**(-2))) * ((x[:,0])**(-1))) * ((x[:,4])**(3))))) + (((400.4263297227235) * (((((((x[:,1])**(1)) * ((x[:,4])**(-1))) * ((x[:,0])**(-2))) * ((x[:,3])**(-2))) * ((x[:,2])**(-2))))) + (((-3.1239969993935857e-3) * (np.sqrt(((x[:,0])**(1)) * ((x[:,4])**(-1))))) + (((-1.0900976511274003) * (np.cos((x[:,2])**(-3)))) + (((-0.272971023958638) * (np.sqrt((x[:,1])**(3)))) + (((712.1487675521951) * (np.tanh((x[:,0])**(-1)))) + (((-3.795205336240718) * (np.tanh(((((x[:,2])**(3)) * ((x[:,0])**(3))) * ((x[:,4])**(1))) * ((x[:,3])**(-3))))) + (((-295.9609330359948) * (np.sin(((x[:,0])**(-1)) * ((x[:,2])**(-1))))) + (((0.6196018481075563) * (np.sqrt((x[:,4])**(-1)))) + ((-37.18127749165495) * (np.tanh(((x[:,4])**(-1)) * ((x[:,0])**(-1))))))))))))))))))))))))) / ((1.0) + (((-20056.037830938898) * ((((x[:,2])**(-1)) * ((x[:,0])**(-3))))) + ((-0.8608121866398859) * (np.tanh(((x[:,3])**(-2)) * ((x[:,2])**(-1))))))))"
"Id(((165.94710340764442) + (((-44.16541094042553) * (Sqrt((x3)^(-1)))) + (((-1.70152472915161e-3) * (Sqrt((x4)^(-2)))) + (((-16.91700510683645) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((5.714137510816203e-4) * (Exp((((x4)^(1)) * ((x0)^(1))) * ((x2)^(2))))) + (((8.141217808034407e-2) * (Id(((x3)^(2)) * ((x0)^(-1))))) + (((9.913906330502098e-2) * (Sin(((x4)^(3)) * ((x0)^(2))))) + (((0.27067110182382237) * (Sin(((x4)^(-2)) * ((x2)^(3))))) + (((-3.1460761795097945) * (Log((x3)^(-2)))) + (((921.3279837946287) * (Sin(((((x2)^(-1)) * ((x3)^(1))) * ((x4)^(-1))) * ((x0)^(-3))))) + (((-0.5493076661216301) * (Cos((x2)^(-2)))) + (((-17.75034035106515) * (Id(((x0)^(-1)) * ((x4)^(-1))))) + (((1.219034757060589) * (Sqrt((((x4)^(-3)) * ((x3)^(-2))) * ((x0)^(-1))))) + (((1.1140441239177754) * (Sin(((x2)^(1)) * ((x1)^(3))))) + ((4.960817611813738) * (Log(((x0)^(-2)) * ((x4)^(-1))))))))))))))))))) / ((1.0) + (((1.9602442725595685e-3) * (Cos(((x2)^(-2)) * ((x4)^(-1))))) + (((6.14372642591696e-3) * (Sqrt(((((x3)^(-3)) * ((x4)^(-3))) * ((x2)^(-1))) * ((x0)^(-1))))) + (((5.998033769369631e-6) * (Id((x1)^(3)))) + (((-3.034841735990268) * (Sqrt(((x3)^(-1)) * ((x2)^(3))))) + (((-1.7967196157792596e-4) * (Id((x1)^(2)))) + (((-3.9692497625323266e-4) * (Sin(((((x4)^(2)) * ((x2)^(-3))) * ((x0)^(-1))) * ((x0)^(3))))) + (((6.931349325117265e-3) * (Sin(((x1)^(2)) * ((x2)^(1))))) + (((0.3185192891563555) * (Sqrt((((x0)^(-2)) * ((x3)^(1))) * ((x2)^(-2))))) + (((391.5621885045303) * (Id((x4)^(3)))) + (((-2.9096554243403266e-2) * (Id((((x3)^(-3)) * ((x2)^(-2))) * ((x2)^(-1))))) + ((0.5418983865599798) * (Sqrt((x2)^(2))))))))))))))))","[[165.94710340764442,-44.16541094042553,-1.70152472915161e-3,-16.91700510683645,5.714137510816203e-4,8.141217808034407e-2,9.913906330502098e-2,0.27067110182382237,-3.1460761795097945,921.3279837946287,-0.5493076661216301,-17.75034035106515,1.219034757060589,1.1140441239177754,4.960817611813738,1.9602442725595685e-3,6.14372642591696e-3,5.998033769369631e-6,-3.034841735990268,-1.7967196157792596e-4,-3.9692497625323266e-4,6.931349325117265e-3,0.3185192891563555,391.5621885045303,-2.9096554243403266e-2,0.5418983865599798]]","(((165.94710340764442) + (((-44.16541094042553) * (np.sqrt((x[:,3])**(-1)))) + (((-1.70152472915161e-3) * (np.sqrt((x[:,4])**(-2)))) + (((-16.91700510683645) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((5.714137510816203e-4) * (np.exp((((x[:,4])**(1)) * ((x[:,0])**(1))) * ((x[:,2])**(2))))) + (((8.141217808034407e-2) * ((((x[:,3])**(2)) * ((x[:,0])**(-1))))) + (((9.913906330502098e-2) * (np.sin(((x[:,4])**(3)) * ((x[:,0])**(2))))) + (((0.27067110182382237) * (np.sin(((x[:,4])**(-2)) * ((x[:,2])**(3))))) + (((-3.1460761795097945) * (np.log((x[:,3])**(-2)))) + (((921.3279837946287) * (np.sin(((((x[:,2])**(-1)) * ((x[:,3])**(1))) * ((x[:,4])**(-1))) * ((x[:,0])**(-3))))) + (((-0.5493076661216301) * (np.cos((x[:,2])**(-2)))) + (((-17.75034035106515) * ((((x[:,0])**(-1)) * ((x[:,4])**(-1))))) + (((1.219034757060589) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,3])**(-2))) * ((x[:,0])**(-1))))) + (((1.1140441239177754) * (np.sin(((x[:,2])**(1)) * ((x[:,1])**(3))))) + ((4.960817611813738) * (np.log(((x[:,0])**(-2)) * ((x[:,4])**(-1))))))))))))))))))) / ((1.0) + (((1.9602442725595685e-3) * (np.cos(((x[:,2])**(-2)) * ((x[:,4])**(-1))))) + (((6.14372642591696e-3) * (np.sqrt(((((x[:,3])**(-3)) * ((x[:,4])**(-3))) * ((x[:,2])**(-1))) * ((x[:,0])**(-1))))) + (((5.998033769369631e-6) * (((x[:,1])**(3)))) + (((-3.034841735990268) * (np.sqrt(((x[:,3])**(-1)) * ((x[:,2])**(3))))) + (((-1.7967196157792596e-4) * (((x[:,1])**(2)))) + (((-3.9692497625323266e-4) * (np.sin(((((x[:,4])**(2)) * ((x[:,2])**(-3))) * ((x[:,0])**(-1))) * ((x[:,0])**(3))))) + (((6.931349325117265e-3) * (np.sin(((x[:,1])**(2)) * ((x[:,2])**(1))))) + (((0.3185192891563555) * (np.sqrt((((x[:,0])**(-2)) * ((x[:,3])**(1))) * ((x[:,2])**(-2))))) + (((391.5621885045303) * (((x[:,4])**(3)))) + (((-2.9096554243403266e-2) * (((((x[:,3])**(-3)) * ((x[:,2])**(-2))) * ((x[:,2])**(-1))))) + ((0.5418983865599798) * (np.sqrt((x[:,2])**(2))))))))))))))))"
"Id(((85649.56903850402) + (((-85433.55917173423) * (Exp((x0)^(-2)))) + (((0.9478389727471401) * (Cos((x2)^(-2)))) + (((0.3009898742753079) * (Cos(((x3)^(-1)) * ((x4)^(-2))))) + (((-0.22515950326641354) * (Sqrt((x1)^(3)))) + (((-3.521352108610378e-9) * (Id((((x2)^(1)) * ((x3)^(1))) * ((x4)^(-2))))) + (((-150197.63235635989) * (Sin(((x4)^(2)) * ((x3)^(-1))))) + (((-1.097521690244721e-2) * (Id((((x1)^(2)) * ((x0)^(1))) * ((x3)^(-2))))) + (((-71.2165470739213) * (Cos(((x4)^(1)) * ((x2)^(-1))))) + (((2.970291729979053) * (Log((x2)^(-2)))) + (((4.498530122790539) * (Id((((x0)^(-3)) * ((x1)^(3))) * ((x4)^(-2))))) + (((2.2345952233894373) * (Log((((((x2)^(-2)) * ((x4)^(-3))) * ((x0)^(-1))) * ((x0)^(3))) * ((x4)^(1))))) + (((-0.4305148821124267) * (Sin((x3)^(2)))) + (((16.05438496487359) * (Log((x0)^(-1)))) + (((-5.233510503358618) * (Sqrt((((x0)^(-1)) * ((x1)^(1))) * ((x2)^(-2))))) + (((7.667315655379562e-5) * (Sqrt(((x4)^(1)) * ((x0)^(3))))) + (((3.0257252207002665) * (Log((x3)^(2)))) + (((-42.50534002389405) * (Tanh(((x0)^(-1)) * ((x4)^(-1))))) + ((14.00164529445231) * (Exp((((((x2)^(-3)) * ((x3)^(-3))) * ((x1)^(2))) * ((x3)^(-1))) * ((x4)^(1))))))))))))))))))))))) / ((1.0) + (((-0.6605240753664915) * (Tanh((((((x0)^(1)) * ((x1)^(3))) * ((x4)^(1))) * ((x2)^(2))) * ((x3)^(-3))))) + (((-1.3553407105942397e-3) * (Cos((x1)^(3)))) + (((-1.6941321195196063e-2) * (Id(((x3)^(-3)) * ((x2)^(-3))))) + (((1.0264416249798715e-2) * (Cos((x2)^(-1)))) + ((5.893430656688905e-6) * (Sqrt((x0)^(2))))))))))","[[85649.56903850402,-85433.55917173423,0.9478389727471401,0.3009898742753079,-0.22515950326641354,-3.521352108610378e-9,-150197.63235635989,-1.097521690244721e-2,-71.2165470739213,2.970291729979053,4.498530122790539,2.2345952233894373,-0.4305148821124267,16.05438496487359,-5.233510503358618,7.667315655379562e-5,3.0257252207002665,-42.50534002389405,14.00164529445231,-0.6605240753664915,-1.3553407105942397e-3,-1.6941321195196063e-2,1.0264416249798715e-2,5.893430656688905e-6]]","(((85649.56903850402) + (((-85433.55917173423) * (np.exp((x[:,0])**(-2)))) + (((0.9478389727471401) * (np.cos((x[:,2])**(-2)))) + (((0.3009898742753079) * (np.cos(((x[:,3])**(-1)) * ((x[:,4])**(-2))))) + (((-0.22515950326641354) * (np.sqrt((x[:,1])**(3)))) + (((-3.521352108610378e-9) * (((((x[:,2])**(1)) * ((x[:,3])**(1))) * ((x[:,4])**(-2))))) + (((-150197.63235635989) * (np.sin(((x[:,4])**(2)) * ((x[:,3])**(-1))))) + (((-1.097521690244721e-2) * (((((x[:,1])**(2)) * ((x[:,0])**(1))) * ((x[:,3])**(-2))))) + (((-71.2165470739213) * (np.cos(((x[:,4])**(1)) * ((x[:,2])**(-1))))) + (((2.970291729979053) * (np.log((x[:,2])**(-2)))) + (((4.498530122790539) * (((((x[:,0])**(-3)) * ((x[:,1])**(3))) * ((x[:,4])**(-2))))) + (((2.2345952233894373) * (np.log((((((x[:,2])**(-2)) * ((x[:,4])**(-3))) * ((x[:,0])**(-1))) * ((x[:,0])**(3))) * ((x[:,4])**(1))))) + (((-0.4305148821124267) * (np.sin((x[:,3])**(2)))) + (((16.05438496487359) * (np.log((x[:,0])**(-1)))) + (((-5.233510503358618) * (np.sqrt((((x[:,0])**(-1)) * ((x[:,1])**(1))) * ((x[:,2])**(-2))))) + (((7.667315655379562e-5) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(3))))) + (((3.0257252207002665) * (np.log((x[:,3])**(2)))) + (((-42.50534002389405) * (np.tanh(((x[:,0])**(-1)) * ((x[:,4])**(-1))))) + ((14.00164529445231) * (np.exp((((((x[:,2])**(-3)) * ((x[:,3])**(-3))) * ((x[:,1])**(2))) * ((x[:,3])**(-1))) * ((x[:,4])**(1))))))))))))))))))))))) / ((1.0) + (((-0.6605240753664915) * (np.tanh((((((x[:,0])**(1)) * ((x[:,1])**(3))) * ((x[:,4])**(1))) * ((x[:,2])**(2))) * ((x[:,3])**(-3))))) + (((-1.3553407105942397e-3) * (np.cos((x[:,1])**(3)))) + (((-1.6941321195196063e-2) * ((((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((1.0264416249798715e-2) * (np.cos((x[:,2])**(-1)))) + ((5.893430656688905e-6) * (np.sqrt((x[:,0])**(2))))))))))"
"Id(((132.34240794590613) + (((0.2160016015879131) * (Sin((x4)^(-2)))) + (((2.9589419429469634) * (Log((x0)^(-2)))) + (((2.6935764469640935) * (Sin((((x4)^(3)) * ((x2)^(-3))) * ((x1)^(1))))) + (((-4.8634376554932204e-4) * (Sqrt((x0)^(2)))) + (((-1.9218863238786277) * (Log(((x0)^(2)) * ((x3)^(-3))))) + (((3.8620542317118756e-3) * (Id((((((x4)^(-1)) * ((x1)^(3))) * ((x3)^(1))) * ((x0)^(-1))) * ((x2)^(1))))) + (((-1.996207074458979e-2) * (Sqrt((((x2)^(-2)) * ((x3)^(-3))) * ((x4)^(-2))))) + (((1.2472623645522583) * (Sqrt(((x4)^(-2)) * ((x3)^(-3))))) + (((-2.3339916000177725) * (Log((x4)^(2)))) + (((9.524845104648916) * (Log((x2)^(-1)))) + (((-57405.64285940927) * (Sin(((x4)^(1)) * ((x0)^(-1))))) + (((-23.05689316787642) * (Tanh(((((x3)^(1)) * ((x2)^(-1))) * ((x4)^(-1))) * ((x0)^(-2))))) + (((-1.3554380627266465) * (Cos((x2)^(-3)))) + ((33226.08689322198) * (Sqrt((x0)^(-3)))))))))))))))))) / ((1.0) + (((-0.2136145737095534) * (Sqrt(((((x0)^(1)) * ((x4)^(3))) * ((x2)^(3))) * ((x3)^(1))))) + (((-4.361674341182098e-2) * (Tanh(((x2)^(3)) * ((x3)^(2))))) + (((5.905056071187353e-4) * (Sqrt(((((x3)^(1)) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-1))))) + (((8.629589607368242) * (Sqrt((x4)^(3)))) + (((2.636744385380457) * (Sqrt(((x0)^(-2)) * ((x4)^(-1))))) + (((-2.3282821062332556e-5) * (Sqrt(((x0)^(2)) * ((x2)^(2))))) + ((-6.907502656422643e-2) * (Id(((x4)^(1)) * ((x2)^(-1)))))))))))))","[[132.34240794590613,0.2160016015879131,2.9589419429469634,2.6935764469640935,-4.8634376554932204e-4,-1.9218863238786277,3.8620542317118756e-3,-1.996207074458979e-2,1.2472623645522583,-2.3339916000177725,9.524845104648916,-57405.64285940927,-23.05689316787642,-1.3554380627266465,33226.08689322198,-0.2136145737095534,-4.361674341182098e-2,5.905056071187353e-4,8.629589607368242,2.636744385380457,-2.3282821062332556e-5,-6.907502656422643e-2]]","(((132.34240794590613) + (((0.2160016015879131) * (np.sin((x[:,4])**(-2)))) + (((2.9589419429469634) * (np.log((x[:,0])**(-2)))) + (((2.6935764469640935) * (np.sin((((x[:,4])**(3)) * ((x[:,2])**(-3))) * ((x[:,1])**(1))))) + (((-4.8634376554932204e-4) * (np.sqrt((x[:,0])**(2)))) + (((-1.9218863238786277) * (np.log(((x[:,0])**(2)) * ((x[:,3])**(-3))))) + (((3.8620542317118756e-3) * (((((((x[:,4])**(-1)) * ((x[:,1])**(3))) * ((x[:,3])**(1))) * ((x[:,0])**(-1))) * ((x[:,2])**(1))))) + (((-1.996207074458979e-2) * (np.sqrt((((x[:,2])**(-2)) * ((x[:,3])**(-3))) * ((x[:,4])**(-2))))) + (((1.2472623645522583) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,3])**(-3))))) + (((-2.3339916000177725) * (np.log((x[:,4])**(2)))) + (((9.524845104648916) * (np.log((x[:,2])**(-1)))) + (((-57405.64285940927) * (np.sin(((x[:,4])**(1)) * ((x[:,0])**(-1))))) + (((-23.05689316787642) * (np.tanh(((((x[:,3])**(1)) * ((x[:,2])**(-1))) * ((x[:,4])**(-1))) * ((x[:,0])**(-2))))) + (((-1.3554380627266465) * (np.cos((x[:,2])**(-3)))) + ((33226.08689322198) * (np.sqrt((x[:,0])**(-3)))))))))))))))))) / ((1.0) + (((-0.2136145737095534) * (np.sqrt(((((x[:,0])**(1)) * ((x[:,4])**(3))) * ((x[:,2])**(3))) * ((x[:,3])**(1))))) + (((-4.361674341182098e-2) * (np.tanh(((x[:,2])**(3)) * ((x[:,3])**(2))))) + (((5.905056071187353e-4) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))) + (((8.629589607368242) * (np.sqrt((x[:,4])**(3)))) + (((2.636744385380457) * (np.sqrt(((x[:,0])**(-2)) * ((x[:,4])**(-1))))) + (((-2.3282821062332556e-5) * (np.sqrt(((x[:,0])**(2)) * ((x[:,2])**(2))))) + ((-6.907502656422643e-2) * ((((x[:,4])**(1)) * ((x[:,2])**(-1)))))))))))))"
"Id((128.52147829532862) + (((1.0490819660814634e-5) * (Sqrt((((x4)^(-1)) * ((x1)^(3))) * ((x2)^(-3))))) + (((0.5187545869773853) * (Sqrt((((x1)^(2)) * ((x2)^(1))) * ((x0)^(-1))))) + (((-13.545957889858052) * (Tanh((((((x2)^(3)) * ((x4)^(3))) * ((x0)^(3))) * ((x3)^(-3))) * ((x0)^(1))))) + (((0.8682907131639075) * (Sin((x3)^(2)))) + ((-1.1667960538182271e-3) * (Id((((x3)^(1)) * ((x2)^(-3))) * ((x0)^(-1))))))))))","[[128.52147829532862,1.0490819660814634e-5,0.5187545869773853,-13.545957889858052,0.8682907131639075,-1.1667960538182271e-3]]","((128.52147829532862) + (((1.0490819660814634e-5) * (np.sqrt((((x[:,4])**(-1)) * ((x[:,1])**(3))) * ((x[:,2])**(-3))))) + (((0.5187545869773853) * (np.sqrt((((x[:,1])**(2)) * ((x[:,2])**(1))) * ((x[:,0])**(-1))))) + (((-13.545957889858052) * (np.tanh((((((x[:,2])**(3)) * ((x[:,4])**(3))) * ((x[:,0])**(3))) * ((x[:,3])**(-3))) * ((x[:,0])**(1))))) + (((0.8682907131639075) * (np.sin((x[:,3])**(2)))) + ((-1.1667960538182271e-3) * (((((x[:,3])**(1)) * ((x[:,2])**(-3))) * ((x[:,0])**(-1))))))))))"
"Id((127.64380318290682) + (((-363.9369628947972) * (Tanh((((x3)^(-1)) * ((x4)^(-1))) * ((x0)^(-1))))) + (((1.0119906229153638e-6) * (Id((x4)^(-2)))) + (((-99095.31773970487) * (Tanh(((x2)^(-2)) * ((x0)^(-3))))) + (((64.4979798935012) * (Sqrt(((x4)^(1)) * ((x0)^(-1))))) + (((-8.639955371012209e-2) * (Sqrt((((x4)^(1)) * ((x0)^(2))) * ((x2)^(2))))) + ((1.0215553405219846) * (Log((((x3)^(2)) * ((x0)^(-3))) * ((x4)^(-3)))))))))))","[[127.64380318290682,-363.9369628947972,1.0119906229153638e-6,-99095.31773970487,64.4979798935012,-8.639955371012209e-2,1.0215553405219846]]","((127.64380318290682) + (((-363.9369628947972) * (np.tanh((((x[:,3])**(-1)) * ((x[:,4])**(-1))) * ((x[:,0])**(-1))))) + (((1.0119906229153638e-6) * (((x[:,4])**(-2)))) + (((-99095.31773970487) * (np.tanh(((x[:,2])**(-2)) * ((x[:,0])**(-3))))) + (((64.4979798935012) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(-1))))) + (((-8.639955371012209e-2) * (np.sqrt((((x[:,4])**(1)) * ((x[:,0])**(2))) * ((x[:,2])**(2))))) + ((1.0215553405219846) * (np.log((((x[:,3])**(2)) * ((x[:,0])**(-3))) * ((x[:,4])**(-3)))))))))))"
"Id((130.48473742239062) / ((1.0) + (((3.6717523481872e-2) * (Id((((x2)^(-1)) * ((x1)^(1))) * ((x0)^(-1))))) + ((5.761622902040356e-4) * (Sqrt((((x0)^(2)) * ((x4)^(1))) * ((x2)^(1))))))))","[[130.48473742239062,3.6717523481872e-2,5.761622902040356e-4]]","((130.48473742239062) / ((1.0) + (((3.6717523481872e-2) * (((((x[:,2])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + ((5.761622902040356e-4) * (np.sqrt((((x[:,0])**(2)) * ((x[:,4])**(1))) * ((x[:,2])**(1))))))))"
"Id((109.89382471137006) + (((19.588720569857053) * (Cos(((x2)^(-3)) * ((x0)^(-2))))) + (((-6.014717140860091) * (Tanh((((((x4)^(3)) * ((x3)^(3))) * ((x2)^(3))) * ((x1)^(3))) * ((x0)^(-1))))) + ((-0.4334759217982105) * (Sqrt(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(2))))))))","[[109.89382471137006,19.588720569857053,-6.014717140860091,-0.4334759217982105]]","((109.89382471137006) + (((19.588720569857053) * (np.cos(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((-6.014717140860091) * (np.tanh((((((x[:,4])**(3)) * ((x[:,3])**(3))) * ((x[:,2])**(3))) * ((x[:,1])**(3))) * ((x[:,0])**(-1))))) + ((-0.4334759217982105) * (np.sqrt(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(2))))))))"
"Id(((130.77203781502467) + (((-6.137243507342307) * (Tanh((((((x3)^(1)) * ((x4)^(-2))) * ((x2)^(-1))) * ((x1)^(1))) * ((x0)^(-3))))) + (((-2.1884411211634956e-6) * (Sqrt((x0)^(3)))) + (((4.652273894368218) * (Log((x4)^(-1)))) + (((-29721.1177357316) * (Sin((x4)^(3)))) + (((-3.7710502405232047) * (Log((x0)^(2)))) + (((2.517017031443368) * (Log((x3)^(2)))) + (((-0.14558506867341592) * (Sqrt((((((x4)^(-1)) * ((x3)^(1))) * ((x1)^(2))) * ((x2)^(-2))) * ((x0)^(-2))))) + ((5.049930164509344) * (Log((x2)^(-1)))))))))))) / ((1.0) + ((0.1665655083248323) * (Tanh(((x4)^(-2)) * ((x0)^(-2)))))))","[[130.77203781502467,-6.137243507342307,-2.1884411211634956e-6,4.652273894368218,-29721.1177357316,-3.7710502405232047,2.517017031443368,-0.14558506867341592,5.049930164509344,0.1665655083248323]]","(((130.77203781502467) + (((-6.137243507342307) * (np.tanh((((((x[:,3])**(1)) * ((x[:,4])**(-2))) * ((x[:,2])**(-1))) * ((x[:,1])**(1))) * ((x[:,0])**(-3))))) + (((-2.1884411211634956e-6) * (np.sqrt((x[:,0])**(3)))) + (((4.652273894368218) * (np.log((x[:,4])**(-1)))) + (((-29721.1177357316) * (np.sin((x[:,4])**(3)))) + (((-3.7710502405232047) * (np.log((x[:,0])**(2)))) + (((2.517017031443368) * (np.log((x[:,3])**(2)))) + (((-0.14558506867341592) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(1))) * ((x[:,1])**(2))) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + ((5.049930164509344) * (np.log((x[:,2])**(-1)))))))))))) / ((1.0) + ((0.1665655083248323) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2)))))))"
"Id((-1166468.3638834737) + (((3.3864691807069445) * (Id(((x3)^(-2)) * ((x2)^(-2))))) + (((-22520.770994054612) * (Cos(((x4)^(3)) * ((x2)^(-2))))) + (((-6.603324740916923) * (Log(((x0)^(-1)) * ((x2)^(1))))) + (((1189155.048816249) * (Cos((x4)^(2)))) + (((-39.82448424741419) * (Tanh(((x4)^(-1)) * ((x0)^(-1))))) + (((1.8085098177660934) * (Log((x4)^(-3)))) + (((-6.381150369323979) * (Log((x0)^(3)))) + (((-5.853668131943433) * (Log((x3)^(-1)))) + ((-26.43049078967071) * (Sqrt((((x0)^(-1)) * ((x2)^(-1))) * ((x1)^(1))))))))))))))","[[-1166468.3638834737,3.3864691807069445,-22520.770994054612,-6.603324740916923,1189155.048816249,-39.82448424741419,1.8085098177660934,-6.381150369323979,-5.853668131943433,-26.43049078967071]]","((-1166468.3638834737) + (((3.3864691807069445) * ((((x[:,3])**(-2)) * ((x[:,2])**(-2))))) + (((-22520.770994054612) * (np.cos(((x[:,4])**(3)) * ((x[:,2])**(-2))))) + (((-6.603324740916923) * (np.log(((x[:,0])**(-1)) * ((x[:,2])**(1))))) + (((1189155.048816249) * (np.cos((x[:,4])**(2)))) + (((-39.82448424741419) * (np.tanh(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((1.8085098177660934) * (np.log((x[:,4])**(-3)))) + (((-6.381150369323979) * (np.log((x[:,0])**(3)))) + (((-5.853668131943433) * (np.log((x[:,3])**(-1)))) + ((-26.43049078967071) * (np.sqrt((((x[:,0])**(-1)) * ((x[:,2])**(-1))) * ((x[:,1])**(1))))))))))))))"
"Id(((125.60566609701341) + (((-20.628661662271742) * (Tanh(((x2)^(-1)) * ((x4)^(1))))) + (((-1.153232328089733e-2) * (Sqrt((((((x1)^(2)) * ((x4)^(-3))) * ((x0)^(-1))) * ((x2)^(-2))) * ((x3)^(-3))))) + (((-0.12540839714745333) * (Sin((((x4)^(-3)) * ((x3)^(-2))) * ((x1)^(3))))) + (((-4.4839329712688156e-2) * (Sqrt((((((x0)^(2)) * ((x3)^(-1))) * ((x2)^(3))) * ((x4)^(1))) * ((x1)^(3))))) + ((-2985.2150998826864) * (Id(((x3)^(-1)) * ((x2)^(3)))))))))) / ((1.0) + (((2.354111734633146e-5) * (Sqrt(((x0)^(2)) * ((x2)^(1))))) + (((-8.751930340754715e7) * (Sin((((((x4)^(3)) * ((x2)^(1))) * ((x0)^(-2))) * ((x3)^(-1))) * ((x1)^(1))))) + (((-2.7309616378506846e-2) * (Sin(((x3)^(1)) * ((x4)^(1))))) + ((-1.3134349419436059e-2) * (Sqrt((x2)^(-1)))))))))","[[125.60566609701341,-20.628661662271742,-1.153232328089733e-2,-0.12540839714745333,-4.4839329712688156e-2,-2985.2150998826864,2.354111734633146e-5,-8.751930340754715e7,-2.7309616378506846e-2,-1.3134349419436059e-2]]","(((125.60566609701341) + (((-20.628661662271742) * (np.tanh(((x[:,2])**(-1)) * ((x[:,4])**(1))))) + (((-1.153232328089733e-2) * (np.sqrt((((((x[:,1])**(2)) * ((x[:,4])**(-3))) * ((x[:,0])**(-1))) * ((x[:,2])**(-2))) * ((x[:,3])**(-3))))) + (((-0.12540839714745333) * (np.sin((((x[:,4])**(-3)) * ((x[:,3])**(-2))) * ((x[:,1])**(3))))) + (((-4.4839329712688156e-2) * (np.sqrt((((((x[:,0])**(2)) * ((x[:,3])**(-1))) * ((x[:,2])**(3))) * ((x[:,4])**(1))) * ((x[:,1])**(3))))) + ((-2985.2150998826864) * ((((x[:,3])**(-1)) * ((x[:,2])**(3)))))))))) / ((1.0) + (((2.354111734633146e-5) * (np.sqrt(((x[:,0])**(2)) * ((x[:,2])**(1))))) + (((-8.751930340754715e7) * (np.sin((((((x[:,4])**(3)) * ((x[:,2])**(1))) * ((x[:,0])**(-2))) * ((x[:,3])**(-1))) * ((x[:,1])**(1))))) + (((-2.7309616378506846e-2) * (np.sin(((x[:,3])**(1)) * ((x[:,4])**(1))))) + ((-1.3134349419436059e-2) * (np.sqrt((x[:,2])**(-1)))))))))"
"Id(((152.8176400544966) + (((2.6882013086253903e-3) * (Sqrt((((x0)^(1)) * ((x3)^(1))) * ((x2)^(-1))))) + (((1.4730405923212482) * (Log(((x3)^(1)) * ((x0)^(-3))))) + (((1.9899954596396893e7) * (Sin(((x0)^(-2)) * ((x4)^(2))))) + (((5.101405915567869e-2) * (Sin((((x1)^(2)) * ((x0)^(1))) * ((x2)^(2))))) + (((-0.12871196778549532) * (Sin((((((x2)^(-2)) * ((x0)^(2))) * ((x4)^(-2))) * ((x1)^(1))) * ((x3)^(-1))))) + (((-73.56006672220877) * (Id((((x0)^(1)) * ((x2)^(1))) * ((x4)^(3))))) + ((-123.41831155087033) * (Sin(((x2)^(-1)) * ((x0)^(-1)))))))))))) / ((1.0) + (((-0.6056676680948776) * (Sqrt((x3)^(-2)))) + (((122009.88762540447) * (Id((((x1)^(1)) * ((x4)^(2))) * ((x3)^(-3))))) + (((1.1044614265620422e-5) * (Sqrt((((x0)^(2)) * ((x2)^(1))) * ((x1)^(1))))) + ((1.2717040602069827) * (Id((x2)^(3)))))))))","[[152.8176400544966,2.6882013086253903e-3,1.4730405923212482,1.9899954596396893e7,5.101405915567869e-2,-0.12871196778549532,-73.56006672220877,-123.41831155087033,-0.6056676680948776,122009.88762540447,1.1044614265620422e-5,1.2717040602069827]]","(((152.8176400544966) + (((2.6882013086253903e-3) * (np.sqrt((((x[:,0])**(1)) * ((x[:,3])**(1))) * ((x[:,2])**(-1))))) + (((1.4730405923212482) * (np.log(((x[:,3])**(1)) * ((x[:,0])**(-3))))) + (((1.9899954596396893e7) * (np.sin(((x[:,0])**(-2)) * ((x[:,4])**(2))))) + (((5.101405915567869e-2) * (np.sin((((x[:,1])**(2)) * ((x[:,0])**(1))) * ((x[:,2])**(2))))) + (((-0.12871196778549532) * (np.sin((((((x[:,2])**(-2)) * ((x[:,0])**(2))) * ((x[:,4])**(-2))) * ((x[:,1])**(1))) * ((x[:,3])**(-1))))) + (((-73.56006672220877) * (((((x[:,0])**(1)) * ((x[:,2])**(1))) * ((x[:,4])**(3))))) + ((-123.41831155087033) * (np.sin(((x[:,2])**(-1)) * ((x[:,0])**(-1)))))))))))) / ((1.0) + (((-0.6056676680948776) * (np.sqrt((x[:,3])**(-2)))) + (((122009.88762540447) * (((((x[:,1])**(1)) * ((x[:,4])**(2))) * ((x[:,3])**(-3))))) + (((1.1044614265620422e-5) * (np.sqrt((((x[:,0])**(2)) * ((x[:,2])**(1))) * ((x[:,1])**(1))))) + ((1.2717040602069827) * (((x[:,2])**(3)))))))))"
"Id(((181.7333081978281) + (((-2.572544162050445) * (Log(((x3)^(-2)) * ((x0)^(2))))) + (((27.875596979623182) * (Tanh((((x3)^(-1)) * ((x4)^(2))) * ((x0)^(1))))) + (((-613.0711679895708) * (Sqrt(((x4)^(-1)) * ((x0)^(-2))))) + (((-22.917533918426933) * (Sqrt((x2)^(1)))) + (((-926.5460140929447) * (Sqrt(((((x3)^(1)) * ((x4)^(2))) * ((x0)^(-2))) * ((x2)^(-2))))) + (((46920.13941481453) * (Sqrt((x0)^(-3)))) + (((-4516959.209769264) * (Id(((x3)^(-2)) * ((x4)^(2))))) + (((-8.632700929879917) * (Tanh(((x2)^(2)) * ((x3)^(2))))) + ((1.1607530103691577) * (Log((((x0)^(-3)) * ((x4)^(-3))) * ((x2)^(1)))))))))))))) / ((1.0) + (((1.1091095486548668e-4) * (Sqrt((((((x1)^(3)) * ((x2)^(-1))) * ((x3)^(1))) * ((x4)^(-2))) * ((x0)^(-2))))) + (((2.1230968710463927e-2) * (Sqrt((((x4)^(1)) * ((x2)^(1))) * ((x0)^(1))))) + ((2.796625539309634e-3) * (Sin(((x4)^(-3)) * ((x1)^(2)))))))))","[[181.7333081978281,-2.572544162050445,27.875596979623182,-613.0711679895708,-22.917533918426933,-926.5460140929447,46920.13941481453,-4516959.209769264,-8.632700929879917,1.1607530103691577,1.1091095486548668e-4,2.1230968710463927e-2,2.796625539309634e-3]]","(((181.7333081978281) + (((-2.572544162050445) * (np.log(((x[:,3])**(-2)) * ((x[:,0])**(2))))) + (((27.875596979623182) * (np.tanh((((x[:,3])**(-1)) * ((x[:,4])**(2))) * ((x[:,0])**(1))))) + (((-613.0711679895708) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,0])**(-2))))) + (((-22.917533918426933) * (np.sqrt((x[:,2])**(1)))) + (((-926.5460140929447) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,4])**(2))) * ((x[:,0])**(-2))) * ((x[:,2])**(-2))))) + (((46920.13941481453) * (np.sqrt((x[:,0])**(-3)))) + (((-4516959.209769264) * ((((x[:,3])**(-2)) * ((x[:,4])**(2))))) + (((-8.632700929879917) * (np.tanh(((x[:,2])**(2)) * ((x[:,3])**(2))))) + ((1.1607530103691577) * (np.log((((x[:,0])**(-3)) * ((x[:,4])**(-3))) * ((x[:,2])**(1)))))))))))))) / ((1.0) + (((1.1091095486548668e-4) * (np.sqrt((((((x[:,1])**(3)) * ((x[:,2])**(-1))) * ((x[:,3])**(1))) * ((x[:,4])**(-2))) * ((x[:,0])**(-2))))) + (((2.1230968710463927e-2) * (np.sqrt((((x[:,4])**(1)) * ((x[:,2])**(1))) * ((x[:,0])**(1))))) + ((2.796625539309634e-3) * (np.sin(((x[:,4])**(-3)) * ((x[:,1])**(2)))))))))"
"Id(((-1222968.557991937) + (((-5.32064154591054e-4) * (Id((((x4)^(-2)) * ((x0)^(-1))) * ((x1)^(1))))) + (((-62.10939055963833) * (Sqrt(((x2)^(-1)) * ((x0)^(-1))))) + (((-5.130594618819874) * (Tanh((((x4)^(1)) * ((x3)^(-3))) * ((x0)^(2))))) + (((-67.2816538297804) * (Tanh((((x2)^(1)) * ((x0)^(-1))) * ((x4)^(-1))))) + (((1223138.2142920173) * (Cos((x4)^(2)))) + (((-14.077698239452872) * (Tanh((((x2)^(-2)) * ((x4)^(-1))) * ((x0)^(-2))))) + (((169.31977416580833) * (Tanh(((x3)^(-3)) * ((x2)^(-2))))) + (((-2.4644063366525097) * (Log(((x3)^(-1)) * ((x2)^(2))))) + (((-1.4632891305522957) * (Cos((x2)^(-3)))) + (((-2.2249538481180258) * (Log((x0)^(3)))) + ((-4.098364424319669) * (Sqrt(((x3)^(-1)) * ((x1)^(2)))))))))))))))) / ((1.0) + ((5.0190406404986954e-2) * (Tanh((((x0)^(1)) * ((x4)^(1))) * ((x2)^(2)))))))","[[-1222968.557991937,-5.32064154591054e-4,-62.10939055963833,-5.130594618819874,-67.2816538297804,1223138.2142920173,-14.077698239452872,169.31977416580833,-2.4644063366525097,-1.4632891305522957,-2.2249538481180258,-4.098364424319669,5.0190406404986954e-2]]","(((-1222968.557991937) + (((-5.32064154591054e-4) * (((((x[:,4])**(-2)) * ((x[:,0])**(-1))) * ((x[:,1])**(1))))) + (((-62.10939055963833) * (np.sqrt(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((-5.130594618819874) * (np.tanh((((x[:,4])**(1)) * ((x[:,3])**(-3))) * ((x[:,0])**(2))))) + (((-67.2816538297804) * (np.tanh((((x[:,2])**(1)) * ((x[:,0])**(-1))) * ((x[:,4])**(-1))))) + (((1223138.2142920173) * (np.cos((x[:,4])**(2)))) + (((-14.077698239452872) * (np.tanh((((x[:,2])**(-2)) * ((x[:,4])**(-1))) * ((x[:,0])**(-2))))) + (((169.31977416580833) * (np.tanh(((x[:,3])**(-3)) * ((x[:,2])**(-2))))) + (((-2.4644063366525097) * (np.log(((x[:,3])**(-1)) * ((x[:,2])**(2))))) + (((-1.4632891305522957) * (np.cos((x[:,2])**(-3)))) + (((-2.2249538481180258) * (np.log((x[:,0])**(3)))) + ((-4.098364424319669) * (np.sqrt(((x[:,3])**(-1)) * ((x[:,1])**(2)))))))))))))))) / ((1.0) + ((5.0190406404986954e-2) * (np.tanh((((x[:,0])**(1)) * ((x[:,4])**(1))) * ((x[:,2])**(2)))))))"
"Id(((137.2036396091421) + (((-0.3321990138653098) * (Sqrt((((x3)^(2)) * ((x2)^(-3))) * ((x0)^(-2))))) + (((4.464572411434931e-4) * (Id((x3)^(2)))) + (((-2.3718232328826794) * (Tanh((((x1)^(2)) * ((x4)^(-3))) * ((x0)^(-3))))) + (((0.3515657424338807) * (Sqrt((x4)^(-1)))) + (((-0.24046206091395916) * (Sqrt((x0)^(1)))) + (((-0.9849854615505045) * (Cos((x2)^(-1)))) + (((-1095.91416891131) * (Sqrt((x4)^(3)))) + (((3.671322415146033) * (Sqrt(((((x3)^(2)) * ((x1)^(1))) * ((x0)^(-1))) * ((x2)^(1))))) + (((-27.559326335837344) * (Sqrt((x2)^(1)))) + ((6.162479202540801) * (Tanh(((((x2)^(1)) * ((x0)^(3))) * ((x3)^(-3))) * ((x4)^(1))))))))))))))) / ((1.0) + (((3.64999200497131e-2) * (Sqrt(((x1)^(1)) * ((x2)^(1))))) + ((0.10081059804683168) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))))))","[[137.2036396091421,-0.3321990138653098,4.464572411434931e-4,-2.3718232328826794,0.3515657424338807,-0.24046206091395916,-0.9849854615505045,-1095.91416891131,3.671322415146033,-27.559326335837344,6.162479202540801,3.64999200497131e-2,0.10081059804683168]]","(((137.2036396091421) + (((-0.3321990138653098) * (np.sqrt((((x[:,3])**(2)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))) + (((4.464572411434931e-4) * (((x[:,3])**(2)))) + (((-2.3718232328826794) * (np.tanh((((x[:,1])**(2)) * ((x[:,4])**(-3))) * ((x[:,0])**(-3))))) + (((0.3515657424338807) * (np.sqrt((x[:,4])**(-1)))) + (((-0.24046206091395916) * (np.sqrt((x[:,0])**(1)))) + (((-0.9849854615505045) * (np.cos((x[:,2])**(-1)))) + (((-1095.91416891131) * (np.sqrt((x[:,4])**(3)))) + (((3.671322415146033) * (np.sqrt(((((x[:,3])**(2)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))) * ((x[:,2])**(1))))) + (((-27.559326335837344) * (np.sqrt((x[:,2])**(1)))) + ((6.162479202540801) * (np.tanh(((((x[:,2])**(1)) * ((x[:,0])**(3))) * ((x[:,3])**(-3))) * ((x[:,4])**(1))))))))))))))) / ((1.0) + (((3.64999200497131e-2) * (np.sqrt(((x[:,1])**(1)) * ((x[:,2])**(1))))) + ((0.10081059804683168) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))))))"
"Id(((113.90366530357196) + (((-0.17154087783499472) * (Id((((x4)^(-2)) * ((x2)^(1))) * ((x0)^(-1))))) + (((-3.5355426434262394) * (Log((((x3)^(-2)) * ((x2)^(1))) * ((x0)^(-1))))) + (((4.557817753710594) * (Log((x0)^(-2)))) + (((-21.219171031975385) * (Sqrt((((x2)^(-2)) * ((x3)^(1))) * ((x0)^(-2))))) + (((-3.6165068589658934e-3) * (Sqrt(((((x4)^(-3)) * ((x3)^(2))) * ((x1)^(1))) * ((x0)^(-2))))) + ((-9.434575559247635e-3) * (Sqrt(((x0)^(1)) * ((x3)^(1))))))))))) / ((1.0) + ((3.834813933652721e-2) * (Log((x4)^(1))))))","[[113.90366530357196,-0.17154087783499472,-3.5355426434262394,4.557817753710594,-21.219171031975385,-3.6165068589658934e-3,-9.434575559247635e-3,3.834813933652721e-2]]","(((113.90366530357196) + (((-0.17154087783499472) * (((((x[:,4])**(-2)) * ((x[:,2])**(1))) * ((x[:,0])**(-1))))) + (((-3.5355426434262394) * (np.log((((x[:,3])**(-2)) * ((x[:,2])**(1))) * ((x[:,0])**(-1))))) + (((4.557817753710594) * (np.log((x[:,0])**(-2)))) + (((-21.219171031975385) * (np.sqrt((((x[:,2])**(-2)) * ((x[:,3])**(1))) * ((x[:,0])**(-2))))) + (((-3.6165068589658934e-3) * (np.sqrt(((((x[:,4])**(-3)) * ((x[:,3])**(2))) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + ((-9.434575559247635e-3) * (np.sqrt(((x[:,0])**(1)) * ((x[:,3])**(1))))))))))) / ((1.0) + ((3.834813933652721e-2) * (np.log((x[:,4])**(1))))))"
"Id(((119.18197448702684) + (((24.675190187529893) * (Tanh(((x0)^(1)) * ((x4)^(1))))) + (((-4.640566783801974) * (Tanh(((((x4)^(2)) * ((x2)^(1))) * ((x0)^(3))) * ((x3)^(-3))))) + (((3.5894179785739375) * (Tanh(((((x4)^(2)) * ((x2)^(1))) * ((x0)^(3))) * ((x3)^(-2))))) + (((-4.585641794684459) * (Tanh((((x0)^(-3)) * ((x3)^(2))) * ((x4)^(-2))))) + (((5.913740895580194) * (Sin(((((x2)^(2)) * ((x0)^(-2))) * ((x3)^(3))) * ((x1)^(1))))) + (((-1.5802872511005646) * (Tanh(((x1)^(1)) * ((x3)^(2))))) + (((1.6680824351118009) * (Log((((x3)^(3)) * ((x2)^(-3))) * ((x0)^(-3))))) + (((-5.370803299963826) * (Cos(((x2)^(-2)) * ((x3)^(-2))))) + (((-633.7322889864281) * (Sqrt(((x4)^(2)) * ((x2)^(1))))) + ((-2.8708369617407454) * (Sqrt((((x2)^(-2)) * ((x0)^(-1))) * ((x1)^(1))))))))))))))) / ((1.0) + ((5.072824858621153e-7) * (Sqrt(((x4)^(1)) * ((x0)^(3)))))))","[[119.18197448702684,24.675190187529893,-4.640566783801974,3.5894179785739375,-4.585641794684459,5.913740895580194,-1.5802872511005646,1.6680824351118009,-5.370803299963826,-633.7322889864281,-2.8708369617407454,5.072824858621153e-7]]","(((119.18197448702684) + (((24.675190187529893) * (np.tanh(((x[:,0])**(1)) * ((x[:,4])**(1))))) + (((-4.640566783801974) * (np.tanh(((((x[:,4])**(2)) * ((x[:,2])**(1))) * ((x[:,0])**(3))) * ((x[:,3])**(-3))))) + (((3.5894179785739375) * (np.tanh(((((x[:,4])**(2)) * ((x[:,2])**(1))) * ((x[:,0])**(3))) * ((x[:,3])**(-2))))) + (((-4.585641794684459) * (np.tanh((((x[:,0])**(-3)) * ((x[:,3])**(2))) * ((x[:,4])**(-2))))) + (((5.913740895580194) * (np.sin(((((x[:,2])**(2)) * ((x[:,0])**(-2))) * ((x[:,3])**(3))) * ((x[:,1])**(1))))) + (((-1.5802872511005646) * (np.tanh(((x[:,1])**(1)) * ((x[:,3])**(2))))) + (((1.6680824351118009) * (np.log((((x[:,3])**(3)) * ((x[:,2])**(-3))) * ((x[:,0])**(-3))))) + (((-5.370803299963826) * (np.cos(((x[:,2])**(-2)) * ((x[:,3])**(-2))))) + (((-633.7322889864281) * (np.sqrt(((x[:,4])**(2)) * ((x[:,2])**(1))))) + ((-2.8708369617407454) * (np.sqrt((((x[:,2])**(-2)) * ((x[:,0])**(-1))) * ((x[:,1])**(1))))))))))))))) / ((1.0) + ((5.072824858621153e-7) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(3)))))))"
"Id(((184.64700746169567) + (((6.106130462800564) * (Tanh((((x4)^(3)) * ((x3)^(-1))) * ((x0)^(3))))) + (((-1.3912340612042855) * (Sqrt((((x0)^(-2)) * ((x2)^(1))) * ((x4)^(-3))))) + (((-6.956516091922526) * (Log(((x0)^(2)) * ((x4)^(1))))) + (((-0.6655708447295514) * (Sqrt(((x2)^(-1)) * ((x1)^(1))))) + (((-8243.073984268765) * (Sqrt(((x3)^(-2)) * ((x4)^(2))))) + (((-170.12499000559893) * (Sqrt(((x2)^(-1)) * ((x0)^(-1))))) + (((4.692778714825414) * (Log(((x4)^(1)) * ((x3)^(1))))) + (((-1.6080340411060035) * (Cos((x2)^(-3)))) + ((-4.888380485036912) * (Log((x2)^(3))))))))))))) / ((1.0) + (((-3708.6732318475283) * (Tanh((((x0)^(-2)) * ((x2)^(-1))) * ((x3)^(-1))))) + (((5.660298749387754e-8) * (Sqrt((x0)^(3)))) + (((-3.4616406619551423) * (Sqrt((((x3)^(-3)) * ((x2)^(-3))) * ((x4)^(2))))) + ((-1.7145749538908887e-7) * (Sqrt(((x2)^(1)) * ((x0)^(3))))))))))","[[184.64700746169567,6.106130462800564,-1.3912340612042855,-6.956516091922526,-0.6655708447295514,-8243.073984268765,-170.12499000559893,4.692778714825414,-1.6080340411060035,-4.888380485036912,-3708.6732318475283,5.660298749387754e-8,-3.4616406619551423,-1.7145749538908887e-7]]","(((184.64700746169567) + (((6.106130462800564) * (np.tanh((((x[:,4])**(3)) * ((x[:,3])**(-1))) * ((x[:,0])**(3))))) + (((-1.3912340612042855) * (np.sqrt((((x[:,0])**(-2)) * ((x[:,2])**(1))) * ((x[:,4])**(-3))))) + (((-6.956516091922526) * (np.log(((x[:,0])**(2)) * ((x[:,4])**(1))))) + (((-0.6655708447295514) * (np.sqrt(((x[:,2])**(-1)) * ((x[:,1])**(1))))) + (((-8243.073984268765) * (np.sqrt(((x[:,3])**(-2)) * ((x[:,4])**(2))))) + (((-170.12499000559893) * (np.sqrt(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((4.692778714825414) * (np.log(((x[:,4])**(1)) * ((x[:,3])**(1))))) + (((-1.6080340411060035) * (np.cos((x[:,2])**(-3)))) + ((-4.888380485036912) * (np.log((x[:,2])**(3))))))))))))) / ((1.0) + (((-3708.6732318475283) * (np.tanh((((x[:,0])**(-2)) * ((x[:,2])**(-1))) * ((x[:,3])**(-1))))) + (((5.660298749387754e-8) * (np.sqrt((x[:,0])**(3)))) + (((-3.4616406619551423) * (np.sqrt((((x[:,3])**(-3)) * ((x[:,2])**(-3))) * ((x[:,4])**(2))))) + ((-1.7145749538908887e-7) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(3))))))))))"
"Id(((131.7274081156026) + (((-9.521823078846744) * (Sqrt(((x2)^(-2)) * ((x0)^(-1))))) + (((-8.458696576156997) * (Tanh((((((x4)^(2)) * ((x2)^(2))) * ((x0)^(3))) * ((x1)^(1))) * ((x3)^(-3))))) + (((3.921665330115305) * (Sqrt(((x2)^(2)) * ((x1)^(2))))) + (((-1.9188239147596438) * (Log((x4)^(-1)))) + (((-36121.94084223085) * (Tanh((x4)^(3)))) + (((-101.59218649562216) * (Sqrt(((((x0)^(1)) * ((x2)^(1))) * ((x3)^(-2))) * ((x4)^(1))))) + (((-4.188721373340309) * (Sqrt((x1)^(1)))) + (((-8.458929427681231e-4) * (Sqrt((x0)^(2)))) + (((-0.959494233051726) * (Cos((x2)^(-1)))) + ((3.4809123178621846) * (Log((x2)^(-2)))))))))))))) / ((1.0) + ((-6.242443172666834e-2) * (Tanh(((((x1)^(2)) * ((x4)^(1))) * ((x0)^(1))) * ((x3)^(-1)))))))","[[131.7274081156026,-9.521823078846744,-8.458696576156997,3.921665330115305,-1.9188239147596438,-36121.94084223085,-101.59218649562216,-4.188721373340309,-8.458929427681231e-4,-0.959494233051726,3.4809123178621846,-6.242443172666834e-2]]","(((131.7274081156026) + (((-9.521823078846744) * (np.sqrt(((x[:,2])**(-2)) * ((x[:,0])**(-1))))) + (((-8.458696576156997) * (np.tanh((((((x[:,4])**(2)) * ((x[:,2])**(2))) * ((x[:,0])**(3))) * ((x[:,1])**(1))) * ((x[:,3])**(-3))))) + (((3.921665330115305) * (np.sqrt(((x[:,2])**(2)) * ((x[:,1])**(2))))) + (((-1.9188239147596438) * (np.log((x[:,4])**(-1)))) + (((-36121.94084223085) * (np.tanh((x[:,4])**(3)))) + (((-101.59218649562216) * (np.sqrt(((((x[:,0])**(1)) * ((x[:,2])**(1))) * ((x[:,3])**(-2))) * ((x[:,4])**(1))))) + (((-4.188721373340309) * (np.sqrt((x[:,1])**(1)))) + (((-8.458929427681231e-4) * (np.sqrt((x[:,0])**(2)))) + (((-0.959494233051726) * (np.cos((x[:,2])**(-1)))) + ((3.4809123178621846) * (np.log((x[:,2])**(-2)))))))))))))) / ((1.0) + ((-6.242443172666834e-2) * (np.tanh(((((x[:,1])**(2)) * ((x[:,4])**(1))) * ((x[:,0])**(1))) * ((x[:,3])**(-1)))))))"
"Id(((116.72689680325993) + (((-30.54695379539572) * (Sqrt((((x4)^(-2)) * ((x2)^(1))) * ((x0)^(-2))))) + (((20.491167674150937) * (Tanh(((((x2)^(1)) * ((x4)^(1))) * ((x0)^(2))) * ((x3)^(-1))))) + (((25954.16050022066) * (Sqrt((x0)^(-3)))) + (((-18.399320208005935) * (Sin(((x0)^(-1)) * ((x1)^(2))))) + (((-0.17485720140845662) * (Sqrt((x0)^(1)))) + (((4.406686573152151e-3) * (Sqrt((x4)^(-2)))) + (((-2.2868221400749356) * (Sin(((((x4)^(-3)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(-2))))) + (((0.6094365756345006) * (Log((x2)^(-1)))) + (((0.6659907260318114) * (Cos((x1)^(3)))) + ((4.421870820880462e-2) * (Id((x3)^(1)))))))))))))) / ((1.0) + ((0.25589266295652857) * (Sqrt(((((x4)^(1)) * ((x0)^(1))) * ((x3)^(-1))) * ((x2)^(1)))))))","[[116.72689680325993,-30.54695379539572,20.491167674150937,25954.16050022066,-18.399320208005935,-0.17485720140845662,4.406686573152151e-3,-2.2868221400749356,0.6094365756345006,0.6659907260318114,4.421870820880462e-2,0.25589266295652857]]","(((116.72689680325993) + (((-30.54695379539572) * (np.sqrt((((x[:,4])**(-2)) * ((x[:,2])**(1))) * ((x[:,0])**(-2))))) + (((20.491167674150937) * (np.tanh(((((x[:,2])**(1)) * ((x[:,4])**(1))) * ((x[:,0])**(2))) * ((x[:,3])**(-1))))) + (((25954.16050022066) * (np.sqrt((x[:,0])**(-3)))) + (((-18.399320208005935) * (np.sin(((x[:,0])**(-1)) * ((x[:,1])**(2))))) + (((-0.17485720140845662) * (np.sqrt((x[:,0])**(1)))) + (((4.406686573152151e-3) * (np.sqrt((x[:,4])**(-2)))) + (((-2.2868221400749356) * (np.sin(((((x[:,4])**(-3)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(-2))))) + (((0.6094365756345006) * (np.log((x[:,2])**(-1)))) + (((0.6659907260318114) * (np.cos((x[:,1])**(3)))) + ((4.421870820880462e-2) * (((x[:,3])**(1)))))))))))))) / ((1.0) + ((0.25589266295652857) * (np.sqrt(((((x[:,4])**(1)) * ((x[:,0])**(1))) * ((x[:,3])**(-1))) * ((x[:,2])**(1)))))))"
"Id(((110.95552589742783) + (((-22.824863968515782) * (Id(((x0)^(-1)) * ((x4)^(-1))))) + (((-2.1123353339639337) * (Log(((((x3)^(-3)) * ((x0)^(3))) * ((x2)^(1))) * ((x4)^(2))))) + (((2.1465905333774593) * (Exp(((x3)^(-1)) * ((x2)^(-1))))) + (((-10780.197268810543) * (Sqrt(((x0)^(-1)) * ((x4)^(3))))) + (((-7.650918602701191) * (Tanh((((((x3)^(-1)) * ((x4)^(-2))) * ((x0)^(-2))) * ((x2)^(-1))) * ((x1)^(1))))) + (((58.30220361857168) * (Sqrt(((((x3)^(-2)) * ((x4)^(-2))) * ((x0)^(-2))) * ((x2)^(-1))))) + (((-0.819089538001359) * (Id((((((x3)^(-1)) * ((x4)^(-2))) * ((x0)^(-2))) * ((x2)^(-2))) * ((x1)^(1))))) + (((0.8392492220166599) * (Cos((x1)^(3)))) + (((-1.2561485357834024e-2) * (Sqrt(((((x3)^(2)) * ((x2)^(-3))) * ((x0)^(-2))) * ((x1)^(2))))) + (((2.0949989909984812e-2) * (Id((((((x3)^(-1)) * ((x4)^(-2))) * ((x0)^(-2))) * ((x2)^(-3))) * ((x1)^(1))))) + ((10.763401498895874) * (Tanh(((x0)^(1)) * ((x2)^(2)))))))))))))))) / ((1.0) + (((-4.199093448462121e-2) * (Tanh(((((x3)^(2)) * ((x2)^(-2))) * ((x4)^(-2))) * ((x0)^(-3))))) + (((2.5012702994325457e-8) * (Sqrt((x0)^(3)))) + ((7.583879820937159e-6) * (Sqrt((((x4)^(-1)) * ((x3)^(3))) * ((x2)^(2)))))))))","[[110.95552589742783,-22.824863968515782,-2.1123353339639337,2.1465905333774593,-10780.197268810543,-7.650918602701191,58.30220361857168,-0.819089538001359,0.8392492220166599,-1.2561485357834024e-2,2.0949989909984812e-2,10.763401498895874,-4.199093448462121e-2,2.5012702994325457e-8,7.583879820937159e-6]]","(((110.95552589742783) + (((-22.824863968515782) * ((((x[:,0])**(-1)) * ((x[:,4])**(-1))))) + (((-2.1123353339639337) * (np.log(((((x[:,3])**(-3)) * ((x[:,0])**(3))) * ((x[:,2])**(1))) * ((x[:,4])**(2))))) + (((2.1465905333774593) * (np.exp(((x[:,3])**(-1)) * ((x[:,2])**(-1))))) + (((-10780.197268810543) * (np.sqrt(((x[:,0])**(-1)) * ((x[:,4])**(3))))) + (((-7.650918602701191) * (np.tanh((((((x[:,3])**(-1)) * ((x[:,4])**(-2))) * ((x[:,0])**(-2))) * ((x[:,2])**(-1))) * ((x[:,1])**(1))))) + (((58.30220361857168) * (np.sqrt(((((x[:,3])**(-2)) * ((x[:,4])**(-2))) * ((x[:,0])**(-2))) * ((x[:,2])**(-1))))) + (((-0.819089538001359) * (((((((x[:,3])**(-1)) * ((x[:,4])**(-2))) * ((x[:,0])**(-2))) * ((x[:,2])**(-2))) * ((x[:,1])**(1))))) + (((0.8392492220166599) * (np.cos((x[:,1])**(3)))) + (((-1.2561485357834024e-2) * (np.sqrt(((((x[:,3])**(2)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))) * ((x[:,1])**(2))))) + (((2.0949989909984812e-2) * (((((((x[:,3])**(-1)) * ((x[:,4])**(-2))) * ((x[:,0])**(-2))) * ((x[:,2])**(-3))) * ((x[:,1])**(1))))) + ((10.763401498895874) * (np.tanh(((x[:,0])**(1)) * ((x[:,2])**(2)))))))))))))))) / ((1.0) + (((-4.199093448462121e-2) * (np.tanh(((((x[:,3])**(2)) * ((x[:,2])**(-2))) * ((x[:,4])**(-2))) * ((x[:,0])**(-3))))) + (((2.5012702994325457e-8) * (np.sqrt((x[:,0])**(3)))) + ((7.583879820937159e-6) * (np.sqrt((((x[:,4])**(-1)) * ((x[:,3])**(3))) * ((x[:,2])**(2)))))))))"
"Id(((194.73698623341758) + (((-130.86066898530055) * (Sqrt(((x0)^(-1)) * ((x2)^(-1))))) + (((5.11100573588164) * (Tanh((((x3)^(-1)) * ((x0)^(3))) * ((x4)^(3))))) + (((0.4210174917295162) * (Sqrt((x4)^(-1)))) + (((-4.034283067888113) * (Log(((x0)^(3)) * ((x3)^(-1))))) + (((-158.9127853836953) * (Tanh(((x4)^(3)) * ((x2)^(-2))))) + (((105887.90477455138) * (Tanh((x0)^(-2)))) + (((-30.973106569814995) * (Sqrt((((x0)^(-2)) * ((x2)^(2))) * ((x4)^(-2))))) + (((-11105.890608453736) * (Sqrt((((x3)^(-1)) * ((x4)^(2))) * ((x2)^(2))))) + (((-4.227079421786179) * (Cos(((x3)^(-2)) * ((x2)^(-2))))) + ((-3.066953409292811) * (Log((x2)^(2)))))))))))))) / ((1.0) + ((7.441562630765418e-3) * (Sqrt((((x3)^(1)) * ((x4)^(-3))) * ((x0)^(-3)))))))","[[194.73698623341758,-130.86066898530055,5.11100573588164,0.4210174917295162,-4.034283067888113,-158.9127853836953,105887.90477455138,-30.973106569814995,-11105.890608453736,-4.227079421786179,-3.066953409292811,7.441562630765418e-3]]","(((194.73698623341758) + (((-130.86066898530055) * (np.sqrt(((x[:,0])**(-1)) * ((x[:,2])**(-1))))) + (((5.11100573588164) * (np.tanh((((x[:,3])**(-1)) * ((x[:,0])**(3))) * ((x[:,4])**(3))))) + (((0.4210174917295162) * (np.sqrt((x[:,4])**(-1)))) + (((-4.034283067888113) * (np.log(((x[:,0])**(3)) * ((x[:,3])**(-1))))) + (((-158.9127853836953) * (np.tanh(((x[:,4])**(3)) * ((x[:,2])**(-2))))) + (((105887.90477455138) * (np.tanh((x[:,0])**(-2)))) + (((-30.973106569814995) * (np.sqrt((((x[:,0])**(-2)) * ((x[:,2])**(2))) * ((x[:,4])**(-2))))) + (((-11105.890608453736) * (np.sqrt((((x[:,3])**(-1)) * ((x[:,4])**(2))) * ((x[:,2])**(2))))) + (((-4.227079421786179) * (np.cos(((x[:,3])**(-2)) * ((x[:,2])**(-2))))) + ((-3.066953409292811) * (np.log((x[:,2])**(2)))))))))))))) / ((1.0) + ((7.441562630765418e-3) * (np.sqrt((((x[:,3])**(1)) * ((x[:,4])**(-3))) * ((x[:,0])**(-3)))))))"
"Id(((512.8063080080865) + (((-359.1279982791803) * (Exp(((x2)^(-1)) * ((x0)^(-1))))) + (((-27.877593901497097) * (Sin(((x0)^(-1)) * ((x4)^(-1))))) + (((0.8137669622083585) * (Log((x2)^(-3)))) + (((-5.804095187085487e-2) * (Sqrt(((x4)^(-1)) * ((x1)^(2))))) + (((183209.51195849368) * (Tanh(((x2)^(-2)) * ((x0)^(-3))))) + (((-3.469323281615061) * (Tanh((((x4)^(-3)) * ((x0)^(-2))) * ((x2)^(3))))) + (((162.48100573421567) * (Sqrt((((x3)^(-3)) * ((x0)^(-1))) * ((x2)^(-3))))) + (((4.973652294491552) * (Log((((x3)^(1)) * ((x0)^(-3))) * ((x4)^(-2))))) + (((-46996.824681808175) * (Tanh((x4)^(3)))) + (((-0.7590864987392649) * (Cos((x2)^(-1)))) + ((1.37038135944025) * (Log((((x2)^(-3)) * ((x0)^(2))) * ((x4)^(2)))))))))))))))) / ((1.0) + (((-1.169563673368515e-2) * (Sqrt((x1)^(1)))) + ((-9.10137441719111e-4) * (Sqrt((((x4)^(2)) * ((x0)^(2))) * ((x2)^(1))))))))","[[512.8063080080865,-359.1279982791803,-27.877593901497097,0.8137669622083585,-5.804095187085487e-2,183209.51195849368,-3.469323281615061,162.48100573421567,4.973652294491552,-46996.824681808175,-0.7590864987392649,1.37038135944025,-1.169563673368515e-2,-9.10137441719111e-4]]","(((512.8063080080865) + (((-359.1279982791803) * (np.exp(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((-27.877593901497097) * (np.sin(((x[:,0])**(-1)) * ((x[:,4])**(-1))))) + (((0.8137669622083585) * (np.log((x[:,2])**(-3)))) + (((-5.804095187085487e-2) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,1])**(2))))) + (((183209.51195849368) * (np.tanh(((x[:,2])**(-2)) * ((x[:,0])**(-3))))) + (((-3.469323281615061) * (np.tanh((((x[:,4])**(-3)) * ((x[:,0])**(-2))) * ((x[:,2])**(3))))) + (((162.48100573421567) * (np.sqrt((((x[:,3])**(-3)) * ((x[:,0])**(-1))) * ((x[:,2])**(-3))))) + (((4.973652294491552) * (np.log((((x[:,3])**(1)) * ((x[:,0])**(-3))) * ((x[:,4])**(-2))))) + (((-46996.824681808175) * (np.tanh((x[:,4])**(3)))) + (((-0.7590864987392649) * (np.cos((x[:,2])**(-1)))) + ((1.37038135944025) * (np.log((((x[:,2])**(-3)) * ((x[:,0])**(2))) * ((x[:,4])**(2)))))))))))))))) / ((1.0) + (((-1.169563673368515e-2) * (np.sqrt((x[:,1])**(1)))) + ((-9.10137441719111e-4) * (np.sqrt((((x[:,4])**(2)) * ((x[:,0])**(2))) * ((x[:,2])**(1))))))))"
"Id(((-1048035.1022678486) + (((1048165.7823477418) * (Cos((x4)^(2)))) + (((-1.6032912343070024e-3) * (Sqrt(((x2)^(1)) * ((x0)^(2))))) + (((1.777709421100539) * (Log(((((x4)^(-3)) * ((x0)^(-3))) * ((x3)^(2))) * ((x2)^(2))))) + (((-19.64031935794459) * (Id(((x4)^(-1)) * ((x0)^(-1))))) + (((-0.6734707088173701) * (Cos((x2)^(-1)))) + (((-3.23098406710083e-2) * (Sqrt(((((x1)^(3)) * ((x2)^(-3))) * ((x3)^(1))) * ((x0)^(-2))))) + (((4.2483297501816075) * (Tanh(((((x3)^(1)) * ((x2)^(3))) * ((x4)^(-2))) * ((x0)^(-1))))) + (((12.935221908572142) * (Tanh((((x3)^(-2)) * ((x4)^(-2))) * ((x0)^(-1))))) + ((-2.5081916206396606) * (Log(((x4)^(-1)) * ((x2)^(3)))))))))))))) / ((1.0) + (((5.27403071434121e-2) * (Tanh(((((x4)^(1)) * ((x0)^(2))) * ((x1)^(2))) * ((x3)^(-2))))) + (((3.876328096544124e-2) * (Tanh((((((x2)^(2)) * ((x4)^(1))) * ((x0)^(2))) * ((x1)^(1))) * ((x3)^(-2))))) + (((-6.61893924783934e-2) * (Tanh(((((x1)^(2)) * ((x2)^(2))) * ((x0)^(2))) * ((x3)^(-3))))) + ((-4.7341076533430736e-8) * (Id((x3)^(3)))))))))","[[-1048035.1022678486,1048165.7823477418,-1.6032912343070024e-3,1.777709421100539,-19.64031935794459,-0.6734707088173701,-3.23098406710083e-2,4.2483297501816075,12.935221908572142,-2.5081916206396606,5.27403071434121e-2,3.876328096544124e-2,-6.61893924783934e-2,-4.7341076533430736e-8]]","(((-1048035.1022678486) + (((1048165.7823477418) * (np.cos((x[:,4])**(2)))) + (((-1.6032912343070024e-3) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(2))))) + (((1.777709421100539) * (np.log(((((x[:,4])**(-3)) * ((x[:,0])**(-3))) * ((x[:,3])**(2))) * ((x[:,2])**(2))))) + (((-19.64031935794459) * ((((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((-0.6734707088173701) * (np.cos((x[:,2])**(-1)))) + (((-3.23098406710083e-2) * (np.sqrt(((((x[:,1])**(3)) * ((x[:,2])**(-3))) * ((x[:,3])**(1))) * ((x[:,0])**(-2))))) + (((4.2483297501816075) * (np.tanh(((((x[:,3])**(1)) * ((x[:,2])**(3))) * ((x[:,4])**(-2))) * ((x[:,0])**(-1))))) + (((12.935221908572142) * (np.tanh((((x[:,3])**(-2)) * ((x[:,4])**(-2))) * ((x[:,0])**(-1))))) + ((-2.5081916206396606) * (np.log(((x[:,4])**(-1)) * ((x[:,2])**(3)))))))))))))) / ((1.0) + (((5.27403071434121e-2) * (np.tanh(((((x[:,4])**(1)) * ((x[:,0])**(2))) * ((x[:,1])**(2))) * ((x[:,3])**(-2))))) + (((3.876328096544124e-2) * (np.tanh((((((x[:,2])**(2)) * ((x[:,4])**(1))) * ((x[:,0])**(2))) * ((x[:,1])**(1))) * ((x[:,3])**(-2))))) + (((-6.61893924783934e-2) * (np.tanh(((((x[:,1])**(2)) * ((x[:,2])**(2))) * ((x[:,0])**(2))) * ((x[:,3])**(-3))))) + ((-4.7341076533430736e-8) * (((x[:,3])**(3)))))))))"
"Id(((125.55099336233556) + (((-4.252333781286152) * (Tanh((((((x4)^(3)) * ((x3)^(-1))) * ((x2)^(3))) * ((x1)^(1))) * ((x0)^(3))))) + (((-0.3216308995643864) * (Sqrt(((x2)^(1)) * ((x0)^(1))))) + (((-1.330935844545298) * (Sqrt(((((x4)^(-1)) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-2))))) + (((-5.646546694496095) * (Tanh((((x4)^(-3)) * ((x2)^(3))) * ((x0)^(-2))))) + (((21.816684467571385) * (Tanh((((x4)^(-1)) * ((x2)^(-3))) * ((x0)^(-3))))) + (((13.254824416513529) * (Cos(((x4)^(-1)) * ((x0)^(-1))))) + (((-0.9013556179085457) * (Sin(((x4)^(-2)) * ((x3)^(-3))))) + ((-6.023938203500264) * (Tanh((((x4)^(1)) * ((x3)^(-3))) * ((x0)^(2))))))))))))) / ((1.0) + (((-2.283853245185391e-2) * (Id(((x3)^(-3)) * ((x2)^(-3))))) + (((308.0233464805136) * (Id((x4)^(3)))) + ((0.21445755836979985) * (Sqrt((((x4)^(1)) * ((x3)^(-2))) * ((x0)^(1)))))))))","[[125.55099336233556,-4.252333781286152,-0.3216308995643864,-1.330935844545298,-5.646546694496095,21.816684467571385,13.254824416513529,-0.9013556179085457,-6.023938203500264,-2.283853245185391e-2,308.0233464805136,0.21445755836979985]]","(((125.55099336233556) + (((-4.252333781286152) * (np.tanh((((((x[:,4])**(3)) * ((x[:,3])**(-1))) * ((x[:,2])**(3))) * ((x[:,1])**(1))) * ((x[:,0])**(3))))) + (((-0.3216308995643864) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(1))))) + (((-1.330935844545298) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-2))))) + (((-5.646546694496095) * (np.tanh((((x[:,4])**(-3)) * ((x[:,2])**(3))) * ((x[:,0])**(-2))))) + (((21.816684467571385) * (np.tanh((((x[:,4])**(-1)) * ((x[:,2])**(-3))) * ((x[:,0])**(-3))))) + (((13.254824416513529) * (np.cos(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((-0.9013556179085457) * (np.sin(((x[:,4])**(-2)) * ((x[:,3])**(-3))))) + ((-6.023938203500264) * (np.tanh((((x[:,4])**(1)) * ((x[:,3])**(-3))) * ((x[:,0])**(2))))))))))))) / ((1.0) + (((-2.283853245185391e-2) * ((((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((308.0233464805136) * (((x[:,4])**(3)))) + ((0.21445755836979985) * (np.sqrt((((x[:,4])**(1)) * ((x[:,3])**(-2))) * ((x[:,0])**(1)))))))))"
"Id(((215.9726213687983) + (((-15917.419466019805) * (Sqrt((((x4)^(3)) * ((x3)^(-1))) * ((x2)^(1))))) + (((3.4700939553743178) * (Log(((x2)^(-2)) * ((x0)^(-3))))) + (((3.4075980553735654) * (Tanh((((((x4)^(-1)) * ((x3)^(1))) * ((x2)^(-2))) * ((x1)^(1))) * ((x0)^(-2))))) + (((-672.3869284562657) * (Sqrt((x0)^(-1)))) + (((-16.034103884517606) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((-0.849256950903547) * (Sqrt(((x2)^(-1)) * ((x1)^(1))))) + (((30373.40212984814) * (Sqrt((x0)^(-3)))) + (((-17.935992528915687) * (Tanh((((x4)^(-1)) * ((x2)^(-2))) * ((x0)^(-2))))) + (((7.406002768271357) * (Tanh((((x4)^(-3)) * ((x3)^(-2))) * ((x0)^(-2))))) + ((1.4069354057736527) * (Sqrt((((((x4)^(-1)) * ((x3)^(2))) * ((x2)^(3))) * ((x1)^(3))) * ((x0)^(-2))))))))))))))) / ((1.0) + (((-1.016185113008168e-3) * (Id(((x3)^(-2)) * ((x2)^(-3))))) + (((0.1383735683383316) * (Sqrt(((x3)^(-3)) * ((x0)^(1))))) + ((4.701673986204469e-3) * (Log(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(2)))))))))","[[215.9726213687983,-15917.419466019805,3.4700939553743178,3.4075980553735654,-672.3869284562657,-16.034103884517606,-0.849256950903547,30373.40212984814,-17.935992528915687,7.406002768271357,1.4069354057736527,-1.016185113008168e-3,0.1383735683383316,4.701673986204469e-3]]","(((215.9726213687983) + (((-15917.419466019805) * (np.sqrt((((x[:,4])**(3)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))))) + (((3.4700939553743178) * (np.log(((x[:,2])**(-2)) * ((x[:,0])**(-3))))) + (((3.4075980553735654) * (np.tanh((((((x[:,4])**(-1)) * ((x[:,3])**(1))) * ((x[:,2])**(-2))) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + (((-672.3869284562657) * (np.sqrt((x[:,0])**(-1)))) + (((-16.034103884517606) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((-0.849256950903547) * (np.sqrt(((x[:,2])**(-1)) * ((x[:,1])**(1))))) + (((30373.40212984814) * (np.sqrt((x[:,0])**(-3)))) + (((-17.935992528915687) * (np.tanh((((x[:,4])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + (((7.406002768271357) * (np.tanh((((x[:,4])**(-3)) * ((x[:,3])**(-2))) * ((x[:,0])**(-2))))) + ((1.4069354057736527) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(2))) * ((x[:,2])**(3))) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))))))))))))) / ((1.0) + (((-1.016185113008168e-3) * ((((x[:,3])**(-2)) * ((x[:,2])**(-3))))) + (((0.1383735683383316) * (np.sqrt(((x[:,3])**(-3)) * ((x[:,0])**(1))))) + ((4.701673986204469e-3) * (np.log(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(2)))))))))"
"Id(((92.36087174593067) + (((2.035483738060992e-3) * (Sqrt(((x4)^(2)) * ((x0)^(3))))) + (((-0.8847351211289429) * (Cos((x2)^(-1)))) + (((-5.049112582667514e-2) * (Sqrt(((x4)^(1)) * ((x0)^(2))))) + (((1.2553553494874485) * (Log((((x3)^(-1)) * ((x2)^(-2))) * ((x0)^(1))))) + (((-2.316924317700569) * (Log(((x3)^(-3)) * ((x2)^(1))))) + (((-0.2531611316114121) * (Sqrt(((((x4)^(-1)) * ((x3)^(2))) * ((x2)^(-2))) * ((x0)^(-2))))) + (((-7567.07154792596) * (Id((((x4)^(2)) * ((x2)^(-2))) * ((x0)^(-1))))) + (((0.3580728936869251) * (Sin((x3)^(1)))) + ((163.78863022210672) * (Sqrt((((x2)^(1)) * ((x1)^(3))) * ((x0)^(-2)))))))))))))) / ((1.0) + ((549.8386991138048) * (Id((x4)^(3))))))","[[92.36087174593067,2.035483738060992e-3,-0.8847351211289429,-5.049112582667514e-2,1.2553553494874485,-2.316924317700569,-0.2531611316114121,-7567.07154792596,0.3580728936869251,163.78863022210672,549.8386991138048]]","(((92.36087174593067) + (((2.035483738060992e-3) * (np.sqrt(((x[:,4])**(2)) * ((x[:,0])**(3))))) + (((-0.8847351211289429) * (np.cos((x[:,2])**(-1)))) + (((-5.049112582667514e-2) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(2))))) + (((1.2553553494874485) * (np.log((((x[:,3])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(1))))) + (((-2.316924317700569) * (np.log(((x[:,3])**(-3)) * ((x[:,2])**(1))))) + (((-0.2531611316114121) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + (((-7567.07154792596) * (((((x[:,4])**(2)) * ((x[:,2])**(-2))) * ((x[:,0])**(-1))))) + (((0.3580728936869251) * (np.sin((x[:,3])**(1)))) + ((163.78863022210672) * (np.sqrt((((x[:,2])**(1)) * ((x[:,1])**(3))) * ((x[:,0])**(-2)))))))))))))) / ((1.0) + ((549.8386991138048) * (((x[:,4])**(3))))))"
"Id(((177.43501202520466) + (((2.6926846448905337) * (Tanh((((x4)^(-3)) * ((x3)^(2))) * ((x0)^(-3))))) + (((5.220638902849295e-3) * (Sqrt((((x4)^(2)) * ((x2)^(3))) * ((x0)^(3))))) + (((-3.693932328825026) * (Log((((x4)^(1)) * ((x2)^(2))) * ((x0)^(3))))) + (((-5036.129334201289) * (Sqrt(((x4)^(3)) * ((x3)^(-1))))) + (((9.83244887648128e-4) * (Id((x3)^(2)))) + (((0.678943383070491) * (Sqrt(((x4)^(-2)) * ((x3)^(-3))))) + (((-240.21798795065317) * (Sqrt((((x4)^(-1)) * ((x2)^(-1))) * ((x0)^(-2))))) + (((-4.79674363794585e-10) * (Id(((x2)^(-1)) * ((x0)^(2))))) + (((309.82347951608256) * (Tanh((((x4)^(-1)) * ((x2)^(-1))) * ((x0)^(-2))))) + ((-5.56986683948371e-3) * (Sqrt(((((x3)^(2)) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-1))))))))))))))) / ((1.0) + ((3.570744887075955e-2) * (Tanh((((x4)^(-3)) * ((x2)^(3))) * ((x0)^(-2)))))))","[[177.43501202520466,2.6926846448905337,5.220638902849295e-3,-3.693932328825026,-5036.129334201289,9.83244887648128e-4,0.678943383070491,-240.21798795065317,-4.79674363794585e-10,309.82347951608256,-5.56986683948371e-3,3.570744887075955e-2]]","(((177.43501202520466) + (((2.6926846448905337) * (np.tanh((((x[:,4])**(-3)) * ((x[:,3])**(2))) * ((x[:,0])**(-3))))) + (((5.220638902849295e-3) * (np.sqrt((((x[:,4])**(2)) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((-3.693932328825026) * (np.log((((x[:,4])**(1)) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((-5036.129334201289) * (np.sqrt(((x[:,4])**(3)) * ((x[:,3])**(-1))))) + (((9.83244887648128e-4) * (((x[:,3])**(2)))) + (((0.678943383070491) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,3])**(-3))))) + (((-240.21798795065317) * (np.sqrt((((x[:,4])**(-1)) * ((x[:,2])**(-1))) * ((x[:,0])**(-2))))) + (((-4.79674363794585e-10) * ((((x[:,2])**(-1)) * ((x[:,0])**(2))))) + (((309.82347951608256) * (np.tanh((((x[:,4])**(-1)) * ((x[:,2])**(-1))) * ((x[:,0])**(-2))))) + ((-5.56986683948371e-3) * (np.sqrt(((((x[:,3])**(2)) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))))))))))))) / ((1.0) + ((3.570744887075955e-2) * (np.tanh((((x[:,4])**(-3)) * ((x[:,2])**(3))) * ((x[:,0])**(-2)))))))"
"Id(((149.19004180907703) + (((-5.7472117254763315) * (Log((x0)^(3)))) + (((2.276920713801735) * (Log((((x3)^(2)) * ((x2)^(-3))) * ((x0)^(1))))) + (((-16.369931406862406) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((-229.80866888554738) * (Tanh(((x2)^(-1)) * ((x0)^(-1))))) + (((6.9195869025552605) * (Tanh((((x4)^(1)) * ((x3)^(-2))) * ((x0)^(2))))) + (((-2.1732324818165925) * (Cos(((x3)^(-3)) * ((x2)^(-3))))) + (((-2.1077082470246733) * (Log(((x4)^(1)) * ((x0)^(-3))))) + (((-0.5401837684770403) * (Sqrt((x1)^(2)))) + ((84680.680377379) * (Id((((x4)^(-1)) * ((x1)^(1))) * ((x0)^(-3)))))))))))))) / ((1.0) + ((131065.12487253932) * (Id(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(2))) * ((x1)^(1)))))))","[[149.19004180907703,-5.7472117254763315,2.276920713801735,-16.369931406862406,-229.80866888554738,6.9195869025552605,-2.1732324818165925,-2.1077082470246733,-0.5401837684770403,84680.680377379,131065.12487253932]]","(((149.19004180907703) + (((-5.7472117254763315) * (np.log((x[:,0])**(3)))) + (((2.276920713801735) * (np.log((((x[:,3])**(2)) * ((x[:,2])**(-3))) * ((x[:,0])**(1))))) + (((-16.369931406862406) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((-229.80866888554738) * (np.tanh(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((6.9195869025552605) * (np.tanh((((x[:,4])**(1)) * ((x[:,3])**(-2))) * ((x[:,0])**(2))))) + (((-2.1732324818165925) * (np.cos(((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((-2.1077082470246733) * (np.log(((x[:,4])**(1)) * ((x[:,0])**(-3))))) + (((-0.5401837684770403) * (np.sqrt((x[:,1])**(2)))) + ((84680.680377379) * (((((x[:,4])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-3)))))))))))))) / ((1.0) + ((131065.12487253932) * ((((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))) * ((x[:,1])**(1)))))))"
"Id(((151.44441305713266) + (((-9.081060217845693) * (Tanh((((x4)^(-3)) * ((x2)^(3))) * ((x0)^(-2))))) + (((2488158.703147798) * (Sin((((x3)^(-1)) * ((x2)^(-2))) * ((x0)^(-3))))) + (((5.828850533292171) * (Log(((x3)^(1)) * ((x2)^(-3))))) + (((-3.2600278001564647) * (Cos(((x3)^(-3)) * ((x2)^(-3))))) + (((268.30784503985217) * (Sqrt(((((x4)^(2)) * ((x3)^(-1))) * ((x2)^(3))) * ((x0)^(1))))) + (((9.326435774618261) * (Tanh(((((x4)^(2)) * ((x3)^(-1))) * ((x2)^(2))) * ((x0)^(3))))) + (((-3.496989216674563) * (Log((((x4)^(1)) * ((x2)^(-3))) * ((x0)^(3))))) + ((-2.1183897800258094) * (Sqrt((x1)^(1)))))))))))) / ((1.0) + (((1.8370431577731425) * (Sqrt(((x2)^(-2)) * ((x0)^(-2))))) + (((8888.345932481887) * (Id((((x4)^(2)) * ((x3)^(-1))) * ((x2)^(1))))) + ((6.874024032421376e-2) * (Id(((x4)^(-1)) * ((x0)^(-1)))))))))","[[151.44441305713266,-9.081060217845693,2488158.703147798,5.828850533292171,-3.2600278001564647,268.30784503985217,9.326435774618261,-3.496989216674563,-2.1183897800258094,1.8370431577731425,8888.345932481887,6.874024032421376e-2]]","(((151.44441305713266) + (((-9.081060217845693) * (np.tanh((((x[:,4])**(-3)) * ((x[:,2])**(3))) * ((x[:,0])**(-2))))) + (((2488158.703147798) * (np.sin((((x[:,3])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))))) + (((5.828850533292171) * (np.log(((x[:,3])**(1)) * ((x[:,2])**(-3))))) + (((-3.2600278001564647) * (np.cos(((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((268.30784503985217) * (np.sqrt(((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,2])**(3))) * ((x[:,0])**(1))))) + (((9.326435774618261) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((-3.496989216674563) * (np.log((((x[:,4])**(1)) * ((x[:,2])**(-3))) * ((x[:,0])**(3))))) + ((-2.1183897800258094) * (np.sqrt((x[:,1])**(1)))))))))))) / ((1.0) + (((1.8370431577731425) * (np.sqrt(((x[:,2])**(-2)) * ((x[:,0])**(-2))))) + (((8888.345932481887) * (((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))))) + ((6.874024032421376e-2) * ((((x[:,4])**(-1)) * ((x[:,0])**(-1)))))))))"
"Id(((879202.412199463) + (((-875960.9800821225) * (Cos(((x4)^(-1)) * ((x0)^(-2))))) + (((0.19092639717339832) * (Sqrt(((x4)^(2)) * ((x3)^(3))))) + (((1.7103005943563119) * (Log(((x4)^(-2)) * ((x0)^(-3))))) + (((-429.0736424757987) * (Sqrt(((x4)^(-2)) * ((x0)^(-3))))) + (((-3087.9092341057276) * (Exp((x4)^(2)))) + (((-4.883733886134348) * (Tanh((((x3)^(-1)) * ((x2)^(2))) * ((x0)^(1))))) + (((-2.2860859100810134e-4) * (Id((((x3)^(-2)) * ((x2)^(1))) * ((x0)^(2))))) + ((-6.015640468405072) * (Id((((x2)^(-1)) * ((x1)^(1))) * ((x0)^(-1))))))))))))) / ((1.0) + ((4.890994727793596e-2) * (Tanh(((((x4)^(1)) * ((x3)^(-2))) * ((x2)^(2))) * ((x0)^(2)))))))","[[879202.412199463,-875960.9800821225,0.19092639717339832,1.7103005943563119,-429.0736424757987,-3087.9092341057276,-4.883733886134348,-2.2860859100810134e-4,-6.015640468405072,4.890994727793596e-2]]","(((879202.412199463) + (((-875960.9800821225) * (np.cos(((x[:,4])**(-1)) * ((x[:,0])**(-2))))) + (((0.19092639717339832) * (np.sqrt(((x[:,4])**(2)) * ((x[:,3])**(3))))) + (((1.7103005943563119) * (np.log(((x[:,4])**(-2)) * ((x[:,0])**(-3))))) + (((-429.0736424757987) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-3))))) + (((-3087.9092341057276) * (np.exp((x[:,4])**(2)))) + (((-4.883733886134348) * (np.tanh((((x[:,3])**(-1)) * ((x[:,2])**(2))) * ((x[:,0])**(1))))) + (((-2.2860859100810134e-4) * (((((x[:,3])**(-2)) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + ((-6.015640468405072) * (((((x[:,2])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))))))))))) / ((1.0) + ((4.890994727793596e-2) * (np.tanh(((((x[:,4])**(1)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))) * ((x[:,0])**(2)))))))"
"Id(((1010702.9823867957) + (((8.177138232256714e-3) * (Id(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(2))))) + (((-1008940.1707826917) * (Exp((((x4)^(1)) * ((x3)^(-2))) * ((x2)^(1))))) + (((-24.089694013173336) * (Sqrt(((x2)^(-3)) * ((x0)^(-2))))) + (((-7.247947056731396e-2) * (Sqrt((((x4)^(-2)) * ((x0)^(-1))) * ((x1)^(1))))) + (((-9.658921588888212) * (Cos(((x2)^(-3)) * ((x0)^(-2))))) + (((-1614.1745200381888) * (Exp((x4)^(2)))) + (((3.1120419137809516e-6) * (Id(((x4)^(-3)) * ((x2)^(3))))) + (((-0.35699887263453434) * (Sqrt((((x4)^(-3)) * ((x2)^(3))) * ((x0)^(-1))))) + ((-1.4055042183636175) * (Cos((x2)^(-3))))))))))))) / ((1.0) + ((8.69356779149921e-3) * (Sqrt(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(2)))))))","[[1010702.9823867957,8.177138232256714e-3,-1008940.1707826917,-24.089694013173336,-7.247947056731396e-2,-9.658921588888212,-1614.1745200381888,3.1120419137809516e-6,-0.35699887263453434,-1.4055042183636175,8.69356779149921e-3]]","(((1010702.9823867957) + (((8.177138232256714e-3) * ((((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + (((-1008940.1707826917) * (np.exp((((x[:,4])**(1)) * ((x[:,3])**(-2))) * ((x[:,2])**(1))))) + (((-24.089694013173336) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((-7.247947056731396e-2) * (np.sqrt((((x[:,4])**(-2)) * ((x[:,0])**(-1))) * ((x[:,1])**(1))))) + (((-9.658921588888212) * (np.cos(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((-1614.1745200381888) * (np.exp((x[:,4])**(2)))) + (((3.1120419137809516e-6) * ((((x[:,4])**(-3)) * ((x[:,2])**(3))))) + (((-0.35699887263453434) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,2])**(3))) * ((x[:,0])**(-1))))) + ((-1.4055042183636175) * (np.cos((x[:,2])**(-3))))))))))))) / ((1.0) + ((8.69356779149921e-3) * (np.sqrt(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(2)))))))"
"Id(((-2.342728924075056e8) + (((33.202406902397804) * (Tanh(((x4)^(1)) * ((x0)^(1))))) + (((-2.2300613890039872e-2) * (Sqrt(((x1)^(1)) * ((x0)^(1))))) + (((-1.603912375346825) * (Log(((x4)^(2)) * ((x3)^(-2))))) + (((2.3427295507841203e8) * (Cos((x4)^(3)))) + (((-3.640730375749708e-4) * (Sqrt((x0)^(2)))) + (((8.064222666490906) * (Cos((((x2)^(-1)) * ((x1)^(1))) * ((x0)^(-1))))) + (((-8.873695023009642) * (Tanh(((((x0)^(1)) * ((x3)^(-2))) * ((x2)^(2))) * ((x1)^(2))))) + ((8.286236459129741) * (Tanh(((((x3)^(-2)) * ((x2)^(2))) * ((x1)^(3))) * ((x0)^(1))))))))))))) / ((1.0) + ((2.952074364463715e-3) * (Sqrt(((x2)^(1)) * ((x0)^(1)))))))","[[-2.342728924075056e8,33.202406902397804,-2.2300613890039872e-2,-1.603912375346825,2.3427295507841203e8,-3.640730375749708e-4,8.064222666490906,-8.873695023009642,8.286236459129741,2.952074364463715e-3]]","(((-2.342728924075056e8) + (((33.202406902397804) * (np.tanh(((x[:,4])**(1)) * ((x[:,0])**(1))))) + (((-2.2300613890039872e-2) * (np.sqrt(((x[:,1])**(1)) * ((x[:,0])**(1))))) + (((-1.603912375346825) * (np.log(((x[:,4])**(2)) * ((x[:,3])**(-2))))) + (((2.3427295507841203e8) * (np.cos((x[:,4])**(3)))) + (((-3.640730375749708e-4) * (np.sqrt((x[:,0])**(2)))) + (((8.064222666490906) * (np.cos((((x[:,2])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((-8.873695023009642) * (np.tanh(((((x[:,0])**(1)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))) * ((x[:,1])**(2))))) + ((8.286236459129741) * (np.tanh(((((x[:,3])**(-2)) * ((x[:,2])**(2))) * ((x[:,1])**(3))) * ((x[:,0])**(1))))))))))))) / ((1.0) + ((2.952074364463715e-3) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(1)))))))"
"Id(((3029.8203544399967) + (((-2911.9635480128377) * (Exp((x4)^(2)))) + (((-2.531173899224788) * (Sqrt((((x3)^(1)) * ((x2)^(-3))) * ((x0)^(-2))))) + (((-4.379761083661948e-3) * (Sqrt((((((x4)^(-1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x1)^(3))) * ((x0)^(1))))) + (((-2.802804757921317) * (Log(((x4)^(1)) * ((x0)^(2))))) + (((-1.5404080867062464) * (Log((((x4)^(-1)) * ((x3)^(-2))) * ((x0)^(-3))))) + (((0.16859673952826792) * (Sqrt(((x4)^(-2)) * ((x3)^(-2))))) + (((-1.408231904077815e-8) * (Sqrt((((x4)^(-2)) * ((x3)^(-1))) * ((x0)^(3))))) + (((-1.5314819629507856) * (Sqrt((((x4)^(-3)) * ((x2)^(1))) * ((x0)^(-2))))) + (((-4.777263371690209) * (Tanh((((x4)^(-3)) * ((x1)^(1))) * ((x0)^(-3))))) + ((8.637139874383852) * (Tanh(((((x4)^(-1)) * ((x3)^(2))) * ((x2)^(-1))) * ((x0)^(-2))))))))))))))) / ((1.0) + ((2.4988129672518095e-3) * (Sqrt(((x2)^(1)) * ((x0)^(1)))))))","[[3029.8203544399967,-2911.9635480128377,-2.531173899224788,-4.379761083661948e-3,-2.802804757921317,-1.5404080867062464,0.16859673952826792,-1.408231904077815e-8,-1.5314819629507856,-4.777263371690209,8.637139874383852,2.4988129672518095e-3]]","(((3029.8203544399967) + (((-2911.9635480128377) * (np.exp((x[:,4])**(2)))) + (((-2.531173899224788) * (np.sqrt((((x[:,3])**(1)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))) + (((-4.379761083661948e-3) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,1])**(3))) * ((x[:,0])**(1))))) + (((-2.802804757921317) * (np.log(((x[:,4])**(1)) * ((x[:,0])**(2))))) + (((-1.5404080867062464) * (np.log((((x[:,4])**(-1)) * ((x[:,3])**(-2))) * ((x[:,0])**(-3))))) + (((0.16859673952826792) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,3])**(-2))))) + (((-1.408231904077815e-8) * (np.sqrt((((x[:,4])**(-2)) * ((x[:,3])**(-1))) * ((x[:,0])**(3))))) + (((-1.5314819629507856) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,2])**(1))) * ((x[:,0])**(-2))))) + (((-4.777263371690209) * (np.tanh((((x[:,4])**(-3)) * ((x[:,1])**(1))) * ((x[:,0])**(-3))))) + ((8.637139874383852) * (np.tanh(((((x[:,4])**(-1)) * ((x[:,3])**(2))) * ((x[:,2])**(-1))) * ((x[:,0])**(-2))))))))))))))) / ((1.0) + ((2.4988129672518095e-3) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(1)))))))"
"Id(((155.56602295796588) + (((-526.9913088443578) * (Sqrt(((((x4)^(3)) * ((x3)^(2))) * ((x2)^(-2))) * ((x0)^(-2))))) + (((-0.2801382926895637) * (Sqrt(((((x4)^(-1)) * ((x2)^(-1))) * ((x1)^(2))) * ((x0)^(-1))))) + (((-4.158391479010685) * (Log(((x2)^(1)) * ((x0)^(1))))) + (((-7.531618853703012) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(2))) * ((x0)^(3))))) + (((7.521814454197571) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(1))) * ((x0)^(3))))) + (((-5.118007067768987) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(-1))) * ((x0)^(2))))) + ((36.79739222909869) * (Tanh(((((x3)^(1)) * ((x2)^(1))) * ((x1)^(1))) * ((x0)^(-1)))))))))))) / ((1.0) + (((2.256285915574205) * (Sqrt(((x4)^(-1)) * ((x0)^(-2))))) + (((2.9798643334264935e-3) * (Sqrt((((x4)^(1)) * ((x3)^(-2))) * ((x0)^(2))))) + ((12.047312008107882) * (Id(((x4)^(1)) * ((x2)^(1)))))))))","[[155.56602295796588,-526.9913088443578,-0.2801382926895637,-4.158391479010685,-7.531618853703012,7.521814454197571,-5.118007067768987,36.79739222909869,2.256285915574205,2.9798643334264935e-3,12.047312008107882]]","(((155.56602295796588) + (((-526.9913088443578) * (np.sqrt(((((x[:,4])**(3)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + (((-0.2801382926895637) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,2])**(-1))) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))) + (((-4.158391479010685) * (np.log(((x[:,2])**(1)) * ((x[:,0])**(1))))) + (((-7.531618853703012) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((7.521814454197571) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(1))) * ((x[:,0])**(3))))) + (((-5.118007067768987) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(-1))) * ((x[:,0])**(2))))) + ((36.79739222909869) * (np.tanh(((((x[:,3])**(1)) * ((x[:,2])**(1))) * ((x[:,1])**(1))) * ((x[:,0])**(-1)))))))))))) / ((1.0) + (((2.256285915574205) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,0])**(-2))))) + (((2.9798643334264935e-3) * (np.sqrt((((x[:,4])**(1)) * ((x[:,3])**(-2))) * ((x[:,0])**(2))))) + ((12.047312008107882) * ((((x[:,4])**(1)) * ((x[:,2])**(1)))))))))"
"Id(((135.75467568875385) + (((-990.2189821534097) * (Tanh(((x4)^(1)) * ((x2)^(1))))) + (((1.5332253500749644) * (Log(((x4)^(-2)) * ((x3)^(2))))) + (((3.331114933036422) * (Id(((x3)^(-3)) * ((x2)^(-3))))) + (((-3.2334331421182885) * (Sqrt((((x4)^(-2)) * ((x2)^(2))) * ((x0)^(-1))))) + (((-11.919514464250602) * (Tanh(((((x4)^(-3)) * ((x3)^(-1))) * ((x1)^(3))) * ((x0)^(-3))))) + (((-14.070285494600196) * (Sqrt((((((x4)^(3)) * ((x3)^(2))) * ((x2)^(-2))) * ((x1)^(1))) * ((x0)^(-1))))) + (((-2.0944025715200945) * (Tanh((x1)^(3)))) + (((4.10759293273825) * (Tanh(((((x4)^(-3)) * ((x3)^(1))) * ((x2)^(-2))) * ((x0)^(-3))))) + ((-2.0049928325984663) * (Log(((x4)^(1)) * ((x0)^(3)))))))))))))) / ((1.0) + (((5.850681696248604e-3) * (Cos((x2)^(-1)))) + (((2.1264228145252348e-4) * (Sqrt((((x3)^(-2)) * ((x2)^(1))) * ((x0)^(2))))) + (((7.906871045119761e-3) * (Sqrt((((x4)^(-3)) * ((x3)^(1))) * ((x0)^(-3))))) + (((0.8956824097452987) * (Tanh(((x2)^(-1)) * ((x0)^(-1))))) + (((2.364894701019116e-6) * (Sqrt((x0)^(2)))) + (((-0.5297294919405857) * (Id(((x1)^(3)) * ((x0)^(-2))))) + (((4.0281386161848155e-3) * (Sin((x1)^(2)))) + (((-0.12337798342019846) * (Sqrt(((((x4)^(-1)) * ((x2)^(1))) * ((x1)^(3))) * ((x0)^(-2))))) + ((-1.4828612514308257e-2) * (Sqrt((((x4)^(2)) * ((x3)^(2))) * ((x2)^(-1)))))))))))))))","[[135.75467568875385,-990.2189821534097,1.5332253500749644,3.331114933036422,-3.2334331421182885,-11.919514464250602,-14.070285494600196,-2.0944025715200945,4.10759293273825,-2.0049928325984663,5.850681696248604e-3,2.1264228145252348e-4,7.906871045119761e-3,0.8956824097452987,2.364894701019116e-6,-0.5297294919405857,4.0281386161848155e-3,-0.12337798342019846,-1.4828612514308257e-2]]","(((135.75467568875385) + (((-990.2189821534097) * (np.tanh(((x[:,4])**(1)) * ((x[:,2])**(1))))) + (((1.5332253500749644) * (np.log(((x[:,4])**(-2)) * ((x[:,3])**(2))))) + (((3.331114933036422) * ((((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((-3.2334331421182885) * (np.sqrt((((x[:,4])**(-2)) * ((x[:,2])**(2))) * ((x[:,0])**(-1))))) + (((-11.919514464250602) * (np.tanh(((((x[:,4])**(-3)) * ((x[:,3])**(-1))) * ((x[:,1])**(3))) * ((x[:,0])**(-3))))) + (((-14.070285494600196) * (np.sqrt((((((x[:,4])**(3)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((-2.0944025715200945) * (np.tanh((x[:,1])**(3)))) + (((4.10759293273825) * (np.tanh(((((x[:,4])**(-3)) * ((x[:,3])**(1))) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))))) + ((-2.0049928325984663) * (np.log(((x[:,4])**(1)) * ((x[:,0])**(3)))))))))))))) / ((1.0) + (((5.850681696248604e-3) * (np.cos((x[:,2])**(-1)))) + (((2.1264228145252348e-4) * (np.sqrt((((x[:,3])**(-2)) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + (((7.906871045119761e-3) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,3])**(1))) * ((x[:,0])**(-3))))) + (((0.8956824097452987) * (np.tanh(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((2.364894701019116e-6) * (np.sqrt((x[:,0])**(2)))) + (((-0.5297294919405857) * ((((x[:,1])**(3)) * ((x[:,0])**(-2))))) + (((4.0281386161848155e-3) * (np.sin((x[:,1])**(2)))) + (((-0.12337798342019846) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,2])**(1))) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))) + ((-1.4828612514308257e-2) * (np.sqrt((((x[:,4])**(2)) * ((x[:,3])**(2))) * ((x[:,2])**(-1)))))))))))))))"
"Id(((156.9390872998943) + (((-207.85041051971524) * (Tanh(((x2)^(-1)) * ((x0)^(-1))))) + (((9.068280051907934) * (Tanh((((((x4)^(-2)) * ((x3)^(2))) * ((x2)^(2))) * ((x1)^(2))) * ((x0)^(-3))))) + (((-0.9608096325768325) * (Cos((x2)^(-1)))) + (((-22.914455416746492) * (Tanh((x2)^(1)))) + (((-2.5833816225106446e-4) * (Id((x0)^(1)))) + (((5.737172760425502e-6) * (Id((x3)^(3)))) + (((2.5913514533133686) * (Log(((x4)^(-1)) * ((x3)^(-3))))) + (((-1.4379293593021785) * (Sqrt((x1)^(1)))) + ((-3.93939774045373) * (Log((((x3)^(-3)) * ((x2)^(1))) * ((x0)^(2)))))))))))))) / ((1.0) + (((-26149.6117750075) * (Id((((x3)^(-1)) * ((x2)^(-2))) * ((x0)^(-3))))) + (((0.1274044704887013) * (Tanh((((x4)^(-2)) * ((x3)^(2))) * ((x0)^(-3))))) + ((21.367109375823055) * (Id((x4)^(2))))))))","[[156.9390872998943,-207.85041051971524,9.068280051907934,-0.9608096325768325,-22.914455416746492,-2.5833816225106446e-4,5.737172760425502e-6,2.5913514533133686,-1.4379293593021785,-3.93939774045373,-26149.6117750075,0.1274044704887013,21.367109375823055]]","(((156.9390872998943) + (((-207.85041051971524) * (np.tanh(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((9.068280051907934) * (np.tanh((((((x[:,4])**(-2)) * ((x[:,3])**(2))) * ((x[:,2])**(2))) * ((x[:,1])**(2))) * ((x[:,0])**(-3))))) + (((-0.9608096325768325) * (np.cos((x[:,2])**(-1)))) + (((-22.914455416746492) * (np.tanh((x[:,2])**(1)))) + (((-2.5833816225106446e-4) * (((x[:,0])**(1)))) + (((5.737172760425502e-6) * (((x[:,3])**(3)))) + (((2.5913514533133686) * (np.log(((x[:,4])**(-1)) * ((x[:,3])**(-3))))) + (((-1.4379293593021785) * (np.sqrt((x[:,1])**(1)))) + ((-3.93939774045373) * (np.log((((x[:,3])**(-3)) * ((x[:,2])**(1))) * ((x[:,0])**(2)))))))))))))) / ((1.0) + (((-26149.6117750075) * (((((x[:,3])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))))) + (((0.1274044704887013) * (np.tanh((((x[:,4])**(-2)) * ((x[:,3])**(2))) * ((x[:,0])**(-3))))) + ((21.367109375823055) * (((x[:,4])**(2))))))))"
"Id(((6.969162113667911e7) + (((-30.365813963727305) * (Tanh(((x4)^(-1)) * ((x0)^(-1))))) + (((2.5567849122303504e-2) * (Id((x4)^(-1)))) + (((-6.570236485006541) * (Log((x2)^(1)))) + (((-1.3109692367531563e-4) * (Sqrt(((x4)^(-2)) * ((x0)^(1))))) + (((-2.2408444991361756e-2) * (Sqrt(((((x3)^(2)) * ((x2)^(-2))) * ((x1)^(3))) * ((x0)^(-2))))) + (((-6.969141505225821e7) * (Exp(((x4)^(2)) * ((x3)^(-3))))) + (((-77.97482619044047) * (Sqrt((x4)^(1)))) + (((9.802805189716123e-4) * (Id((x3)^(2)))) + (((-60.37027962248871) * (Sqrt(((x2)^(-1)) * ((x0)^(-1))))) + ((-5.59556578068004) * (Log((x0)^(2)))))))))))))) / ((1.0) + ((9.670302312897862e-5) * (Sqrt(((((x4)^(-2)) * ((x3)^(1))) * ((x2)^(-1))) * ((x0)^(-1)))))))","[[6.969162113667911e7,-30.365813963727305,2.5567849122303504e-2,-6.570236485006541,-1.3109692367531563e-4,-2.2408444991361756e-2,-6.969141505225821e7,-77.97482619044047,9.802805189716123e-4,-60.37027962248871,-5.59556578068004,9.670302312897862e-5]]","(((6.969162113667911e7) + (((-30.365813963727305) * (np.tanh(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((2.5567849122303504e-2) * (((x[:,4])**(-1)))) + (((-6.570236485006541) * (np.log((x[:,2])**(1)))) + (((-1.3109692367531563e-4) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(1))))) + (((-2.2408444991361756e-2) * (np.sqrt(((((x[:,3])**(2)) * ((x[:,2])**(-2))) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))) + (((-6.969141505225821e7) * (np.exp(((x[:,4])**(2)) * ((x[:,3])**(-3))))) + (((-77.97482619044047) * (np.sqrt((x[:,4])**(1)))) + (((9.802805189716123e-4) * (((x[:,3])**(2)))) + (((-60.37027962248871) * (np.sqrt(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + ((-5.59556578068004) * (np.log((x[:,0])**(2)))))))))))))) / ((1.0) + ((9.670302312897862e-5) * (np.sqrt(((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,2])**(-1))) * ((x[:,0])**(-1)))))))"
"Id(((-1091.7835926826683) + (((6.507253108943205) * (Tanh(((((x4)^(2)) * ((x3)^(-1))) * ((x2)^(2))) * ((x0)^(3))))) + (((6.0596807042213104e-2) * (Sqrt(((x4)^(-2)) * ((x3)^(-1))))) + (((-1929.5547563573314) * (Sqrt(((x4)^(2)) * ((x3)^(-1))))) + (((-0.19834709026349728) * (Sqrt((x0)^(1)))) + (((-4.582955826565819) * (Tanh(((((x3)^(-2)) * ((x2)^(2))) * ((x1)^(2))) * ((x0)^(1))))) + (((1212.997998346801) * (Exp((x0)^(-1)))) + (((-12.135702691075018) * (Sqrt(((x4)^(-2)) * ((x0)^(-2))))) + (((5.684300336798343) * (Tanh(((x3)^(-1)) * ((x2)^(-2))))) + (((-1.6242043375034113e-5) * (Id((((x4)^(1)) * ((x3)^(3))) * ((x2)^(-1))))) + (((-1.7288522329117302) * (Cos((((x4)^(2)) * ((x2)^(-2))) * ((x1)^(1))))) + (((-1.860690287619339) * (Sqrt(((((x4)^(-1)) * ((x3)^(-3))) * ((x2)^(1))) * ((x0)^(1))))) + ((6.452253662924106e-6) * (Id((x3)^(3)))))))))))))))) / ((1.0) + ((-6.983343803960025e-2) * (Cos((((x2)^(-1)) * ((x1)^(1))) * ((x0)^(-1)))))))","[[-1091.7835926826683,6.507253108943205,6.0596807042213104e-2,-1929.5547563573314,-0.19834709026349728,-4.582955826565819,1212.997998346801,-12.135702691075018,5.684300336798343,-1.6242043375034113e-5,-1.7288522329117302,-1.860690287619339,6.452253662924106e-6,-6.983343803960025e-2]]","(((-1091.7835926826683) + (((6.507253108943205) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((6.0596807042213104e-2) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,3])**(-1))))) + (((-1929.5547563573314) * (np.sqrt(((x[:,4])**(2)) * ((x[:,3])**(-1))))) + (((-0.19834709026349728) * (np.sqrt((x[:,0])**(1)))) + (((-4.582955826565819) * (np.tanh(((((x[:,3])**(-2)) * ((x[:,2])**(2))) * ((x[:,1])**(2))) * ((x[:,0])**(1))))) + (((1212.997998346801) * (np.exp((x[:,0])**(-1)))) + (((-12.135702691075018) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((5.684300336798343) * (np.tanh(((x[:,3])**(-1)) * ((x[:,2])**(-2))))) + (((-1.6242043375034113e-5) * (((((x[:,4])**(1)) * ((x[:,3])**(3))) * ((x[:,2])**(-1))))) + (((-1.7288522329117302) * (np.cos((((x[:,4])**(2)) * ((x[:,2])**(-2))) * ((x[:,1])**(1))))) + (((-1.860690287619339) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,3])**(-3))) * ((x[:,2])**(1))) * ((x[:,0])**(1))))) + ((6.452253662924106e-6) * (((x[:,3])**(3)))))))))))))))) / ((1.0) + ((-6.983343803960025e-2) * (np.cos((((x[:,2])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-1)))))))"
"Id(((65.47181067684669) + (((1.7094407805030851) * (Log((((x4)^(-3)) * ((x2)^(-3))) * ((x0)^(-3))))) + (((-10.299980908154303) * (Tanh((((((x4)^(-2)) * ((x3)^(1))) * ((x2)^(-1))) * ((x1)^(1))) * ((x0)^(-3))))) + (((-23.884392844960544) * (Sqrt(((x2)^(-3)) * ((x0)^(-2))))) + (((11.070260684432807) * (Sqrt(((x4)^(1)) * ((x3)^(1))))) + (((57.751622048561124) * (Tanh(((x4)^(1)) * ((x0)^(1))))) + (((-9.468764665588074e-5) * (Sqrt(((x3)^(3)) * ((x1)^(3))))) + (((-1.6558978869591842e-6) * (Sqrt((x0)^(3)))) + ((-1091.7606848387277) * (Sqrt((x4)^(3)))))))))))) / ((1.0) + (((-12.832862056961634) * (Sqrt(((((x4)^(-1)) * ((x3)^(-3))) * ((x2)^(-2))) * ((x0)^(-2))))) + ((1.6004598180248797e-2) * (Log(((x3)^(-2)) * ((x0)^(1))))))))","[[65.47181067684669,1.7094407805030851,-10.299980908154303,-23.884392844960544,11.070260684432807,57.751622048561124,-9.468764665588074e-5,-1.6558978869591842e-6,-1091.7606848387277,-12.832862056961634,1.6004598180248797e-2]]","(((65.47181067684669) + (((1.7094407805030851) * (np.log((((x[:,4])**(-3)) * ((x[:,2])**(-3))) * ((x[:,0])**(-3))))) + (((-10.299980908154303) * (np.tanh((((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,2])**(-1))) * ((x[:,1])**(1))) * ((x[:,0])**(-3))))) + (((-23.884392844960544) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((11.070260684432807) * (np.sqrt(((x[:,4])**(1)) * ((x[:,3])**(1))))) + (((57.751622048561124) * (np.tanh(((x[:,4])**(1)) * ((x[:,0])**(1))))) + (((-9.468764665588074e-5) * (np.sqrt(((x[:,3])**(3)) * ((x[:,1])**(3))))) + (((-1.6558978869591842e-6) * (np.sqrt((x[:,0])**(3)))) + ((-1091.7606848387277) * (np.sqrt((x[:,4])**(3)))))))))))) / ((1.0) + (((-12.832862056961634) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,3])**(-3))) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + ((1.6004598180248797e-2) * (np.log(((x[:,3])**(-2)) * ((x[:,0])**(1))))))))"
"Id(((168.26368549587042) + (((9.913534735750025e-4) * (Id((x3)^(2)))) + (((-5.264880467276766) * (Log((((x4)^(1)) * ((x2)^(1))) * ((x0)^(2))))) + (((-33776.49654650733) * (Sqrt((((x4)^(3)) * ((x2)^(1))) * ((x0)^(-1))))) + (((-315.01508821519303) * (Sqrt(((x2)^(-2)) * ((x0)^(-2))))) + (((0.8822918279402812) * (Exp(((x3)^(-3)) * ((x2)^(-3))))) + (((-7.263132506441941) * (Tanh((((x4)^(-3)) * ((x1)^(2))) * ((x0)^(-3))))) + (((0.7994854625844958) * (Cos((x1)^(3)))) + ((-2.119074718029065) * (Sqrt((((x4)^(-3)) * ((x2)^(1))) * ((x0)^(-2))))))))))))) / ((1.0) + ((-236.09344524629765) * (Sin(((x2)^(-1)) * ((x0)^(-2)))))))","[[168.26368549587042,9.913534735750025e-4,-5.264880467276766,-33776.49654650733,-315.01508821519303,0.8822918279402812,-7.263132506441941,0.7994854625844958,-2.119074718029065,-236.09344524629765]]","(((168.26368549587042) + (((9.913534735750025e-4) * (((x[:,3])**(2)))) + (((-5.264880467276766) * (np.log((((x[:,4])**(1)) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + (((-33776.49654650733) * (np.sqrt((((x[:,4])**(3)) * ((x[:,2])**(1))) * ((x[:,0])**(-1))))) + (((-315.01508821519303) * (np.sqrt(((x[:,2])**(-2)) * ((x[:,0])**(-2))))) + (((0.8822918279402812) * (np.exp(((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((-7.263132506441941) * (np.tanh((((x[:,4])**(-3)) * ((x[:,1])**(2))) * ((x[:,0])**(-3))))) + (((0.7994854625844958) * (np.cos((x[:,1])**(3)))) + ((-2.119074718029065) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,2])**(1))) * ((x[:,0])**(-2))))))))))))) / ((1.0) + ((-236.09344524629765) * (np.sin(((x[:,2])**(-1)) * ((x[:,0])**(-2)))))))"
"Id(((140.8809041264821) + (((5.3036122849891285) * (Tanh(((((x4)^(2)) * ((x3)^(-1))) * ((x2)^(2))) * ((x0)^(3))))) + (((-23.69173739931839) * (Sqrt((((x4)^(-3)) * ((x2)^(1))) * ((x0)^(-3))))) + (((-15.871178641105152) * (Tanh((((x4)^(1)) * ((x3)^(-1))) * ((x0)^(1))))) + (((-4640364.051359219) * (Sin(((x4)^(2)) * ((x3)^(-2))))) + ((-1.8748017276928656e-2) * (Sqrt(((((x3)^(2)) * ((x2)^(-3))) * ((x1)^(2))) * ((x0)^(-2)))))))))) / ((1.0) + (((0.15226829767716854) * (Sqrt(((((x4)^(-1)) * ((x3)^(-1))) * ((x1)^(1))) * ((x0)^(-1))))) + (((-5.0656862494292835e-5) * (Sqrt(((x2)^(2)) * ((x0)^(2))))) + ((6.865348505700333e-3) * (Sqrt(((x2)^(1)) * ((x0)^(1)))))))))","[[140.8809041264821,5.3036122849891285,-23.69173739931839,-15.871178641105152,-4640364.051359219,-1.8748017276928656e-2,0.15226829767716854,-5.0656862494292835e-5,6.865348505700333e-3]]","(((140.8809041264821) + (((5.3036122849891285) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((-23.69173739931839) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,2])**(1))) * ((x[:,0])**(-3))))) + (((-15.871178641105152) * (np.tanh((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,0])**(1))))) + (((-4640364.051359219) * (np.sin(((x[:,4])**(2)) * ((x[:,3])**(-2))))) + ((-1.8748017276928656e-2) * (np.sqrt(((((x[:,3])**(2)) * ((x[:,2])**(-3))) * ((x[:,1])**(2))) * ((x[:,0])**(-2)))))))))) / ((1.0) + (((0.15226829767716854) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,3])**(-1))) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((-5.0656862494292835e-5) * (np.sqrt(((x[:,2])**(2)) * ((x[:,0])**(2))))) + ((6.865348505700333e-3) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(1)))))))))"
"Id(((164.48668958908482) + (((-2.7235057843940993) * (Log(((x4)^(3)) * ((x0)^(3))))) + (((-0.25825578470325755) * (Sqrt((((x4)^(-3)) * ((x3)^(2))) * ((x0)^(-3))))) + (((1.709654651275403) * (Log((((x4)^(2)) * ((x2)^(-3))) * ((x0)^(-1))))) + (((0.10101188570667063) * (Id((x3)^(1)))) + (((447.7890286941006) * (Sqrt(((((x3)^(1)) * ((x2)^(1))) * ((x1)^(1))) * ((x0)^(-2))))) + (((-9.293056954071817) * (Tanh((((x4)^(-2)) * ((x1)^(1))) * ((x0)^(-2))))) + ((-5.3365083467728205) * (Sqrt(((((x3)^(1)) * ((x2)^(-2))) * ((x1)^(1))) * ((x0)^(-2)))))))))))) / ((1.0) + (((-292.3839854244953) * (Sqrt((x0)^(-3)))) + (((44.72746256708676) * (Sin((x0)^(-1)))) + (((-5.886838086765768e-3) * (Sin((x2)^(-2)))) + ((406.03345679189545) * (Sqrt((((x4)^(3)) * ((x2)^(1))) * ((x0)^(-1))))))))))","[[164.48668958908482,-2.7235057843940993,-0.25825578470325755,1.709654651275403,0.10101188570667063,447.7890286941006,-9.293056954071817,-5.3365083467728205,-292.3839854244953,44.72746256708676,-5.886838086765768e-3,406.03345679189545]]","(((164.48668958908482) + (((-2.7235057843940993) * (np.log(((x[:,4])**(3)) * ((x[:,0])**(3))))) + (((-0.25825578470325755) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,3])**(2))) * ((x[:,0])**(-3))))) + (((1.709654651275403) * (np.log((((x[:,4])**(2)) * ((x[:,2])**(-3))) * ((x[:,0])**(-1))))) + (((0.10101188570667063) * (((x[:,3])**(1)))) + (((447.7890286941006) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(1))) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + (((-9.293056954071817) * (np.tanh((((x[:,4])**(-2)) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + ((-5.3365083467728205) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,1])**(1))) * ((x[:,0])**(-2)))))))))))) / ((1.0) + (((-292.3839854244953) * (np.sqrt((x[:,0])**(-3)))) + (((44.72746256708676) * (np.sin((x[:,0])**(-1)))) + (((-5.886838086765768e-3) * (np.sin((x[:,2])**(-2)))) + ((406.03345679189545) * (np.sqrt((((x[:,4])**(3)) * ((x[:,2])**(1))) * ((x[:,0])**(-1))))))))))"
"Id(((115.01160621019002) + (((-0.3848215724716555) * (Sqrt(((((x3)^(1)) * ((x2)^(-2))) * ((x1)^(1))) * ((x0)^(-1))))) + (((6.002181302215774) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(1))) * ((x0)^(3))))) + (((-3.4517662354617746) * (Log(((((x4)^(1)) * ((x3)^(-2))) * ((x2)^(2))) * ((x0)^(2))))) + (((-0.19753417181056498) * (Log((x4)^(3)))) + (((-38496.245140553) * (Tanh((x4)^(3)))) + ((-17.553080054952893) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))))))))) / ((1.0) + ((5.0888070995893265e-6) * (Sqrt((x0)^(2))))))","[[115.01160621019002,-0.3848215724716555,6.002181302215774,-3.4517662354617746,-0.19753417181056498,-38496.245140553,-17.553080054952893,5.0888070995893265e-6]]","(((115.01160621019002) + (((-0.3848215724716555) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((6.002181302215774) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(1))) * ((x[:,0])**(3))))) + (((-3.4517662354617746) * (np.log(((((x[:,4])**(1)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))) * ((x[:,0])**(2))))) + (((-0.19753417181056498) * (np.log((x[:,4])**(3)))) + (((-38496.245140553) * (np.tanh((x[:,4])**(3)))) + ((-17.553080054952893) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))))))))) / ((1.0) + ((5.0888070995893265e-6) * (np.sqrt((x[:,0])**(2))))))"
"Id(((154.46014379635488) + (((-3.621197747866259) * (Log(((((x4)^(1)) * ((x3)^(-2))) * ((x2)^(2))) * ((x0)^(3))))) + (((-13.239200359734376) * (Sqrt(((x2)^(-2)) * ((x0)^(-1))))) + (((-138.13310492476958) * (Sqrt((x0)^(-1)))) + (((135.61096425748497) * (Sin(((x3)^(-3)) * ((x2)^(-2))))) + (((-4.948285784912727) * (Sqrt(((x4)^(-3)) * ((x0)^(-3))))) + (((-0.8029643423109167) * (Cos((x2)^(-1)))) + ((-9.393026966816285) * (Tanh((((x4)^(-2)) * ((x3)^(2))) * ((x0)^(-3)))))))))))) / ((1.0) + (((8.68913306645202e-7) * (Id(((x4)^(-1)) * ((x1)^(2))))) + ((22.000423023688455) * (Id((x4)^(2)))))))","[[154.46014379635488,-3.621197747866259,-13.239200359734376,-138.13310492476958,135.61096425748497,-4.948285784912727,-0.8029643423109167,-9.393026966816285,8.68913306645202e-7,22.000423023688455]]","(((154.46014379635488) + (((-3.621197747866259) * (np.log(((((x[:,4])**(1)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((-13.239200359734376) * (np.sqrt(((x[:,2])**(-2)) * ((x[:,0])**(-1))))) + (((-138.13310492476958) * (np.sqrt((x[:,0])**(-1)))) + (((135.61096425748497) * (np.sin(((x[:,3])**(-3)) * ((x[:,2])**(-2))))) + (((-4.948285784912727) * (np.sqrt(((x[:,4])**(-3)) * ((x[:,0])**(-3))))) + (((-0.8029643423109167) * (np.cos((x[:,2])**(-1)))) + ((-9.393026966816285) * (np.tanh((((x[:,4])**(-2)) * ((x[:,3])**(2))) * ((x[:,0])**(-3)))))))))))) / ((1.0) + (((8.68913306645202e-7) * ((((x[:,4])**(-1)) * ((x[:,1])**(2))))) + ((22.000423023688455) * (((x[:,4])**(2)))))))"
"Id(((119.20036690550532) + (((-1.7525285783379276) * (Log(((((x4)^(3)) * ((x3)^(-2))) * ((x2)^(3))) * ((x0)^(3))))) + (((-9.729279016740322e-2) * (Sqrt((x0)^(1)))) + (((1.742577110301113) * (Sqrt(((x4)^(2)) * ((x3)^(2))))) + (((-20.5229059755025) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((-0.2337850741099503) * (Sqrt(((((x4)^(-2)) * ((x2)^(1))) * ((x1)^(1))) * ((x0)^(-1))))) + (((0.36349326585663394) * (Sqrt((((((x4)^(-1)) * ((x3)^(1))) * ((x2)^(2))) * ((x1)^(3))) * ((x0)^(-1))))) + (((-110.02836170172328) * (Sqrt(((((x4)^(1)) * ((x3)^(1))) * ((x2)^(-2))) * ((x0)^(-2))))) + (((-5.0525454409075304e-5) * (Sqrt((((((x4)^(-1)) * ((x3)^(3))) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-1))))) + ((0.6983274579005387) * (Sin((x2)^(-2))))))))))))) / ((1.0) + (((6.220305371122037e-2) * (Tanh(((((x4)^(-3)) * ((x3)^(-1))) * ((x1)^(3))) * ((x0)^(-3))))) + ((386.92403898990574) * (Tanh((x4)^(3)))))))","[[119.20036690550532,-1.7525285783379276,-9.729279016740322e-2,1.742577110301113,-20.5229059755025,-0.2337850741099503,0.36349326585663394,-110.02836170172328,-5.0525454409075304e-5,0.6983274579005387,6.220305371122037e-2,386.92403898990574]]","(((119.20036690550532) + (((-1.7525285783379276) * (np.log(((((x[:,4])**(3)) * ((x[:,3])**(-2))) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((-9.729279016740322e-2) * (np.sqrt((x[:,0])**(1)))) + (((1.742577110301113) * (np.sqrt(((x[:,4])**(2)) * ((x[:,3])**(2))))) + (((-20.5229059755025) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((-0.2337850741099503) * (np.sqrt(((((x[:,4])**(-2)) * ((x[:,2])**(1))) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((0.36349326585663394) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(1))) * ((x[:,2])**(2))) * ((x[:,1])**(3))) * ((x[:,0])**(-1))))) + (((-110.02836170172328) * (np.sqrt(((((x[:,4])**(1)) * ((x[:,3])**(1))) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + (((-5.0525454409075304e-5) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(3))) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))) + ((0.6983274579005387) * (np.sin((x[:,2])**(-2))))))))))))) / ((1.0) + (((6.220305371122037e-2) * (np.tanh(((((x[:,4])**(-3)) * ((x[:,3])**(-1))) * ((x[:,1])**(3))) * ((x[:,0])**(-3))))) + ((386.92403898990574) * (np.tanh((x[:,4])**(3)))))))"
"Id(((124.23575100232351) + (((-15.67837110896945) * (Tanh((x1)^(3)))) + (((-0.308652991579875) * (Sqrt(((((x4)^(-3)) * ((x3)^(1))) * ((x2)^(1))) * ((x0)^(-2))))) + (((13.523449221691099) * (Tanh((((((x4)^(1)) * ((x3)^(-2))) * ((x2)^(3))) * ((x1)^(1))) * ((x0)^(3))))) + (((-1.8377731189247513) * (Log(((x4)^(3)) * ((x0)^(1))))) + (((3.744321784478172) * (Id((x2)^(1)))) + (((-6.83381970159878e-4) * (Id((x0)^(1)))) + ((-14.437210213947598) * (Sqrt(((x2)^(-3)) * ((x0)^(-2)))))))))))) / ((1.0) + (((-7.474274741710474e-3) * (Sin(((x3)^(2)) * ((x2)^(-3))))) + (((184.75016335513337) * (Tanh((x4)^(3)))) + ((-1.3205314486819268e-2) * (Log((((x3)^(3)) * ((x2)^(-3))) * ((x0)^(-3)))))))))","[[124.23575100232351,-15.67837110896945,-0.308652991579875,13.523449221691099,-1.8377731189247513,3.744321784478172,-6.83381970159878e-4,-14.437210213947598,-7.474274741710474e-3,184.75016335513337,-1.3205314486819268e-2]]","(((124.23575100232351) + (((-15.67837110896945) * (np.tanh((x[:,1])**(3)))) + (((-0.308652991579875) * (np.sqrt(((((x[:,4])**(-3)) * ((x[:,3])**(1))) * ((x[:,2])**(1))) * ((x[:,0])**(-2))))) + (((13.523449221691099) * (np.tanh((((((x[:,4])**(1)) * ((x[:,3])**(-2))) * ((x[:,2])**(3))) * ((x[:,1])**(1))) * ((x[:,0])**(3))))) + (((-1.8377731189247513) * (np.log(((x[:,4])**(3)) * ((x[:,0])**(1))))) + (((3.744321784478172) * (((x[:,2])**(1)))) + (((-6.83381970159878e-4) * (((x[:,0])**(1)))) + ((-14.437210213947598) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2)))))))))))) / ((1.0) + (((-7.474274741710474e-3) * (np.sin(((x[:,3])**(2)) * ((x[:,2])**(-3))))) + (((184.75016335513337) * (np.tanh((x[:,4])**(3)))) + ((-1.3205314486819268e-2) * (np.log((((x[:,3])**(3)) * ((x[:,2])**(-3))) * ((x[:,0])**(-3)))))))))"
"Id(((154.83585938437383) + (((-2.577481206374217) * (Log((x2)^(2)))) + (((0.1787503805598164) * (Sqrt((x4)^(-1)))) + (((-20.917793333560624) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((3.4284099867036026) * (Log(((x3)^(1)) * ((x0)^(-2))))) + (((0.1787503805582974) * (Sqrt((x4)^(-1)))) + (((-5.7032278281558074e-2) * (Sqrt((x0)^(1)))) + (((-247.65493563949178) * (Id((x4)^(1)))) + (((0.47628464855257535) * (Cos((x1)^(3)))) + ((-0.6889354404729295) * (Cos((x2)^(-1))))))))))))) / ((1.0) + (((3.245494008310318e-2) * (Tanh((((x4)^(-3)) * ((x1)^(2))) * ((x0)^(-3))))) + ((3.0926244314090995e-2) * (Sqrt((((x3)^(1)) * ((x2)^(-3))) * ((x0)^(-2))))))))","[[154.83585938437383,-2.577481206374217,0.1787503805598164,-20.917793333560624,3.4284099867036026,0.1787503805582974,-5.7032278281558074e-2,-247.65493563949178,0.47628464855257535,-0.6889354404729295,3.245494008310318e-2,3.0926244314090995e-2]]","(((154.83585938437383) + (((-2.577481206374217) * (np.log((x[:,2])**(2)))) + (((0.1787503805598164) * (np.sqrt((x[:,4])**(-1)))) + (((-20.917793333560624) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((3.4284099867036026) * (np.log(((x[:,3])**(1)) * ((x[:,0])**(-2))))) + (((0.1787503805582974) * (np.sqrt((x[:,4])**(-1)))) + (((-5.7032278281558074e-2) * (np.sqrt((x[:,0])**(1)))) + (((-247.65493563949178) * (((x[:,4])**(1)))) + (((0.47628464855257535) * (np.cos((x[:,1])**(3)))) + ((-0.6889354404729295) * (np.cos((x[:,2])**(-1))))))))))))) / ((1.0) + (((3.245494008310318e-2) * (np.tanh((((x[:,4])**(-3)) * ((x[:,1])**(2))) * ((x[:,0])**(-3))))) + ((3.0926244314090995e-2) * (np.sqrt((((x[:,3])**(1)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))))))"
"Id((-3.2819524698911947e8) + (((-3.5418114676976824) * (Tanh((((((x3)^(-3)) * ((x0)^(1))) * ((x4)^(1))) * ((x2)^(-2))) * ((x1)^(2))))) + (((1.9395462951517182) * (Log((x3)^(3)))) + (((-34.019119974638585) * (Sin(((x4)^(-1)) * ((x0)^(-1))))) + (((-3.7393473537789377) * (Log(((x4)^(-1)) * ((x2)^(2))))) + (((3.880510517626286) * (Log(((x4)^(-2)) * ((x0)^(2))))) + (((144.26619210450966) * (Sin(((x3)^(-2)) * ((x2)^(-1))))) + (((3.2819541053076243e8) * (Cos((x4)^(3)))) + (((-24.574558915878107) * (Sqrt((((x2)^(-1)) * ((x1)^(1))) * ((x0)^(-1))))) + ((-6.427707948165484) * (Log((x0)^(3)))))))))))))","[[-3.2819524698911947e8,-3.5418114676976824,1.9395462951517182,-34.019119974638585,-3.7393473537789377,3.880510517626286,144.26619210450966,3.2819541053076243e8,-24.574558915878107,-6.427707948165484]]","((-3.2819524698911947e8) + (((-3.5418114676976824) * (np.tanh((((((x[:,3])**(-3)) * ((x[:,0])**(1))) * ((x[:,4])**(1))) * ((x[:,2])**(-2))) * ((x[:,1])**(2))))) + (((1.9395462951517182) * (np.log((x[:,3])**(3)))) + (((-34.019119974638585) * (np.sin(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((-3.7393473537789377) * (np.log(((x[:,4])**(-1)) * ((x[:,2])**(2))))) + (((3.880510517626286) * (np.log(((x[:,4])**(-2)) * ((x[:,0])**(2))))) + (((144.26619210450966) * (np.sin(((x[:,3])**(-2)) * ((x[:,2])**(-1))))) + (((3.2819541053076243e8) * (np.cos((x[:,4])**(3)))) + (((-24.574558915878107) * (np.sqrt((((x[:,2])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + ((-6.427707948165484) * (np.log((x[:,0])**(3)))))))))))))"
"Id(((86225.2066480361) + (((-4.500754758287099) * (Log((x0)^(2)))) + (((3.3952769813854093) * (Tanh((((x4)^(3)) * ((x3)^(2))) * ((x1)^(3))))) + (((-39.80843520937494) * (Tanh((((x4)^(-1)) * ((x2)^(1))) * ((x0)^(-1))))) + (((-4.677690910312716) * (Log((x2)^(3)))) + (((-21.755155680143087) * (Tanh(((((x4)^(-1)) * ((x3)^(1))) * ((x2)^(-1))) * ((x0)^(-2))))) + (((-86085.66204512707) * (Exp(((x4)^(2)) * ((x3)^(-1))))) + (((-1.8298062130967192) * (Log((x4)^(3)))) + ((4.955845541313743) * (Log(((x3)^(1)) * ((x2)^(2))))))))))))) / ((1.0) + (((0.6428869706201525) * (Tanh(((x2)^(-1)) * ((x0)^(-1))))) + ((3.578786113389515e-4) * (Sqrt((x1)^(2)))))))","[[86225.2066480361,-4.500754758287099,3.3952769813854093,-39.80843520937494,-4.677690910312716,-21.755155680143087,-86085.66204512707,-1.8298062130967192,4.955845541313743,0.6428869706201525,3.578786113389515e-4]]","(((86225.2066480361) + (((-4.500754758287099) * (np.log((x[:,0])**(2)))) + (((3.3952769813854093) * (np.tanh((((x[:,4])**(3)) * ((x[:,3])**(2))) * ((x[:,1])**(3))))) + (((-39.80843520937494) * (np.tanh((((x[:,4])**(-1)) * ((x[:,2])**(1))) * ((x[:,0])**(-1))))) + (((-4.677690910312716) * (np.log((x[:,2])**(3)))) + (((-21.755155680143087) * (np.tanh(((((x[:,4])**(-1)) * ((x[:,3])**(1))) * ((x[:,2])**(-1))) * ((x[:,0])**(-2))))) + (((-86085.66204512707) * (np.exp(((x[:,4])**(2)) * ((x[:,3])**(-1))))) + (((-1.8298062130967192) * (np.log((x[:,4])**(3)))) + ((4.955845541313743) * (np.log(((x[:,3])**(1)) * ((x[:,2])**(2))))))))))))) / ((1.0) + (((0.6428869706201525) * (np.tanh(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + ((3.578786113389515e-4) * (np.sqrt((x[:,1])**(2)))))))"
"Id(((153.3990070690932) + (((-4.76995337265074) * (Log((x3)^(-2)))) + (((-1.4902186473834163) * (Log((x2)^(3)))) + (((4.430136946114418) * (Sqrt(((x4)^(-1)) * ((x3)^(-1))))) + (((-1.0579775219412677) * (Cos((x2)^(-1)))) + (((-72.81198379427957) * (Sin((x2)^(3)))) + ((3.3829719601548605) * (Log((x0)^(-3)))))))))) / ((1.0) + (((-1920.79857002008) * (Id((((((x4)^(-1)) * ((x3)^(-3))) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-3))))) + (((0.20836036787287604) * (Sin(((x4)^(-1)) * ((x0)^(-1))))) + (((2.0289773242798597) * (Tanh(((x2)^(-1)) * ((x0)^(-1))))) + (((5.558553158958616e-12) * (Id(((x2)^(-1)) * ((x0)^(2))))) + ((36.75423780240031) * (Sin((x4)^(2))))))))))","[[153.3990070690932,-4.76995337265074,-1.4902186473834163,4.430136946114418,-1.0579775219412677,-72.81198379427957,3.3829719601548605,-1920.79857002008,0.20836036787287604,2.0289773242798597,5.558553158958616e-12,36.75423780240031]]","(((153.3990070690932) + (((-4.76995337265074) * (np.log((x[:,3])**(-2)))) + (((-1.4902186473834163) * (np.log((x[:,2])**(3)))) + (((4.430136946114418) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,3])**(-1))))) + (((-1.0579775219412677) * (np.cos((x[:,2])**(-1)))) + (((-72.81198379427957) * (np.sin((x[:,2])**(3)))) + ((3.3829719601548605) * (np.log((x[:,0])**(-3)))))))))) / ((1.0) + (((-1920.79857002008) * (((((((x[:,4])**(-1)) * ((x[:,3])**(-3))) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-3))))) + (((0.20836036787287604) * (np.sin(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((2.0289773242798597) * (np.tanh(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((5.558553158958616e-12) * ((((x[:,2])**(-1)) * ((x[:,0])**(2))))) + ((36.75423780240031) * (np.sin((x[:,4])**(2))))))))))"
"Id(((-84375.07530238581) + (((-35.925398991204176) * (Tanh(((x2)^(3)) * ((x0)^(2))))) + (((-12.329035189954656) * (Cos((x1)^(3)))) + (((2.8844648682154133) * (Log(((x3)^(1)) * ((x2)^(-2))))) + (((84560.98422598313) * (Cos((x4)^(2)))) + (((-2.3346655469667563e-4) * (Sqrt((x0)^(2)))) + (((9.478130338705963) * (Log((x0)^(-1)))) + (((-5.802748799231921) * (Log((x4)^(1)))) + ((-240.41130099342632) * (Id(((x2)^(-1)) * ((x0)^(-1))))))))))))) / ((1.0) + (((3560262.884869855) * (Sin(((((x3)^(-3)) * ((x2)^(2))) * ((x1)^(1))) * ((x4)^(2))))) + (((-0.10542680553558356) * (Cos((x1)^(3)))) + ((0.20070359031607565) * (Sin(((x4)^(-1)) * ((x0)^(-1)))))))))","[[-84375.07530238581,-35.925398991204176,-12.329035189954656,2.8844648682154133,84560.98422598313,-2.3346655469667563e-4,9.478130338705963,-5.802748799231921,-240.41130099342632,3560262.884869855,-0.10542680553558356,0.20070359031607565]]","(((-84375.07530238581) + (((-35.925398991204176) * (np.tanh(((x[:,2])**(3)) * ((x[:,0])**(2))))) + (((-12.329035189954656) * (np.cos((x[:,1])**(3)))) + (((2.8844648682154133) * (np.log(((x[:,3])**(1)) * ((x[:,2])**(-2))))) + (((84560.98422598313) * (np.cos((x[:,4])**(2)))) + (((-2.3346655469667563e-4) * (np.sqrt((x[:,0])**(2)))) + (((9.478130338705963) * (np.log((x[:,0])**(-1)))) + (((-5.802748799231921) * (np.log((x[:,4])**(1)))) + ((-240.41130099342632) * ((((x[:,2])**(-1)) * ((x[:,0])**(-1))))))))))))) / ((1.0) + (((3560262.884869855) * (np.sin(((((x[:,3])**(-3)) * ((x[:,2])**(2))) * ((x[:,1])**(1))) * ((x[:,4])**(2))))) + (((-0.10542680553558356) * (np.cos((x[:,1])**(3)))) + ((0.20070359031607565) * (np.sin(((x[:,4])**(-1)) * ((x[:,0])**(-1)))))))))"
"Id((-3.4154134439636004e8) + (((-7.889861994536584) * (Cos(((x3)^(-1)) * ((x2)^(-1))))) + (((2.188324440360032) * (Log(((x2)^(-3)) * ((x0)^(3))))) + (((-24.833509016985438) * (Sqrt((((x2)^(-1)) * ((x1)^(1))) * ((x0)^(-1))))) + (((-1.6291368744992152) * (Log(((x4)^(3)) * ((x0)^(-3))))) + (((-34.85574182116491) * (Sin(((x4)^(-1)) * ((x0)^(-1))))) + (((0.7245510873105947) * (Cos((x1)^(3)))) + (((-0.35640524863414047) * (Cos((x3)^(3)))) + (((3.415415269032095e8) * (Cos((x4)^(3)))) + (((1.5586600130439545) * (Sqrt((x3)^(1)))) + ((7.788568028382803) * (Log((x0)^(-3))))))))))))))","[[-3.4154134439636004e8,-7.889861994536584,2.188324440360032,-24.833509016985438,-1.6291368744992152,-34.85574182116491,0.7245510873105947,-0.35640524863414047,3.415415269032095e8,1.5586600130439545,7.788568028382803]]","((-3.4154134439636004e8) + (((-7.889861994536584) * (np.cos(((x[:,3])**(-1)) * ((x[:,2])**(-1))))) + (((2.188324440360032) * (np.log(((x[:,2])**(-3)) * ((x[:,0])**(3))))) + (((-24.833509016985438) * (np.sqrt((((x[:,2])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((-1.6291368744992152) * (np.log(((x[:,4])**(3)) * ((x[:,0])**(-3))))) + (((-34.85574182116491) * (np.sin(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((0.7245510873105947) * (np.cos((x[:,1])**(3)))) + (((-0.35640524863414047) * (np.cos((x[:,3])**(3)))) + (((3.415415269032095e8) * (np.cos((x[:,4])**(3)))) + (((1.5586600130439545) * (np.sqrt((x[:,3])**(1)))) + ((7.788568028382803) * (np.log((x[:,0])**(-3))))))))))))))"
"Id(((-3.58339951744989e7) + (((-5.993034963007802) * (Sin((((x4)^(-3)) * ((x1)^(1))) * ((x0)^(-3))))) + (((6.8068880520229524e-3) * (Cos(((x3)^(-3)) * ((x0)^(2))))) + (((-2.3741849936081447) * (Log((((x4)^(2)) * ((x2)^(2))) * ((x0)^(3))))) + (((0.28235830755402946) * (Log((((x4)^(1)) * ((x2)^(-2))) * ((x0)^(3))))) + (((3.8830783536697844) * (Sqrt((x3)^(1)))) + (((3.583415037749822e7) * (Exp((x0)^(-3)))) + (((-1456.7996415224295) * (Id((x4)^(2)))) + (((-8.143214362896978e-2) * (Sqrt((x0)^(1)))) + ((4.80602658555312) * (Log((x3)^(-2))))))))))))) / ((1.0) + (((0.1549648594224522) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + ((1.5880083625848822) * (Sin(((x2)^(-1)) * ((x0)^(-1))))))))","[[-3.58339951744989e7,-5.993034963007802,6.8068880520229524e-3,-2.3741849936081447,0.28235830755402946,3.8830783536697844,3.583415037749822e7,-1456.7996415224295,-8.143214362896978e-2,4.80602658555312,0.1549648594224522,1.5880083625848822]]","(((-3.58339951744989e7) + (((-5.993034963007802) * (np.sin((((x[:,4])**(-3)) * ((x[:,1])**(1))) * ((x[:,0])**(-3))))) + (((6.8068880520229524e-3) * (np.cos(((x[:,3])**(-3)) * ((x[:,0])**(2))))) + (((-2.3741849936081447) * (np.log((((x[:,4])**(2)) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((0.28235830755402946) * (np.log((((x[:,4])**(1)) * ((x[:,2])**(-2))) * ((x[:,0])**(3))))) + (((3.8830783536697844) * (np.sqrt((x[:,3])**(1)))) + (((3.583415037749822e7) * (np.exp((x[:,0])**(-3)))) + (((-1456.7996415224295) * (((x[:,4])**(2)))) + (((-8.143214362896978e-2) * (np.sqrt((x[:,0])**(1)))) + ((4.80602658555312) * (np.log((x[:,3])**(-2))))))))))))) / ((1.0) + (((0.1549648594224522) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + ((1.5880083625848822) * (np.sin(((x[:,2])**(-1)) * ((x[:,0])**(-1))))))))"
"Id((-3.093556756377229e8) + (((3.093558651737567e8) * (Cos((x4)^(3)))) + (((1.6324836997676977) * (Sqrt((x3)^(1)))) + (((-2.2490429923637474) * (Log(((x2)^(3)) * ((x4)^(-2))))) + (((105.07463372253845) * (Id(((x2)^(-2)) * ((x3)^(-3))))) + (((-44.09951085389259) * (Sqrt(((x4)^(-1)) * ((x0)^(-1))))) + (((-4.125128591470286) * (Log((x4)^(3)))) + (((-7.336305633167252) * (Log((x0)^(2)))) + ((-24.656903869186763) * (Sqrt((((x2)^(-1)) * ((x0)^(-1))) * ((x1)^(1)))))))))))))","[[-3.093556756377229e8,3.093558651737567e8,1.6324836997676977,-2.2490429923637474,105.07463372253845,-44.09951085389259,-4.125128591470286,-7.336305633167252,-24.656903869186763]]","((-3.093556756377229e8) + (((3.093558651737567e8) * (np.cos((x[:,4])**(3)))) + (((1.6324836997676977) * (np.sqrt((x[:,3])**(1)))) + (((-2.2490429923637474) * (np.log(((x[:,2])**(3)) * ((x[:,4])**(-2))))) + (((105.07463372253845) * ((((x[:,2])**(-2)) * ((x[:,3])**(-3))))) + (((-44.09951085389259) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((-4.125128591470286) * (np.log((x[:,4])**(3)))) + (((-7.336305633167252) * (np.log((x[:,0])**(2)))) + ((-24.656903869186763) * (np.sqrt((((x[:,2])**(-1)) * ((x[:,0])**(-1))) * ((x[:,1])**(1)))))))))))))"
"Id((171.87319299876907) + (((15.285054211750264) * (Id((((x0)^(-3)) * ((x2)^(-3))) * ((x4)^(-1))))) + (((-1.4886880850808743e7) * (Sin(((((x1)^(2)) * ((x3)^(-2))) * ((x4)^(3))) * ((x2)^(2))))) + (((-1.8804992278558998) * (Tanh((x1)^(3)))) + (((-180.16009629433438) * (Sqrt((x3)^(-2)))) + (((-3.393603406406432) * (Log((x0)^(3)))) + (((2.860290308397932) * (Log(((x2)^(-2)) * ((x4)^(-2))))) + (((1.4969635335548934e7) * (Sin((x0)^(-3)))) + (((-26.764060372672528) * (Sin(((x4)^(-1)) * ((x0)^(-1))))) + ((-244.78956307324407) * (Sqrt(((x0)^(-2)) * ((x2)^(-2))))))))))))))","[[171.87319299876907,15.285054211750264,-1.4886880850808743e7,-1.8804992278558998,-180.16009629433438,-3.393603406406432,2.860290308397932,1.4969635335548934e7,-26.764060372672528,-244.78956307324407]]","((171.87319299876907) + (((15.285054211750264) * (((((x[:,0])**(-3)) * ((x[:,2])**(-3))) * ((x[:,4])**(-1))))) + (((-1.4886880850808743e7) * (np.sin(((((x[:,1])**(2)) * ((x[:,3])**(-2))) * ((x[:,4])**(3))) * ((x[:,2])**(2))))) + (((-1.8804992278558998) * (np.tanh((x[:,1])**(3)))) + (((-180.16009629433438) * (np.sqrt((x[:,3])**(-2)))) + (((-3.393603406406432) * (np.log((x[:,0])**(3)))) + (((2.860290308397932) * (np.log(((x[:,2])**(-2)) * ((x[:,4])**(-2))))) + (((1.4969635335548934e7) * (np.sin((x[:,0])**(-3)))) + (((-26.764060372672528) * (np.sin(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + ((-244.78956307324407) * (np.sqrt(((x[:,0])**(-2)) * ((x[:,2])**(-2))))))))))))))"
"Id(((138.38373069694302) + ((-44769.916382916635) * (Id((x4)^(3))))) / ((1.0) + (((0.26731655071655425) * (Sin((((x4)^(-2)) * ((x2)^(1))) * ((x0)^(-2))))) + (((1.1076419474016768) * (Id((x4)^(1)))) + (((2.89643802657284e-3) * (Sqrt(((x2)^(1)) * ((x0)^(1))))) + (((-4548.671130543769) * (Id(((x4)^(2)) * ((x0)^(-1))))) + (((5637.7309640426665) * (Id(((x2)^(1)) * ((x3)^(-3))))) + (((0.15901367537900213) * (Sqrt(((x0)^(-2)) * ((x2)^(-3))))) + ((1.1692520714925212e-4) * (Sqrt(((x4)^(1)) * ((x0)^(2)))))))))))))","[[138.38373069694302,-44769.916382916635,0.26731655071655425,1.1076419474016768,2.89643802657284e-3,-4548.671130543769,5637.7309640426665,0.15901367537900213,1.1692520714925212e-4]]","(((138.38373069694302) + ((-44769.916382916635) * (((x[:,4])**(3))))) / ((1.0) + (((0.26731655071655425) * (np.sin((((x[:,4])**(-2)) * ((x[:,2])**(1))) * ((x[:,0])**(-2))))) + (((1.1076419474016768) * (((x[:,4])**(1)))) + (((2.89643802657284e-3) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(1))))) + (((-4548.671130543769) * ((((x[:,4])**(2)) * ((x[:,0])**(-1))))) + (((5637.7309640426665) * ((((x[:,2])**(1)) * ((x[:,3])**(-3))))) + (((0.15901367537900213) * (np.sqrt(((x[:,0])**(-2)) * ((x[:,2])**(-3))))) + ((1.1692520714925212e-4) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(2)))))))))))))"
"Id(((134.88303702356166) + (((0.9141154513998886) * (Cos((x1)^(3)))) + (((0.6537609603054952) * (Sqrt((x4)^(-1)))) + (((2.83611193385795) * (Tanh((((((x4)^(-2)) * ((x3)^(1))) * ((x2)^(-3))) * ((x1)^(1))) * ((x0)^(-3))))) + (((1.9015199766994417) * (Log((((x3)^(2)) * ((x2)^(-2))) * ((x0)^(-2))))) + (((-0.18928900374931884) * (Sqrt((x0)^(1)))) + (((-8.372446090942165e-2) * (Sqrt((((x3)^(2)) * ((x2)^(-2))) * ((x0)^(-1))))) + (((-1.6507933387483078) * (Sqrt(((x1)^(3)) * ((x0)^(-1))))) + (((3.39325329100922) * (Tanh(((x1)^(3)) * ((x0)^(-1))))) + ((-10.777921965565284) * (Tanh((((x4)^(-1)) * ((x2)^(-2))) * ((x0)^(-2)))))))))))))) / ((1.0) + (((300.7509386303665) * (Sqrt(((x4)^(3)) * ((x3)^(-2))))) + ((0.18039994573850038) * (Tanh(((x4)^(-1)) * ((x0)^(-1))))))))","[[134.88303702356166,0.9141154513998886,0.6537609603054952,2.83611193385795,1.9015199766994417,-0.18928900374931884,-8.372446090942165e-2,-1.6507933387483078,3.39325329100922,-10.777921965565284,300.7509386303665,0.18039994573850038]]","(((134.88303702356166) + (((0.9141154513998886) * (np.cos((x[:,1])**(3)))) + (((0.6537609603054952) * (np.sqrt((x[:,4])**(-1)))) + (((2.83611193385795) * (np.tanh((((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,2])**(-3))) * ((x[:,1])**(1))) * ((x[:,0])**(-3))))) + (((1.9015199766994417) * (np.log((((x[:,3])**(2)) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + (((-0.18928900374931884) * (np.sqrt((x[:,0])**(1)))) + (((-8.372446090942165e-2) * (np.sqrt((((x[:,3])**(2)) * ((x[:,2])**(-2))) * ((x[:,0])**(-1))))) + (((-1.6507933387483078) * (np.sqrt(((x[:,1])**(3)) * ((x[:,0])**(-1))))) + (((3.39325329100922) * (np.tanh(((x[:,1])**(3)) * ((x[:,0])**(-1))))) + ((-10.777921965565284) * (np.tanh((((x[:,4])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-2)))))))))))))) / ((1.0) + (((300.7509386303665) * (np.sqrt(((x[:,4])**(3)) * ((x[:,3])**(-2))))) + ((0.18039994573850038) * (np.tanh(((x[:,4])**(-1)) * ((x[:,0])**(-1))))))))"
"Id(((147.1487276178492) + (((3.3386503553698645) * (Tanh((((x4)^(-3)) * ((x0)^(-2))) * ((x2)^(1))))) + (((-9.059065331473715e-3) * (Sqrt(((x4)^(1)) * ((x0)^(2))))) + (((-15.0227589137743) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((-31.21541314566456) * (Sqrt(((x2)^(-3)) * ((x0)^(-2))))) + (((-14.904829005193172) * (Cos(((x2)^(-3)) * ((x0)^(-2))))) + (((2.202608299266135) * (Log((((x3)^(2)) * ((x2)^(-3))) * ((x0)^(-2))))) + ((-0.40611843491745736) * (Sqrt((x1)^(2))))))))))) / ((1.0) + ((14591.69306319484) * (Tanh(((x4)^(3)) * ((x3)^(-1)))))))","[[147.1487276178492,3.3386503553698645,-9.059065331473715e-3,-15.0227589137743,-31.21541314566456,-14.904829005193172,2.202608299266135,-0.40611843491745736,14591.69306319484]]","(((147.1487276178492) + (((3.3386503553698645) * (np.tanh((((x[:,4])**(-3)) * ((x[:,0])**(-2))) * ((x[:,2])**(1))))) + (((-9.059065331473715e-3) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(2))))) + (((-15.0227589137743) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((-31.21541314566456) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((-14.904829005193172) * (np.cos(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((2.202608299266135) * (np.log((((x[:,3])**(2)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))) + ((-0.40611843491745736) * (np.sqrt((x[:,1])**(2))))))))))) / ((1.0) + ((14591.69306319484) * (np.tanh(((x[:,4])**(3)) * ((x[:,3])**(-1)))))))"
"Id(((124.67570148199168) + (((-31832.3430834894) * (Sin((x4)^(3)))) + (((-3.0720197461928613) * (Sqrt((((x4)^(-2)) * ((x3)^(1))) * ((x0)^(-2))))) + (((-2.764970194853036) * (Log((((x3)^(-3)) * ((x2)^(3))) * ((x0)^(3))))) + (((-13.040974693349638) * (Sqrt((((x2)^(-1)) * ((x1)^(1))) * ((x0)^(-1))))) + (((1.4463082070003233) * (Log((x4)^(-3)))) + (((-1.6538987237322917) * (Cos((x2)^(-3)))) + ((-9.012556338754904e-4) * (Sqrt((((((x4)^(-1)) * ((x3)^(2))) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-1)))))))))))) / ((1.0) + ((6.116456735826555e-7) * (Sqrt(((x3)^(1)) * ((x0)^(2)))))))","[[124.67570148199168,-31832.3430834894,-3.0720197461928613,-2.764970194853036,-13.040974693349638,1.4463082070003233,-1.6538987237322917,-9.012556338754904e-4,6.116456735826555e-7]]","(((124.67570148199168) + (((-31832.3430834894) * (np.sin((x[:,4])**(3)))) + (((-3.0720197461928613) * (np.sqrt((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,0])**(-2))))) + (((-2.764970194853036) * (np.log((((x[:,3])**(-3)) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((-13.040974693349638) * (np.sqrt((((x[:,2])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((1.4463082070003233) * (np.log((x[:,4])**(-3)))) + (((-1.6538987237322917) * (np.cos((x[:,2])**(-3)))) + ((-9.012556338754904e-4) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-1)))))))))))) / ((1.0) + ((6.116456735826555e-7) * (np.sqrt(((x[:,3])**(1)) * ((x[:,0])**(2)))))))"
"Id(((110.7541175927191) + (((-4.042725345712284) * (Sqrt(((((x3)^(1)) * ((x2)^(-2))) * ((x1)^(1))) * ((x0)^(-2))))) + (((1.3253047230161567e-3) * (Sqrt((((x4)^(-1)) * ((x2)^(3))) * ((x0)^(2))))) + (((-1.2238769735682255e-2) * (Sqrt((((x3)^(-1)) * ((x2)^(1))) * ((x0)^(2))))) + (((-11.613148306346954) * (Sqrt((((x4)^(-1)) * ((x3)^(-1))) * ((x2)^(2))))) + (((-1.614173309966052) * (Sqrt(((x4)^(1)) * ((x0)^(1))))) + (((30.976782936273388) * (Tanh(((x4)^(1)) * ((x0)^(1))))) + (((5.0719902197793104e-5) * (Id((((x4)^(1)) * ((x2)^(1))) * ((x0)^(2))))) + ((-6.07929300718426e-4) * (Sqrt(((x4)^(-2)) * ((x1)^(2))))))))))))) / ((1.0) + (((1.336103214620917e-4) * (Sqrt(((x2)^(2)) * ((x0)^(2))))) + ((1816.7059698731764) * (Id(((x4)^(1)) * ((x3)^(-2))))))))","[[110.7541175927191,-4.042725345712284,1.3253047230161567e-3,-1.2238769735682255e-2,-11.613148306346954,-1.614173309966052,30.976782936273388,5.0719902197793104e-5,-6.07929300718426e-4,1.336103214620917e-4,1816.7059698731764]]","(((110.7541175927191) + (((-4.042725345712284) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + (((1.3253047230161567e-3) * (np.sqrt((((x[:,4])**(-1)) * ((x[:,2])**(3))) * ((x[:,0])**(2))))) + (((-1.2238769735682255e-2) * (np.sqrt((((x[:,3])**(-1)) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + (((-11.613148306346954) * (np.sqrt((((x[:,4])**(-1)) * ((x[:,3])**(-1))) * ((x[:,2])**(2))))) + (((-1.614173309966052) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(1))))) + (((30.976782936273388) * (np.tanh(((x[:,4])**(1)) * ((x[:,0])**(1))))) + (((5.0719902197793104e-5) * (((((x[:,4])**(1)) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + ((-6.07929300718426e-4) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,1])**(2))))))))))))) / ((1.0) + (((1.336103214620917e-4) * (np.sqrt(((x[:,2])**(2)) * ((x[:,0])**(2))))) + ((1816.7059698731764) * ((((x[:,4])**(1)) * ((x[:,3])**(-2))))))))"
"Id(((34860.95441936271) + (((0.3320138001654115) * (Sin((x0)^(3)))) + (((294.59610268051716) * (Sqrt((x0)^(-1)))) + (((547.7437030132426) * (Tanh((((x4)^(-1)) * ((x2)^(-2))) * ((x0)^(-3))))) + (((-0.30745045700357243) * (Sqrt((x0)^(1)))) + (((-34774.632427655524) * (Exp((x4)^(3)))) + (((-9.745356900996656) * (Tanh(((x3)^(3)) * ((x2)^(3))))) + (((-161.78702930365012) * (Tanh(((x2)^(-1)) * ((x0)^(-1))))) + (((1.4795115158435304e-3) * (Sqrt(((x2)^(1)) * ((x0)^(2))))) + (((-0.9972878011462919) * (Log(((x4)^(-1)) * ((x2)^(2))))) + (((-2.7040150210486886) * (Log((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(2))))) + (((-2.4988912510832284) * (Sin((((x4)^(-2)) * ((x1)^(1))) * ((x0)^(-2))))) + ((-0.3387171859363638) * (Sqrt(((((x4)^(-1)) * ((x2)^(-1))) * ((x1)^(2))) * ((x0)^(-1))))))))))))))))) / ((1.0) + ((0.20349232937533568) * (Tanh(((x4)^(-2)) * ((x0)^(-2)))))))","[[34860.95441936271,0.3320138001654115,294.59610268051716,547.7437030132426,-0.30745045700357243,-34774.632427655524,-9.745356900996656,-161.78702930365012,1.4795115158435304e-3,-0.9972878011462919,-2.7040150210486886,-2.4988912510832284,-0.3387171859363638,0.20349232937533568]]","(((34860.95441936271) + (((0.3320138001654115) * (np.sin((x[:,0])**(3)))) + (((294.59610268051716) * (np.sqrt((x[:,0])**(-1)))) + (((547.7437030132426) * (np.tanh((((x[:,4])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))))) + (((-0.30745045700357243) * (np.sqrt((x[:,0])**(1)))) + (((-34774.632427655524) * (np.exp((x[:,4])**(3)))) + (((-9.745356900996656) * (np.tanh(((x[:,3])**(3)) * ((x[:,2])**(3))))) + (((-161.78702930365012) * (np.tanh(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((1.4795115158435304e-3) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(2))))) + (((-0.9972878011462919) * (np.log(((x[:,4])**(-1)) * ((x[:,2])**(2))))) + (((-2.7040150210486886) * (np.log((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))))) + (((-2.4988912510832284) * (np.sin((((x[:,4])**(-2)) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + ((-0.3387171859363638) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,2])**(-1))) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))))))))))))))) / ((1.0) + ((0.20349232937533568) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2)))))))"
"Id(((119.74312609782851) + (((-5.417517107792792e-4) * (Id((x0)^(1)))) + (((-5.178880810780234) * (Log((((x4)^(3)) * ((x2)^(1))) * ((x0)^(1))))) + (((4.984920103663935) * (Log((x4)^(2)))) + (((21.652834549303826) * (Sqrt(((x4)^(1)) * ((x3)^(1))))) + (((-63.256951840285254) * (Sqrt(((x4)^(2)) * ((x3)^(1))))) + (((-2.7539796748825793) * (Sqrt(((((x4)^(1)) * ((x3)^(2))) * ((x2)^(-3))) * ((x0)^(-2))))) + (((-19.53711145746082) * (Tanh(((x4)^(-3)) * ((x0)^(-3))))) + ((0.7186922136066318) * (Cos((x1)^(3)))))))))))) / ((1.0) + (((4.30310825018525e-2) * (Tanh(((((x3)^(-3)) * ((x2)^(2))) * ((x1)^(3))) * ((x0)^(1))))) + ((1.6382184313673276e-3) * (Sqrt(((((x4)^(-1)) * ((x2)^(-1))) * ((x1)^(2))) * ((x0)^(-1))))))))","[[119.74312609782851,-5.417517107792792e-4,-5.178880810780234,4.984920103663935,21.652834549303826,-63.256951840285254,-2.7539796748825793,-19.53711145746082,0.7186922136066318,4.30310825018525e-2,1.6382184313673276e-3]]","(((119.74312609782851) + (((-5.417517107792792e-4) * (((x[:,0])**(1)))) + (((-5.178880810780234) * (np.log((((x[:,4])**(3)) * ((x[:,2])**(1))) * ((x[:,0])**(1))))) + (((4.984920103663935) * (np.log((x[:,4])**(2)))) + (((21.652834549303826) * (np.sqrt(((x[:,4])**(1)) * ((x[:,3])**(1))))) + (((-63.256951840285254) * (np.sqrt(((x[:,4])**(2)) * ((x[:,3])**(1))))) + (((-2.7539796748825793) * (np.sqrt(((((x[:,4])**(1)) * ((x[:,3])**(2))) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))) + (((-19.53711145746082) * (np.tanh(((x[:,4])**(-3)) * ((x[:,0])**(-3))))) + ((0.7186922136066318) * (np.cos((x[:,1])**(3)))))))))))) / ((1.0) + (((4.30310825018525e-2) * (np.tanh(((((x[:,3])**(-3)) * ((x[:,2])**(2))) * ((x[:,1])**(3))) * ((x[:,0])**(1))))) + ((1.6382184313673276e-3) * (np.sqrt(((((x[:,4])**(-1)) * ((x[:,2])**(-1))) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))))))"
"Id(((117.45702052575423) + (((11.182385691772936) * (Tanh(((((x4)^(-2)) * ((x3)^(2))) * ((x2)^(-2))) * ((x0)^(-3))))) + (((-3.569878307643875) * (Tanh(((((x4)^(-1)) * ((x3)^(2))) * ((x2)^(-2))) * ((x0)^(-3))))) + (((2.568342873787415e-4) * (Sqrt((((x4)^(-2)) * ((x2)^(1))) * ((x0)^(1))))) + (((-0.22525190682625063) * (Sqrt((((x4)^(-3)) * ((x2)^(3))) * ((x0)^(-1))))) + (((-114184.18347682084) * (Tanh(((x4)^(2)) * ((x3)^(-1))))) + (((-5.347436103178815e-5) * (Sqrt(((x3)^(-1)) * ((x0)^(3))))) + (((-2.0583458899459757) * (Tanh((((x4)^(-3)) * ((x3)^(-3))) * ((x2)^(1))))) + (((-0.9456159734695897) * (Cos((x2)^(-1)))) + ((6.317134560389615) * (Tanh(((((x4)^(-2)) * ((x3)^(3))) * ((x2)^(-2))) * ((x0)^(-3)))))))))))))) / ((1.0) + ((0.11046493314184724) * (Sqrt(((x2)^(-3)) * ((x0)^(-2)))))))","[[117.45702052575423,11.182385691772936,-3.569878307643875,2.568342873787415e-4,-0.22525190682625063,-114184.18347682084,-5.347436103178815e-5,-2.0583458899459757,-0.9456159734695897,6.317134560389615,0.11046493314184724]]","(((117.45702052575423) + (((11.182385691772936) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))))) + (((-3.569878307643875) * (np.tanh(((((x[:,4])**(-1)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))))) + (((2.568342873787415e-4) * (np.sqrt((((x[:,4])**(-2)) * ((x[:,2])**(1))) * ((x[:,0])**(1))))) + (((-0.22525190682625063) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,2])**(3))) * ((x[:,0])**(-1))))) + (((-114184.18347682084) * (np.tanh(((x[:,4])**(2)) * ((x[:,3])**(-1))))) + (((-5.347436103178815e-5) * (np.sqrt(((x[:,3])**(-1)) * ((x[:,0])**(3))))) + (((-2.0583458899459757) * (np.tanh((((x[:,4])**(-3)) * ((x[:,3])**(-3))) * ((x[:,2])**(1))))) + (((-0.9456159734695897) * (np.cos((x[:,2])**(-1)))) + ((6.317134560389615) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,3])**(3))) * ((x[:,2])**(-2))) * ((x[:,0])**(-3)))))))))))))) / ((1.0) + ((0.11046493314184724) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2)))))))"
"Id(((175.28128649394264) + (((-8.256571170093576) * (Log((((x4)^(1)) * ((x3)^(-1))) * ((x0)^(2))))) + (((-13.401035876968315) * (Cos(((x2)^(-3)) * ((x0)^(-2))))) + (((0.8256516704725954) * (Sin((x2)^(-2)))) + (((-41.67812137976762) * (Tanh(((x4)^(-1)) * ((x0)^(-1))))) + (((44.001785453921855) * (Sqrt(((x4)^(-1)) * ((x3)^(-3))))) + (((0.36447039839183315) * (Sqrt((x4)^(-1)))) + (((1.6702592088657902) * (Log((((x4)^(2)) * ((x2)^(-2))) * ((x0)^(2))))) + (((-108.96173456338032) * (Sqrt((x0)^(-1)))) + ((-1.5148939032693238e-9) * (Sqrt(((x4)^(-2)) * ((x0)^(3)))))))))))))) / ((1.0) + (((30.711664627205906) * (Tanh((x4)^(2)))) + (((9.306682432546967e-3) * (Sqrt(((((x3)^(1)) * ((x2)^(-3))) * ((x1)^(1))) * ((x0)^(-2))))) + ((-1.0433554347781815e-2) * (Sqrt((((x4)^(2)) * ((x0)^(1))) * ((x2)^(-1)))))))))","[[175.28128649394264,-8.256571170093576,-13.401035876968315,0.8256516704725954,-41.67812137976762,44.001785453921855,0.36447039839183315,1.6702592088657902,-108.96173456338032,-1.5148939032693238e-9,30.711664627205906,9.306682432546967e-3,-1.0433554347781815e-2]]","(((175.28128649394264) + (((-8.256571170093576) * (np.log((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,0])**(2))))) + (((-13.401035876968315) * (np.cos(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((0.8256516704725954) * (np.sin((x[:,2])**(-2)))) + (((-41.67812137976762) * (np.tanh(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((44.001785453921855) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,3])**(-3))))) + (((0.36447039839183315) * (np.sqrt((x[:,4])**(-1)))) + (((1.6702592088657902) * (np.log((((x[:,4])**(2)) * ((x[:,2])**(-2))) * ((x[:,0])**(2))))) + (((-108.96173456338032) * (np.sqrt((x[:,0])**(-1)))) + ((-1.5148939032693238e-9) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(3)))))))))))))) / ((1.0) + (((30.711664627205906) * (np.tanh((x[:,4])**(2)))) + (((9.306682432546967e-3) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-3))) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + ((-1.0433554347781815e-2) * (np.sqrt((((x[:,4])**(2)) * ((x[:,0])**(1))) * ((x[:,2])**(-1)))))))))"
"Id(((137.2305352306213) + (((-0.9809016869667273) * (Cos((x2)^(-1)))) + (((-5.709581647447903) * (Tanh(((((x4)^(3)) * ((x3)^(-1))) * ((x2)^(2))) * ((x0)^(3))))) + (((-3.5115290943329125) * (Sqrt((((x4)^(1)) * ((x2)^(1))) * ((x0)^(1))))) + (((-47291.24482320045) * (Tanh((x4)^(3)))) + (((-0.6788457861802719) * (Log(((x4)^(-1)) * ((x2)^(1))))) + (((-12.179095123565562) * (Sin(((((x4)^(-2)) * ((x3)^(-1))) * ((x2)^(2))) * ((x0)^(-1))))) + (((-1.5443561840091071) * (Sqrt(((((x4)^(-3)) * ((x2)^(2))) * ((x1)^(1))) * ((x0)^(-2))))) + (((-4.1985207514109835e-2) * (Sqrt(((x3)^(-2)) * ((x0)^(2))))) + (((0.21950002751771835) * (Sqrt(((x4)^(-2)) * ((x3)^(-2))))) + ((-0.23094127355504646) * (Sqrt(((x4)^(-3)) * ((x0)^(-2))))))))))))))) / ((1.0) + (((-1.76589051080666e-3) * (Sqrt(((((x3)^(3)) * ((x2)^(1))) * ((x1)^(1))) * ((x0)^(-1))))) + (((-0.1940149023284341) * (Id(((((x4)^(3)) * ((x2)^(3))) * ((x1)^(2))) * ((x0)^(1))))) + ((4.25528505053208e-2) * (Sqrt(((((x3)^(1)) * ((x2)^(-2))) * ((x1)^(1))) * ((x0)^(-2)))))))))","[[137.2305352306213,-0.9809016869667273,-5.709581647447903,-3.5115290943329125,-47291.24482320045,-0.6788457861802719,-12.179095123565562,-1.5443561840091071,-4.1985207514109835e-2,0.21950002751771835,-0.23094127355504646,-1.76589051080666e-3,-0.1940149023284341,4.25528505053208e-2]]","(((137.2305352306213) + (((-0.9809016869667273) * (np.cos((x[:,2])**(-1)))) + (((-5.709581647447903) * (np.tanh(((((x[:,4])**(3)) * ((x[:,3])**(-1))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((-3.5115290943329125) * (np.sqrt((((x[:,4])**(1)) * ((x[:,2])**(1))) * ((x[:,0])**(1))))) + (((-47291.24482320045) * (np.tanh((x[:,4])**(3)))) + (((-0.6788457861802719) * (np.log(((x[:,4])**(-1)) * ((x[:,2])**(1))))) + (((-12.179095123565562) * (np.sin(((((x[:,4])**(-2)) * ((x[:,3])**(-1))) * ((x[:,2])**(2))) * ((x[:,0])**(-1))))) + (((-1.5443561840091071) * (np.sqrt(((((x[:,4])**(-3)) * ((x[:,2])**(2))) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + (((-4.1985207514109835e-2) * (np.sqrt(((x[:,3])**(-2)) * ((x[:,0])**(2))))) + (((0.21950002751771835) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,3])**(-2))))) + ((-0.23094127355504646) * (np.sqrt(((x[:,4])**(-3)) * ((x[:,0])**(-2))))))))))))))) / ((1.0) + (((-1.76589051080666e-3) * (np.sqrt(((((x[:,3])**(3)) * ((x[:,2])**(1))) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((-0.1940149023284341) * ((((((x[:,4])**(3)) * ((x[:,2])**(3))) * ((x[:,1])**(2))) * ((x[:,0])**(1))))) + ((4.25528505053208e-2) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,1])**(1))) * ((x[:,0])**(-2)))))))))"
"Id(((133.56445696792497) + (((-99.80614506105731) * (Tanh(((x2)^(-1)) * ((x0)^(-1))))) + (((-10.37593088136762) * (Tanh((((x3)^(-1)) * ((x2)^(2))) * ((x0)^(1))))) + (((-13.140580683684309) * (Sqrt(((x3)^(-3)) * ((x0)^(1))))) + (((0.19731498318664364) * (Sqrt(((x4)^(-2)) * ((x3)^(-2))))) + (((-42889.50529183616) * (Sin((x4)^(3)))) + (((0.43609404344581026) * (Log((x4)^(-2)))) + ((-1.2939810706938228) * (Sin((x2)^(-1))))))))))) / ((1.0) + (((0.1273892480189034) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((6.583317645196622e-6) * (Id((x0)^(1)))) + (((1.7095230771389455e-4) * (Id((x1)^(1)))) + ((5.6849008861649425e-2) * (Tanh(((((x4)^(3)) * ((x3)^(-2))) * ((x2)^(1))) * ((x0)^(3))))))))))","[[133.56445696792497,-99.80614506105731,-10.37593088136762,-13.140580683684309,0.19731498318664364,-42889.50529183616,0.43609404344581026,-1.2939810706938228,0.1273892480189034,6.583317645196622e-6,1.7095230771389455e-4,5.6849008861649425e-2]]","(((133.56445696792497) + (((-99.80614506105731) * (np.tanh(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((-10.37593088136762) * (np.tanh((((x[:,3])**(-1)) * ((x[:,2])**(2))) * ((x[:,0])**(1))))) + (((-13.140580683684309) * (np.sqrt(((x[:,3])**(-3)) * ((x[:,0])**(1))))) + (((0.19731498318664364) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,3])**(-2))))) + (((-42889.50529183616) * (np.sin((x[:,4])**(3)))) + (((0.43609404344581026) * (np.log((x[:,4])**(-2)))) + ((-1.2939810706938228) * (np.sin((x[:,2])**(-1))))))))))) / ((1.0) + (((0.1273892480189034) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((6.583317645196622e-6) * (((x[:,0])**(1)))) + (((1.7095230771389455e-4) * (((x[:,1])**(1)))) + ((5.6849008861649425e-2) * (np.tanh(((((x[:,4])**(3)) * ((x[:,3])**(-2))) * ((x[:,2])**(1))) * ((x[:,0])**(3))))))))))"
"Id(((-2.1067589840651006e8) + (((-1.4201466942375163) * (Log((((x4)^(3)) * ((x2)^(3))) * ((x0)^(3))))) + (((-24.637550449233267) * (Tanh((((x4)^(-1)) * ((x2)^(-2))) * ((x0)^(-2))))) + (((6.541948689082938) * (Tanh((((((x4)^(2)) * ((x3)^(-1))) * ((x2)^(3))) * ((x1)^(1))) * ((x0)^(3))))) + (((-7.635265232977748) * (Tanh((((x4)^(1)) * ((x3)^(3))) * ((x1)^(1))))) + (((2.1067603956311938e8) * (Cos((x4)^(3)))) + (((-0.47896747299586195) * (Log((x2)^(3)))) + (((-4.76198227469585) * (Cos(((x3)^(-3)) * ((x2)^(-3))))) + ((-0.8588703210002784) * (Cos((x2)^(-1)))))))))))) / ((1.0) + (((9.704445599245212e-3) * (Sqrt(((x3)^(-1)) * ((x0)^(1))))) + (((5.429672350568193e-2) * (Tanh(((x3)^(-2)) * ((x1)^(3))))) + ((2.964449029881082e-2) * (Sqrt((((x4)^(-3)) * ((x2)^(2))) * ((x0)^(-2)))))))))","[[-2.1067589840651006e8,-1.4201466942375163,-24.637550449233267,6.541948689082938,-7.635265232977748,2.1067603956311938e8,-0.47896747299586195,-4.76198227469585,-0.8588703210002784,9.704445599245212e-3,5.429672350568193e-2,2.964449029881082e-2]]","(((-2.1067589840651006e8) + (((-1.4201466942375163) * (np.log((((x[:,4])**(3)) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((-24.637550449233267) * (np.tanh((((x[:,4])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + (((6.541948689082938) * (np.tanh((((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,2])**(3))) * ((x[:,1])**(1))) * ((x[:,0])**(3))))) + (((-7.635265232977748) * (np.tanh((((x[:,4])**(1)) * ((x[:,3])**(3))) * ((x[:,1])**(1))))) + (((2.1067603956311938e8) * (np.cos((x[:,4])**(3)))) + (((-0.47896747299586195) * (np.log((x[:,2])**(3)))) + (((-4.76198227469585) * (np.cos(((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + ((-0.8588703210002784) * (np.cos((x[:,2])**(-1)))))))))))) / ((1.0) + (((9.704445599245212e-3) * (np.sqrt(((x[:,3])**(-1)) * ((x[:,0])**(1))))) + (((5.429672350568193e-2) * (np.tanh(((x[:,3])**(-2)) * ((x[:,1])**(3))))) + ((2.964449029881082e-2) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,2])**(2))) * ((x[:,0])**(-2)))))))))"
"Id(((123.72054369053005) + (((-0.10602846435513003) * (Sqrt((x0)^(1)))) + (((-3.661343631600267) * (Sqrt((((x4)^(-2)) * ((x3)^(1))) * ((x0)^(-2))))) + (((4.182096396884992) * (Tanh((((x4)^(-2)) * ((x3)^(1))) * ((x0)^(-2))))) + (((9.067016581769094e-2) * (Id((((x4)^(-2)) * ((x3)^(1))) * ((x0)^(-2))))) + (((-1.4184634287854698) * (Cos((x2)^(-3)))) + (((1.8204710027908049) * (Log(((x4)^(-2)) * ((x3)^(-1))))) + (((-2.9616492360940043) * (Log((((x3)^(-2)) * ((x2)^(2))) * ((x0)^(2))))) + (((-0.7419822079259433) * (Log(((x3)^(-2)) * ((x2)^(2))))) + ((-0.37523214557760554) * (Sqrt(((((x3)^(1)) * ((x2)^(-2))) * ((x1)^(1))) * ((x0)^(-1)))))))))))))) / ((1.0) + (((823.7457482166159) * (Tanh(((x4)^(2)) * ((x3)^(-1))))) + ((5.936470066026811e-2) * (Tanh((((((x4)^(-3)) * ((x3)^(-1))) * ((x2)^(-1))) * ((x1)^(2))) * ((x0)^(-3))))))))","[[123.72054369053005,-0.10602846435513003,-3.661343631600267,4.182096396884992,9.067016581769094e-2,-1.4184634287854698,1.8204710027908049,-2.9616492360940043,-0.7419822079259433,-0.37523214557760554,823.7457482166159,5.936470066026811e-2]]","(((123.72054369053005) + (((-0.10602846435513003) * (np.sqrt((x[:,0])**(1)))) + (((-3.661343631600267) * (np.sqrt((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,0])**(-2))))) + (((4.182096396884992) * (np.tanh((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,0])**(-2))))) + (((9.067016581769094e-2) * (((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,0])**(-2))))) + (((-1.4184634287854698) * (np.cos((x[:,2])**(-3)))) + (((1.8204710027908049) * (np.log(((x[:,4])**(-2)) * ((x[:,3])**(-1))))) + (((-2.9616492360940043) * (np.log((((x[:,3])**(-2)) * ((x[:,2])**(2))) * ((x[:,0])**(2))))) + (((-0.7419822079259433) * (np.log(((x[:,3])**(-2)) * ((x[:,2])**(2))))) + ((-0.37523214557760554) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,1])**(1))) * ((x[:,0])**(-1)))))))))))))) / ((1.0) + (((823.7457482166159) * (np.tanh(((x[:,4])**(2)) * ((x[:,3])**(-1))))) + ((5.936470066026811e-2) * (np.tanh((((((x[:,4])**(-3)) * ((x[:,3])**(-1))) * ((x[:,2])**(-1))) * ((x[:,1])**(2))) * ((x[:,0])**(-3))))))))"
"Id(((175.5596410840034) + (((-24.645757061207114) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((-45689.7310250635) * (Id((x4)^(3)))) + (((-5.570553861620663) * (Tanh((((x4)^(-2)) * ((x1)^(1))) * ((x0)^(-2))))) + (((4.899845264730128) * (Log(((x2)^(-1)) * ((x0)^(-2))))) + (((-0.3077816541385765) * (Log(((x4)^(3)) * ((x0)^(-3))))) + (((-0.7384774016083795) * (Log((x4)^(3)))) + (((2.1351747642181045) * (Sqrt((x3)^(1)))) + (((-22.546091211602132) * (Tanh(((x2)^(3)) * ((x0)^(2))))) + ((0.7943837413880472) * (Sin((x2)^(-2))))))))))))) / ((1.0) + (((5.876103184387574e-2) * (Sqrt(((((x3)^(1)) * ((x2)^(-2))) * ((x1)^(1))) * ((x0)^(-2))))) + ((-7.670740285936595e-2) * (Tanh(((x4)^(-1)) * ((x3)^(-2))))))))","[[175.5596410840034,-24.645757061207114,-45689.7310250635,-5.570553861620663,4.899845264730128,-0.3077816541385765,-0.7384774016083795,2.1351747642181045,-22.546091211602132,0.7943837413880472,5.876103184387574e-2,-7.670740285936595e-2]]","(((175.5596410840034) + (((-24.645757061207114) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((-45689.7310250635) * (((x[:,4])**(3)))) + (((-5.570553861620663) * (np.tanh((((x[:,4])**(-2)) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + (((4.899845264730128) * (np.log(((x[:,2])**(-1)) * ((x[:,0])**(-2))))) + (((-0.3077816541385765) * (np.log(((x[:,4])**(3)) * ((x[:,0])**(-3))))) + (((-0.7384774016083795) * (np.log((x[:,4])**(3)))) + (((2.1351747642181045) * (np.sqrt((x[:,3])**(1)))) + (((-22.546091211602132) * (np.tanh(((x[:,2])**(3)) * ((x[:,0])**(2))))) + ((0.7943837413880472) * (np.sin((x[:,2])**(-2))))))))))))) / ((1.0) + (((5.876103184387574e-2) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + ((-7.670740285936595e-2) * (np.tanh(((x[:,4])**(-1)) * ((x[:,3])**(-2))))))))"
"Id(((30732.13786421153) + (((-5.02297496895102) * (Log(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(2))))) + (((-287.5151105815632) * (Sin(((x2)^(-1)) * ((x0)^(-1))))) + (((-0.5459014956905435) * (Sin((x2)^(-1)))) + (((2563.728618811329) * (Sin(((x2)^(-3)) * ((x0)^(-3))))) + (((-33.94430023378353) * (Exp((((x4)^(-1)) * ((x2)^(1))) * ((x0)^(-1))))) + ((-30548.47281980772) * (Exp((x4)^(3)))))))))) / ((1.0) + (((-6.918680954783096e-3) * (Exp(((x3)^(-3)) * ((x2)^(-3))))) + (((-8.206748694862533) * (Id(((x4)^(-2)) * ((x0)^(-3))))) + ((0.11989248849504919) * (Sqrt(((x4)^(-2)) * ((x0)^(-2)))))))))","[[30732.13786421153,-5.02297496895102,-287.5151105815632,-0.5459014956905435,2563.728618811329,-33.94430023378353,-30548.47281980772,-6.918680954783096e-3,-8.206748694862533,0.11989248849504919]]","(((30732.13786421153) + (((-5.02297496895102) * (np.log(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + (((-287.5151105815632) * (np.sin(((x[:,2])**(-1)) * ((x[:,0])**(-1))))) + (((-0.5459014956905435) * (np.sin((x[:,2])**(-1)))) + (((2563.728618811329) * (np.sin(((x[:,2])**(-3)) * ((x[:,0])**(-3))))) + (((-33.94430023378353) * (np.exp((((x[:,4])**(-1)) * ((x[:,2])**(1))) * ((x[:,0])**(-1))))) + ((-30548.47281980772) * (np.exp((x[:,4])**(3)))))))))) / ((1.0) + (((-6.918680954783096e-3) * (np.exp(((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((-8.206748694862533) * ((((x[:,4])**(-2)) * ((x[:,0])**(-3))))) + ((0.11989248849504919) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-2)))))))))"
"Id(((127.17526955332379) + (((-21.705759523124964) * (Sqrt(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(1))))) + (((-11.305614496546417) * (Id(((x4)^(-1)) * ((x0)^(-1))))) + (((3.7222528469470773e-3) * (Id((x4)^(-1)))) + (((8.344337368685018) * (Tanh(((((x4)^(-2)) * ((x3)^(2))) * ((x2)^(-2))) * ((x0)^(-3))))) + (((-142.1138582657285) * (Id((((x4)^(1)) * ((x2)^(-2))) * ((x0)^(-1))))) + (((-7.657897296976189e-7) * (Sin(((((x4)^(2)) * ((x2)^(2))) * ((x1)^(3))) * ((x0)^(-3))))) + ((0.7701613813309947) * (Sin((x2)^(-2))))))))))) / ((1.0) + ((5.0008428058407605e-8) * (Sqrt((x0)^(3))))))","[[127.17526955332379,-21.705759523124964,-11.305614496546417,3.7222528469470773e-3,8.344337368685018,-142.1138582657285,-7.657897296976189e-7,0.7701613813309947,5.0008428058407605e-8]]","(((127.17526955332379) + (((-21.705759523124964) * (np.sqrt(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(1))))) + (((-11.305614496546417) * ((((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((3.7222528469470773e-3) * (((x[:,4])**(-1)))) + (((8.344337368685018) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))))) + (((-142.1138582657285) * (((((x[:,4])**(1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-1))))) + (((-7.657897296976189e-7) * (np.sin(((((x[:,4])**(2)) * ((x[:,2])**(2))) * ((x[:,1])**(3))) * ((x[:,0])**(-3))))) + ((0.7701613813309947) * (np.sin((x[:,2])**(-2))))))))))) / ((1.0) + ((5.0008428058407605e-8) * (np.sqrt((x[:,0])**(3))))))"
"Id(((144.48067606625816) + (((-4.931991667088291) * (Sqrt((((x2)^(-3)) * ((x1)^(1))) * ((x0)^(-2))))) + (((-4.906689984996888) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(2))) * ((x0)^(3))))) + (((-4.653091567374544) * (Sqrt(((x4)^(-2)) * ((x0)^(-2))))) + (((7.821440238848232e-3) * (Id(((((x4)^(2)) * ((x3)^(-3))) * ((x2)^(1))) * ((x0)^(3))))) + (((-4.248451766434716) * (Tanh(((((x4)^(2)) * ((x3)^(-3))) * ((x2)^(1))) * ((x0)^(3))))) + (((-3.1361405872036736e-4) * (Sqrt((((x3)^(-3)) * ((x1)^(1))) * ((x0)^(3))))) + (((-2043128.1627993973) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(1))) * ((x1)^(1))))) + ((-8.831106846761436) * (Tanh(((x3)^(2)) * ((x2)^(2))))))))))))) / ((1.0) + (((2.80560789847107e-3) * (Sqrt(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(2))))) + ((0.12241313349319505) * (Sqrt((((x4)^(-3)) * ((x2)^(1))) * ((x0)^(-3))))))))","[[144.48067606625816,-4.931991667088291,-4.906689984996888,-4.653091567374544,7.821440238848232e-3,-4.248451766434716,-3.1361405872036736e-4,-2043128.1627993973,-8.831106846761436,2.80560789847107e-3,0.12241313349319505]]","(((144.48067606625816) + (((-4.931991667088291) * (np.sqrt((((x[:,2])**(-3)) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + (((-4.906689984996888) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((-4.653091567374544) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((7.821440238848232e-3) * ((((((x[:,4])**(2)) * ((x[:,3])**(-3))) * ((x[:,2])**(1))) * ((x[:,0])**(3))))) + (((-4.248451766434716) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-3))) * ((x[:,2])**(1))) * ((x[:,0])**(3))))) + (((-3.1361405872036736e-4) * (np.sqrt((((x[:,3])**(-3)) * ((x[:,1])**(1))) * ((x[:,0])**(3))))) + (((-2043128.1627993973) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(1))) * ((x[:,1])**(1))))) + ((-8.831106846761436) * (np.tanh(((x[:,3])**(2)) * ((x[:,2])**(2))))))))))))) / ((1.0) + (((2.80560789847107e-3) * (np.sqrt(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + ((0.12241313349319505) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,2])**(1))) * ((x[:,0])**(-3))))))))"
"Id(((184.3686284564495) + (((-67.87715445278005) * (Sqrt(((x3)^(-1)) * ((x2)^(1))))) + (((-29477.8842905958) * (Sqrt((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(1))))) + (((-2.384448977401957) * (Log((x0)^(1)))) + (((-71.68968809921546) * (Sqrt((((x2)^(-2)) * ((x1)^(1))) * ((x0)^(-2))))) + (((-0.12167583647177405) * (Sqrt((x0)^(1)))) + (((0.8476018596945112) * (Log((x2)^(-3)))) + (((2.3844488545008526) * (Log((x0)^(-1)))) + (((-20.764097401892066) * (Cos(((x2)^(-3)) * ((x0)^(-2))))) + ((0.4008699689949039) * (Sqrt((x4)^(-1))))))))))))) / ((1.0) + (((-2.042892948182677) * (Sqrt((((x3)^(-1)) * ((x1)^(3))) * ((x0)^(-2))))) + ((0.18399972832987832) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))))))","[[184.3686284564495,-67.87715445278005,-29477.8842905958,-2.384448977401957,-71.68968809921546,-0.12167583647177405,0.8476018596945112,2.3844488545008526,-20.764097401892066,0.4008699689949039,-2.042892948182677,0.18399972832987832]]","(((184.3686284564495) + (((-67.87715445278005) * (np.sqrt(((x[:,3])**(-1)) * ((x[:,2])**(1))))) + (((-29477.8842905958) * (np.sqrt((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(1))))) + (((-2.384448977401957) * (np.log((x[:,0])**(1)))) + (((-71.68968809921546) * (np.sqrt((((x[:,2])**(-2)) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + (((-0.12167583647177405) * (np.sqrt((x[:,0])**(1)))) + (((0.8476018596945112) * (np.log((x[:,2])**(-3)))) + (((2.3844488545008526) * (np.log((x[:,0])**(-1)))) + (((-20.764097401892066) * (np.cos(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + ((0.4008699689949039) * (np.sqrt((x[:,4])**(-1))))))))))))) / ((1.0) + (((-2.042892948182677) * (np.sqrt((((x[:,3])**(-1)) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))) + ((0.18399972832987832) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))))))"
"Id(((-507.3486514486397) + (((-42.98667295974856) * (Sqrt(((x2)^(-3)) * ((x0)^(-2))))) + (((1.0178686062214561) * (Log((x0)^(3)))) + (((0.4326635236653835) * (Sqrt((x4)^(-1)))) + (((656.1127176912925) * (Exp((((x3)^(-1)) * ((x2)^(-3))) * ((x0)^(-2))))) + (((-4.759812029335947) * (Log(((x2)^(1)) * ((x0)^(2))))) + (((4.381336586572896e-5) * (Sqrt(((x3)^(1)) * ((x0)^(2))))) + (((-1.2056967991290886) * (Log((x3)^(-3)))) + ((-3257.626590605934) * (Tanh((x4)^(2)))))))))))) / ((1.0) + (((0.1759169082208163) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((2.3077831841960013) * (Tanh(((x3)^(-2)) * ((x1)^(1))))) + (((-0.864671422420134) * (Tanh(((x3)^(-3)) * ((x2)^(-2))))) + ((7.616548772988426e-6) * (Sqrt((x0)^(2)))))))))","[[-507.3486514486397,-42.98667295974856,1.0178686062214561,0.4326635236653835,656.1127176912925,-4.759812029335947,4.381336586572896e-5,-1.2056967991290886,-3257.626590605934,0.1759169082208163,2.3077831841960013,-0.864671422420134,7.616548772988426e-6]]","(((-507.3486514486397) + (((-42.98667295974856) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((1.0178686062214561) * (np.log((x[:,0])**(3)))) + (((0.4326635236653835) * (np.sqrt((x[:,4])**(-1)))) + (((656.1127176912925) * (np.exp((((x[:,3])**(-1)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))) + (((-4.759812029335947) * (np.log(((x[:,2])**(1)) * ((x[:,0])**(2))))) + (((4.381336586572896e-5) * (np.sqrt(((x[:,3])**(1)) * ((x[:,0])**(2))))) + (((-1.2056967991290886) * (np.log((x[:,3])**(-3)))) + ((-3257.626590605934) * (np.tanh((x[:,4])**(2)))))))))))) / ((1.0) + (((0.1759169082208163) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((2.3077831841960013) * (np.tanh(((x[:,3])**(-2)) * ((x[:,1])**(1))))) + (((-0.864671422420134) * (np.tanh(((x[:,3])**(-3)) * ((x[:,2])**(-2))))) + ((7.616548772988426e-6) * (np.sqrt((x[:,0])**(2)))))))))"
"Id(((158.19228893121561) + (((-0.19749583861407372) * (Sqrt((((x4)^(-2)) * ((x3)^(2))) * ((x0)^(-2))))) + (((-8.619641717665726) * (Tanh((((x4)^(-2)) * ((x3)^(2))) * ((x0)^(-3))))) + (((-1.676124081218223) * (Cos((x2)^(-3)))) + (((-1.6377763502892861) * (Log(((x2)^(1)) * ((x0)^(1))))) + (((1.258839444966986e-2) * (Sqrt((x3)^(3)))) + (((-46.221082134296296) * (Sqrt((((x4)^(-3)) * ((x2)^(3))) * ((x0)^(-3))))) + (((104.16570397457133) * (Sqrt((((x3)^(2)) * ((x2)^(1))) * ((x0)^(-2))))) + (((-29.441299439891587) * (Sqrt((x2)^(1)))) + ((-5.780536246469473e-4) * (Sqrt((x0)^(2))))))))))))) / ((1.0) + (((1.5137128921039536e-2) * (Log(((x4)^(3)) * ((x0)^(3))))) + (((334.64394509459373) * (Sin((x4)^(3)))) + (((5.849814232734518e-2) * (Tanh((((((x4)^(-3)) * ((x3)^(-1))) * ((x2)^(-1))) * ((x1)^(2))) * ((x0)^(-3))))) + (((2.092455507091147e-7) * (Sqrt((((((x4)^(-2)) * ((x3)^(3))) * ((x2)^(-2))) * ((x1)^(3))) * ((x0)^(-2))))) + (((5.497885154213475e-2) * (Tanh((((((x4)^(3)) * ((x3)^(3))) * ((x2)^(-3))) * ((x1)^(3))) * ((x0)^(-3))))) + ((7.695371017894559e-2) * (Sqrt(((x2)^(-3)) * ((x0)^(-2))))))))))))","[[158.19228893121561,-0.19749583861407372,-8.619641717665726,-1.676124081218223,-1.6377763502892861,1.258839444966986e-2,-46.221082134296296,104.16570397457133,-29.441299439891587,-5.780536246469473e-4,1.5137128921039536e-2,334.64394509459373,5.849814232734518e-2,2.092455507091147e-7,5.497885154213475e-2,7.695371017894559e-2]]","(((158.19228893121561) + (((-0.19749583861407372) * (np.sqrt((((x[:,4])**(-2)) * ((x[:,3])**(2))) * ((x[:,0])**(-2))))) + (((-8.619641717665726) * (np.tanh((((x[:,4])**(-2)) * ((x[:,3])**(2))) * ((x[:,0])**(-3))))) + (((-1.676124081218223) * (np.cos((x[:,2])**(-3)))) + (((-1.6377763502892861) * (np.log(((x[:,2])**(1)) * ((x[:,0])**(1))))) + (((1.258839444966986e-2) * (np.sqrt((x[:,3])**(3)))) + (((-46.221082134296296) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,2])**(3))) * ((x[:,0])**(-3))))) + (((104.16570397457133) * (np.sqrt((((x[:,3])**(2)) * ((x[:,2])**(1))) * ((x[:,0])**(-2))))) + (((-29.441299439891587) * (np.sqrt((x[:,2])**(1)))) + ((-5.780536246469473e-4) * (np.sqrt((x[:,0])**(2))))))))))))) / ((1.0) + (((1.5137128921039536e-2) * (np.log(((x[:,4])**(3)) * ((x[:,0])**(3))))) + (((334.64394509459373) * (np.sin((x[:,4])**(3)))) + (((5.849814232734518e-2) * (np.tanh((((((x[:,4])**(-3)) * ((x[:,3])**(-1))) * ((x[:,2])**(-1))) * ((x[:,1])**(2))) * ((x[:,0])**(-3))))) + (((2.092455507091147e-7) * (np.sqrt((((((x[:,4])**(-2)) * ((x[:,3])**(3))) * ((x[:,2])**(-2))) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))) + (((5.497885154213475e-2) * (np.tanh((((((x[:,4])**(3)) * ((x[:,3])**(3))) * ((x[:,2])**(-3))) * ((x[:,1])**(3))) * ((x[:,0])**(-3))))) + ((7.695371017894559e-2) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2))))))))))))"
"Id(((151.86572683229863) + (((-1.1217404433803415) * (Cos((x2)^(-3)))) + (((105.7531631967521) * (Tanh((((x4)^(-2)) * ((x2)^(-1))) * ((x0)^(-3))))) + (((-3.104490724719132) * (Log((((x4)^(2)) * ((x2)^(2))) * ((x0)^(3))))) + (((-4.170292257788585) * (Cos(((x3)^(-2)) * ((x2)^(-2))))) + (((-26.492062803689294) * (Id(((x4)^(-1)) * ((x0)^(-1))))) + (((2.1058529835908892) * (Sqrt(((x4)^(2)) * ((x0)^(1))))) + (((1.4567869458262477) * (Sqrt((x3)^(1)))) + ((-0.5232151160186836) * (Sin(((x4)^(1)) * ((x3)^(3))))))))))))) / ((1.0) + (((2.1423825568935885e-4) * (Sqrt((((((x4)^(-2)) * ((x3)^(1))) * ((x2)^(-1))) * ((x1)^(3))) * ((x0)^(-2))))) + (((6.756325051759897e-7) * (Sqrt(((x2)^(-1)) * ((x0)^(2))))) + (((1.3281225474547964e-2) * (Sqrt((((x2)^(-2)) * ((x1)^(1))) * ((x0)^(-1))))) + (((2.1454621213121416e-2) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(3))) * ((x0)^(3))))) + (((14866.892304982766) * (Id(((x4)^(3)) * ((x3)^(-1))))) + ((-3.0475319800599976e-3) * (Cos((x0)^(1)))))))))))","[[151.86572683229863,-1.1217404433803415,105.7531631967521,-3.104490724719132,-4.170292257788585,-26.492062803689294,2.1058529835908892,1.4567869458262477,-0.5232151160186836,2.1423825568935885e-4,6.756325051759897e-7,1.3281225474547964e-2,2.1454621213121416e-2,14866.892304982766,-3.0475319800599976e-3]]","(((151.86572683229863) + (((-1.1217404433803415) * (np.cos((x[:,2])**(-3)))) + (((105.7531631967521) * (np.tanh((((x[:,4])**(-2)) * ((x[:,2])**(-1))) * ((x[:,0])**(-3))))) + (((-3.104490724719132) * (np.log((((x[:,4])**(2)) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((-4.170292257788585) * (np.cos(((x[:,3])**(-2)) * ((x[:,2])**(-2))))) + (((-26.492062803689294) * ((((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((2.1058529835908892) * (np.sqrt(((x[:,4])**(2)) * ((x[:,0])**(1))))) + (((1.4567869458262477) * (np.sqrt((x[:,3])**(1)))) + ((-0.5232151160186836) * (np.sin(((x[:,4])**(1)) * ((x[:,3])**(3))))))))))))) / ((1.0) + (((2.1423825568935885e-4) * (np.sqrt((((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,2])**(-1))) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))) + (((6.756325051759897e-7) * (np.sqrt(((x[:,2])**(-1)) * ((x[:,0])**(2))))) + (((1.3281225474547964e-2) * (np.sqrt((((x[:,2])**(-2)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((2.1454621213121416e-2) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((14866.892304982766) * ((((x[:,4])**(3)) * ((x[:,3])**(-1))))) + ((-3.0475319800599976e-3) * (np.cos((x[:,0])**(1)))))))))))"
"Id(((6558.288904367923) + (((-6.219566137709472e-4) * (Id((x0)^(1)))) + (((-2.8968472544513366) * (Cos(((x3)^(-3)) * ((x2)^(-3))))) + (((-9.570195778975258) * (Sqrt(((x4)^(-2)) * ((x0)^(-2))))) + (((-1.6516892468332482) * (Log(((((x4)^(2)) * ((x3)^(-3))) * ((x2)^(3))) * ((x0)^(3))))) + (((4.258253584244745) * (Tanh(((((x4)^(2)) * ((x3)^(-1))) * ((x1)^(1))) * ((x0)^(2))))) + (((-2.8691921207263267) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x1)^(2))) * ((x0)^(2))))) + (((8.754837241577667) * (Tanh(((((x4)^(2)) * ((x3)^(-1))) * ((x2)^(2))) * ((x0)^(3))))) + (((-2.488417214629724) * (Tanh(((((x4)^(2)) * ((x3)^(-3))) * ((x2)^(1))) * ((x0)^(3))))) + (((-6.016109027676498) * (Tanh((x1)^(1)))) + (((-6438.586116331639) * (Exp((((x4)^(2)) * ((x3)^(-1))) * ((x1)^(1))))) + (((5.210649572023428e-10) * (Exp((x1)^(1)))) + ((-0.8692283110536307) * (Cos((x2)^(-1)))))))))))))))) / ((1.0) + (((7.463999356790096e-2) * (Tanh(((x2)^(-3)) * ((x0)^(-2))))) + (((3.263903824194359e-8) * (Id(((x4)^(-3)) * ((x2)^(3))))) + ((2.4007801207635718e-4) * (Sqrt(((((x3)^(1)) * ((x2)^(-3))) * ((x1)^(1))) * ((x0)^(-1)))))))))","[[6558.288904367923,-6.219566137709472e-4,-2.8968472544513366,-9.570195778975258,-1.6516892468332482,4.258253584244745,-2.8691921207263267,8.754837241577667,-2.488417214629724,-6.016109027676498,-6438.586116331639,5.210649572023428e-10,-0.8692283110536307,7.463999356790096e-2,3.263903824194359e-8,2.4007801207635718e-4]]","(((6558.288904367923) + (((-6.219566137709472e-4) * (((x[:,0])**(1)))) + (((-2.8968472544513366) * (np.cos(((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((-9.570195778975258) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((-1.6516892468332482) * (np.log(((((x[:,4])**(2)) * ((x[:,3])**(-3))) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((4.258253584244745) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,1])**(1))) * ((x[:,0])**(2))))) + (((-2.8691921207263267) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(2))))) + (((8.754837241577667) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((-2.488417214629724) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-3))) * ((x[:,2])**(1))) * ((x[:,0])**(3))))) + (((-6.016109027676498) * (np.tanh((x[:,1])**(1)))) + (((-6438.586116331639) * (np.exp((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,1])**(1))))) + (((5.210649572023428e-10) * (np.exp((x[:,1])**(1)))) + ((-0.8692283110536307) * (np.cos((x[:,2])**(-1)))))))))))))))) / ((1.0) + (((7.463999356790096e-2) * (np.tanh(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((3.263903824194359e-8) * ((((x[:,4])**(-3)) * ((x[:,2])**(3))))) + ((2.4007801207635718e-4) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-3))) * ((x[:,1])**(1))) * ((x[:,0])**(-1)))))))))"
"Id(((2383.361963810695) + (((-2252.6204590830976) * (Exp((x4)^(2)))) + (((-3.895499149721893e-2) * (Sqrt(((((x4)^(-3)) * ((x3)^(2))) * ((x2)^(2))) * ((x0)^(-2))))) + (((3.8688475293100386) * (Log((((x3)^(2)) * ((x2)^(-2))) * ((x0)^(-2))))) + (((-15.260506015638558) * (Sqrt(((x2)^(-2)) * ((x0)^(-1))))) + (((-1.5422260227714704) * (Log((x4)^(3)))) + (((-6.455602310918038e-2) * (Sqrt(((x4)^(-1)) * ((x1)^(1))))) + (((-11.425606964918703) * (Sqrt(((x4)^(-2)) * ((x0)^(-2))))) + (((-7.042030028284197) * (Cos(((x3)^(-2)) * ((x2)^(-2))))) + (((-0.967358048445464) * (Cos((x2)^(-1)))) + ((-0.6900362074617363) * (Sin((x3)^(2)))))))))))))) / ((1.0) + ((5.199124236770315e-6) * (Sqrt((x0)^(2))))))","[[2383.361963810695,-2252.6204590830976,-3.895499149721893e-2,3.8688475293100386,-15.260506015638558,-1.5422260227714704,-6.455602310918038e-2,-11.425606964918703,-7.042030028284197,-0.967358048445464,-0.6900362074617363,5.199124236770315e-6]]","(((2383.361963810695) + (((-2252.6204590830976) * (np.exp((x[:,4])**(2)))) + (((-3.895499149721893e-2) * (np.sqrt(((((x[:,4])**(-3)) * ((x[:,3])**(2))) * ((x[:,2])**(2))) * ((x[:,0])**(-2))))) + (((3.8688475293100386) * (np.log((((x[:,3])**(2)) * ((x[:,2])**(-2))) * ((x[:,0])**(-2))))) + (((-15.260506015638558) * (np.sqrt(((x[:,2])**(-2)) * ((x[:,0])**(-1))))) + (((-1.5422260227714704) * (np.log((x[:,4])**(3)))) + (((-6.455602310918038e-2) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,1])**(1))))) + (((-11.425606964918703) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((-7.042030028284197) * (np.cos(((x[:,3])**(-2)) * ((x[:,2])**(-2))))) + (((-0.967358048445464) * (np.cos((x[:,2])**(-1)))) + ((-0.6900362074617363) * (np.sin((x[:,3])**(2)))))))))))))) / ((1.0) + ((5.199124236770315e-6) * (np.sqrt((x[:,0])**(2))))))"
"Id(((427.07284101107825) + (((2.5839436462529326) * (Id(((x4)^(1)) * ((x3)^(1))))) + (((-10.932089844689312) * (Tanh(((x4)^(-3)) * ((x0)^(-3))))) + (((-4.6944254448530107e-4) * (Sqrt((((((x4)^(-1)) * ((x3)^(2))) * ((x2)^(-3))) * ((x1)^(3))) * ((x0)^(-2))))) + (((5.992839062399614) * (Tanh((((x4)^(-3)) * ((x3)^(2))) * ((x0)^(-3))))) + (((-11.47166773821663) * (Tanh((((x3)^(2)) * ((x2)^(-3))) * ((x0)^(-3))))) + (((-303.52027980204446) * (Exp((x4)^(1)))) + (((-8.787130003229419e-4) * (Sqrt((((x4)^(-3)) * ((x1)^(2))) * ((x0)^(-1))))) + (((3.2092335761739914) * (Tanh((((((x4)^(2)) * ((x3)^(3))) * ((x2)^(1))) * ((x1)^(3))) * ((x0)^(-1))))) + (((2.5800632079137316) * (Log((((x3)^(1)) * ((x2)^(-2))) * ((x0)^(-1))))) + ((-0.8314593232973069) * (Cos((x2)^(-1)))))))))))))) / ((1.0) + (((1.1326062503286224e-3) * (Id((x1)^(1)))) + (((-3.7490645944429635e-3) * (Cos((x0)^(1)))) + ((7.932295127739126e-7) * (Sqrt(((x4)^(1)) * ((x0)^(3)))))))))","[[427.07284101107825,2.5839436462529326,-10.932089844689312,-4.6944254448530107e-4,5.992839062399614,-11.47166773821663,-303.52027980204446,-8.787130003229419e-4,3.2092335761739914,2.5800632079137316,-0.8314593232973069,1.1326062503286224e-3,-3.7490645944429635e-3,7.932295127739126e-7]]","(((427.07284101107825) + (((2.5839436462529326) * ((((x[:,4])**(1)) * ((x[:,3])**(1))))) + (((-10.932089844689312) * (np.tanh(((x[:,4])**(-3)) * ((x[:,0])**(-3))))) + (((-4.6944254448530107e-4) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(2))) * ((x[:,2])**(-3))) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))) + (((5.992839062399614) * (np.tanh((((x[:,4])**(-3)) * ((x[:,3])**(2))) * ((x[:,0])**(-3))))) + (((-11.47166773821663) * (np.tanh((((x[:,3])**(2)) * ((x[:,2])**(-3))) * ((x[:,0])**(-3))))) + (((-303.52027980204446) * (np.exp((x[:,4])**(1)))) + (((-8.787130003229419e-4) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))) + (((3.2092335761739914) * (np.tanh((((((x[:,4])**(2)) * ((x[:,3])**(3))) * ((x[:,2])**(1))) * ((x[:,1])**(3))) * ((x[:,0])**(-1))))) + (((2.5800632079137316) * (np.log((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-1))))) + ((-0.8314593232973069) * (np.cos((x[:,2])**(-1)))))))))))))) / ((1.0) + (((1.1326062503286224e-3) * (((x[:,1])**(1)))) + (((-3.7490645944429635e-3) * (np.cos((x[:,0])**(1)))) + ((7.932295127739126e-7) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(3)))))))))"
"Id(((-5589.310756221905) + (((-1.0683054509971035) * (Sqrt(((((x3)^(1)) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-2))))) + (((8.320891106501844e-5) * (Sqrt(((x4)^(1)) * ((x0)^(3))))) + (((-0.3559736685393703) * (Sqrt((x0)^(1)))) + (((-33.95836861437142) * (Tanh(((x4)^(-1)) * ((x0)^(-1))))) + (((5705.914912894546) * (Cos((x4)^(1)))) + (((0.7058007996802487) * (Sqrt((x4)^(-1)))) + (((-0.7031691750279202) * (Cos((x2)^(-1)))) + (((1.0599396994649064) * (Exp(((x3)^(-2)) * ((x2)^(-2))))) + (((1342.054346564234) * (Tanh((x0)^(-1)))) + ((-5.450834343548719) * (Log((x3)^(-1)))))))))))))) / ((1.0) + ((8.379316564888961e-2) * (Tanh((((x4)^(1)) * ((x2)^(2))) * ((x0)^(1)))))))","[[-5589.310756221905,-1.0683054509971035,8.320891106501844e-5,-0.3559736685393703,-33.95836861437142,5705.914912894546,0.7058007996802487,-0.7031691750279202,1.0599396994649064,1342.054346564234,-5.450834343548719,8.379316564888961e-2]]","(((-5589.310756221905) + (((-1.0683054509971035) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-2))))) + (((8.320891106501844e-5) * (np.sqrt(((x[:,4])**(1)) * ((x[:,0])**(3))))) + (((-0.3559736685393703) * (np.sqrt((x[:,0])**(1)))) + (((-33.95836861437142) * (np.tanh(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((5705.914912894546) * (np.cos((x[:,4])**(1)))) + (((0.7058007996802487) * (np.sqrt((x[:,4])**(-1)))) + (((-0.7031691750279202) * (np.cos((x[:,2])**(-1)))) + (((1.0599396994649064) * (np.exp(((x[:,3])**(-2)) * ((x[:,2])**(-2))))) + (((1342.054346564234) * (np.tanh((x[:,0])**(-1)))) + ((-5.450834343548719) * (np.log((x[:,3])**(-1)))))))))))))) / ((1.0) + ((8.379316564888961e-2) * (np.tanh((((x[:,4])**(1)) * ((x[:,2])**(2))) * ((x[:,0])**(1)))))))"
"Id(((142.6741104058147) + (((-16.466936176725916) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((-0.817794356689491) * (Sqrt(((x2)^(1)) * ((x0)^(1))))) + (((1.1927896248934637e-2) * (Sqrt(((x2)^(3)) * ((x0)^(2))))) + (((-3071.8665994785147) * (Sin((x4)^(2)))) + (((-3.586454236091342) * (Tanh(((((x4)^(-2)) * ((x3)^(1))) * ((x2)^(-2))) * ((x0)^(-3))))) + ((-2.804795416946504e-2) * (Sqrt((((((x4)^(-1)) * ((x3)^(1))) * ((x2)^(-2))) * ((x1)^(3))) * ((x0)^(-2))))))))))) / ((1.0) + (((-3.542298314994721e-5) * (Sqrt(((x4)^(-3)) * ((x0)^(-1))))) + (((-5.9306297996473574e-8) * (Id((x3)^(3)))) + (((1.1855172214944865e-2) * (Tanh((x1)^(1)))) + ((8.972055949982846e-2) * (Tanh((((x4)^(1)) * ((x3)^(-1))) * ((x0)^(1))))))))))","[[142.6741104058147,-16.466936176725916,-0.817794356689491,1.1927896248934637e-2,-3071.8665994785147,-3.586454236091342,-2.804795416946504e-2,-3.542298314994721e-5,-5.9306297996473574e-8,1.1855172214944865e-2,8.972055949982846e-2]]","(((142.6741104058147) + (((-16.466936176725916) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((-0.817794356689491) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(1))))) + (((1.1927896248934637e-2) * (np.sqrt(((x[:,2])**(3)) * ((x[:,0])**(2))))) + (((-3071.8665994785147) * (np.sin((x[:,4])**(2)))) + (((-3.586454236091342) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))))) + ((-2.804795416946504e-2) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(1))) * ((x[:,2])**(-2))) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))))))))) / ((1.0) + (((-3.542298314994721e-5) * (np.sqrt(((x[:,4])**(-3)) * ((x[:,0])**(-1))))) + (((-5.9306297996473574e-8) * (((x[:,3])**(3)))) + (((1.1855172214944865e-2) * (np.tanh((x[:,1])**(1)))) + ((8.972055949982846e-2) * (np.tanh((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,0])**(1))))))))))"
"Id(((140.19813006984884) + (((-1.0265701838282828) * (Sqrt(((((x3)^(1)) * ((x2)^(-2))) * ((x1)^(2))) * ((x0)^(-2))))) + (((-57579.27601766445) * (Sqrt(((((x4)^(3)) * ((x3)^(-3))) * ((x2)^(3))) * ((x1)^(3))))) + (((-0.3155489142853163) * (Sqrt(((x2)^(1)) * ((x0)^(1))))) + (((-8.84772809352065) * (Tanh((((x4)^(1)) * ((x3)^(-1))) * ((x0)^(1))))) + (((-3.1586426827556926e8) * (Tanh((((x4)^(1)) * ((x3)^(-1))) * ((x0)^(-2))))) + (((-0.11041583154545087) * (Sqrt((((x3)^(-1)) * ((x1)^(1))) * ((x0)^(1))))) + (((-5.597067684715385) * (Tanh(((((x4)^(1)) * ((x3)^(-3))) * ((x2)^(3))) * ((x0)^(3))))) + (((6.821372642182654e7) * (Id((x0)^(-3)))) + ((-0.6786629752932265) * (Cos((x2)^(-1))))))))))))) / ((1.0) + ((2.3624180383247584) * (Sqrt(((x4)^(-2)) * ((x0)^(-3)))))))","[[140.19813006984884,-1.0265701838282828,-57579.27601766445,-0.3155489142853163,-8.84772809352065,-3.1586426827556926e8,-0.11041583154545087,-5.597067684715385,6.821372642182654e7,-0.6786629752932265,2.3624180383247584]]","(((140.19813006984884) + (((-1.0265701838282828) * (np.sqrt(((((x[:,3])**(1)) * ((x[:,2])**(-2))) * ((x[:,1])**(2))) * ((x[:,0])**(-2))))) + (((-57579.27601766445) * (np.sqrt(((((x[:,4])**(3)) * ((x[:,3])**(-3))) * ((x[:,2])**(3))) * ((x[:,1])**(3))))) + (((-0.3155489142853163) * (np.sqrt(((x[:,2])**(1)) * ((x[:,0])**(1))))) + (((-8.84772809352065) * (np.tanh((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,0])**(1))))) + (((-3.1586426827556926e8) * (np.tanh((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,0])**(-2))))) + (((-0.11041583154545087) * (np.sqrt((((x[:,3])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(1))))) + (((-5.597067684715385) * (np.tanh(((((x[:,4])**(1)) * ((x[:,3])**(-3))) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((6.821372642182654e7) * (((x[:,0])**(-3)))) + ((-0.6786629752932265) * (np.cos((x[:,2])**(-1))))))))))))) / ((1.0) + ((2.3624180383247584) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-3)))))))"
"Id((147.11708176330092) + (((-4.643301420039386) * (Log(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(2))))) + (((-28445.71604171806) * (Id((x4)^(3)))) + (((-153.75510725193683) * (Sqrt(((x2)^(-2)) * ((x0)^(-2))))) + (((-9.067485055103875) * (Tanh(((((x4)^(-2)) * ((x2)^(-2))) * ((x1)^(1))) * ((x0)^(-3))))) + (((54.699151979736705) * (Tanh(((x3)^(-3)) * ((x2)^(-2))))) + (((-757628.6735907788) * (Sqrt((((x3)^(-3)) * ((x2)^(1))) * ((x0)^(-2))))) + (((-0.14747908582064362) * (Sqrt((((x4)^(-3)) * ((x3)^(2))) * ((x0)^(-3))))) + (((-7.870859842061805) * (Tanh((((x4)^(-2)) * ((x3)^(2))) * ((x0)^(-3))))) + ((137.44281528986645) * (Tanh(((((x4)^(-2)) * ((x2)^(1))) * ((x1)^(3))) * ((x0)^(-3))))))))))))))","[[147.11708176330092,-4.643301420039386,-28445.71604171806,-153.75510725193683,-9.067485055103875,54.699151979736705,-757628.6735907788,-0.14747908582064362,-7.870859842061805,137.44281528986645]]","((147.11708176330092) + (((-4.643301420039386) * (np.log(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + (((-28445.71604171806) * (((x[:,4])**(3)))) + (((-153.75510725193683) * (np.sqrt(((x[:,2])**(-2)) * ((x[:,0])**(-2))))) + (((-9.067485055103875) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,2])**(-2))) * ((x[:,1])**(1))) * ((x[:,0])**(-3))))) + (((54.699151979736705) * (np.tanh(((x[:,3])**(-3)) * ((x[:,2])**(-2))))) + (((-757628.6735907788) * (np.sqrt((((x[:,3])**(-3)) * ((x[:,2])**(1))) * ((x[:,0])**(-2))))) + (((-0.14747908582064362) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,3])**(2))) * ((x[:,0])**(-3))))) + (((-7.870859842061805) * (np.tanh((((x[:,4])**(-2)) * ((x[:,3])**(2))) * ((x[:,0])**(-3))))) + ((137.44281528986645) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,2])**(1))) * ((x[:,1])**(3))) * ((x[:,0])**(-3))))))))))))))"
"Id(((15.609343816942339) + (((130.64671058068933) * (Exp((((x3)^(-1)) * ((x2)^(-2))) * ((x0)^(-1))))) + (((-19.45344330164857) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((2.6441774443225574) * (Log((((x3)^(1)) * ((x2)^(-3))) * ((x0)^(-2))))) + (((3.8584414212891244e-2) * (Sqrt(((x4)^(-2)) * ((x2)^(1))))) + (((-3.929141139309454) * (Tanh((((x4)^(-2)) * ((x2)^(-1))) * ((x0)^(-2))))) + (((-0.1315806902103851) * (Sqrt((x0)^(1)))) + (((-9.318873110771499) * (Tanh(((x3)^(-2)) * ((x1)^(3))))) + ((-2363.6052662381726) * (Sin((x4)^(2)))))))))))) / ((1.0) + ((0.37559596869939993) * (Sqrt(((x2)^(-3)) * ((x0)^(-2)))))))","[[15.609343816942339,130.64671058068933,-19.45344330164857,2.6441774443225574,3.8584414212891244e-2,-3.929141139309454,-0.1315806902103851,-9.318873110771499,-2363.6052662381726,0.37559596869939993]]","(((15.609343816942339) + (((130.64671058068933) * (np.exp((((x[:,3])**(-1)) * ((x[:,2])**(-2))) * ((x[:,0])**(-1))))) + (((-19.45344330164857) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((2.6441774443225574) * (np.log((((x[:,3])**(1)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))) + (((3.8584414212891244e-2) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,2])**(1))))) + (((-3.929141139309454) * (np.tanh((((x[:,4])**(-2)) * ((x[:,2])**(-1))) * ((x[:,0])**(-2))))) + (((-0.1315806902103851) * (np.sqrt((x[:,0])**(1)))) + (((-9.318873110771499) * (np.tanh(((x[:,3])**(-2)) * ((x[:,1])**(3))))) + ((-2363.6052662381726) * (np.sin((x[:,4])**(2)))))))))))) / ((1.0) + ((0.37559596869939993) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2)))))))"
"Id(((146.41079215177518) + (((-0.6811666584421987) * (Cos((x2)^(-1)))) + (((-2.7904894767144492) * (Log((((x4)^(1)) * ((x2)^(2))) * ((x0)^(2))))) + (((-5.8005487321885936e7) * (Id(((x4)^(3)) * ((x3)^(-2))))) + (((-16.67244848670743) * (Tanh(((x4)^(-2)) * ((x0)^(-2))))) + (((2672111.97226162) * (Sin(((x2)^(-1)) * ((x0)^(-3))))) + ((-7.096230639888056) * (Tanh((((x4)^(1)) * ((x3)^(-3))) * ((x0)^(2))))))))))) / ((1.0) + ((1.9428808868241507) * (Tanh(((x2)^(-1)) * ((x0)^(-1)))))))","[[146.41079215177518,-0.6811666584421987,-2.7904894767144492,-5.8005487321885936e7,-16.67244848670743,2672111.97226162,-7.096230639888056,1.9428808868241507]]","(((146.41079215177518) + (((-0.6811666584421987) * (np.cos((x[:,2])**(-1)))) + (((-2.7904894767144492) * (np.log((((x[:,4])**(1)) * ((x[:,2])**(2))) * ((x[:,0])**(2))))) + (((-5.8005487321885936e7) * ((((x[:,4])**(3)) * ((x[:,3])**(-2))))) + (((-16.67244848670743) * (np.tanh(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((2672111.97226162) * (np.sin(((x[:,2])**(-1)) * ((x[:,0])**(-3))))) + ((-7.096230639888056) * (np.tanh((((x[:,4])**(1)) * ((x[:,3])**(-3))) * ((x[:,0])**(2))))))))))) / ((1.0) + ((1.9428808868241507) * (np.tanh(((x[:,2])**(-1)) * ((x[:,0])**(-1)))))))"
"Id((124.15503290810467) + (((-17.08212453741899) * (Sqrt(((x2)^(-3)) * ((x0)^(-2))))) + (((-0.2798020200819784) * (Sqrt(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(2))))) + (((9.23969885577089) * (Tanh(((((x4)^(-2)) * ((x3)^(2))) * ((x2)^(-2))) * ((x0)^(-3))))) + (((-1.3283533683294993e7) * (Sin(((x4)^(3)) * ((x0)^(-1))))) + (((-0.4767551284369844) * (Id((((x4)^(-2)) * ((x2)^(2))) * ((x0)^(-1))))) + ((-0.8787375269712128) * (Cos((x2)^(-1))))))))))","[[124.15503290810467,-17.08212453741899,-0.2798020200819784,9.23969885577089,-1.3283533683294993e7,-0.4767551284369844,-0.8787375269712128]]","((124.15503290810467) + (((-17.08212453741899) * (np.sqrt(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((-0.2798020200819784) * (np.sqrt(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(2))))) + (((9.23969885577089) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,0])**(-3))))) + (((-1.3283533683294993e7) * (np.sin(((x[:,4])**(3)) * ((x[:,0])**(-1))))) + (((-0.4767551284369844) * (((((x[:,4])**(-2)) * ((x[:,2])**(2))) * ((x[:,0])**(-1))))) + ((-0.8787375269712128) * (np.cos((x[:,2])**(-1))))))))))"
"Id(((137.32131837171917) + (((1.021490208683126) * (Cos((x1)^(3)))) + (((1.8963627556605003) * (Log(((((x4)^(-3)) * ((x3)^(2))) * ((x2)^(-3))) * ((x0)^(-3))))) + (((-12.852915831772563) * (Cos(((x2)^(-3)) * ((x0)^(-2))))) + (((-0.14976331009513555) * (Sqrt((x0)^(1)))) + ((-25.07152527216789) * (Sin(((x4)^(-1)) * ((x0)^(-1)))))))))) / ((1.0) + (((23375.3181009466) * (Id(((x4)^(2)) * ((x3)^(-2))))) + ((3.963144102639407e-2) * (Sqrt((((x3)^(1)) * ((x2)^(-3))) * ((x0)^(-2))))))))","[[137.32131837171917,1.021490208683126,1.8963627556605003,-12.852915831772563,-0.14976331009513555,-25.07152527216789,23375.3181009466,3.963144102639407e-2]]","(((137.32131837171917) + (((1.021490208683126) * (np.cos((x[:,1])**(3)))) + (((1.8963627556605003) * (np.log(((((x[:,4])**(-3)) * ((x[:,3])**(2))) * ((x[:,2])**(-3))) * ((x[:,0])**(-3))))) + (((-12.852915831772563) * (np.cos(((x[:,2])**(-3)) * ((x[:,0])**(-2))))) + (((-0.14976331009513555) * (np.sqrt((x[:,0])**(1)))) + ((-25.07152527216789) * (np.sin(((x[:,4])**(-1)) * ((x[:,0])**(-1)))))))))) / ((1.0) + (((23375.3181009466) * ((((x[:,4])**(2)) * ((x[:,3])**(-2))))) + ((3.963144102639407e-2) * (np.sqrt((((x[:,3])**(1)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))))))"
"Id(((119.86953805135956) + (((-2.3410210787264543) * (Log(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(2))) * ((x0)^(3))))) + (((-5.887164892773135e-4) * (Sqrt((x0)^(2)))) + (((3.076551884353295) * (Id(((x3)^(-3)) * ((x2)^(-3))))) + (((12.116896482611299) * (Tanh(((x2)^(2)) * ((x0)^(1))))) + (((-0.2209590313599743) * (Sqrt((((x4)^(-1)) * ((x3)^(-1))) * ((x1)^(2))))) + (((-121.42906806752296) * (Sqrt((((x4)^(1)) * ((x2)^(-3))) * ((x0)^(-2))))) + (((699494.2557941354) * (Sin((((x3)^(-1)) * ((x1)^(1))) * ((x0)^(-2))))) + (((-96827.30392522813) * (Sqrt((((x4)^(3)) * ((x3)^(-1))) * ((x0)^(-1))))) + ((-24.062088282347897) * (Tanh(((x4)^(-1)) * ((x0)^(-1)))))))))))))) / ((1.0) + (((-6.019154078283462e-3) * (Sin((x2)^(-2)))) + (((3.890097585138874e-2) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(2))) * ((x0)^(3))))) + ((-5.014728662749657e-2) * (Tanh(((((x4)^(2)) * ((x3)^(-2))) * ((x2)^(1))) * ((x0)^(3)))))))))","[[119.86953805135956,-2.3410210787264543,-5.887164892773135e-4,3.076551884353295,12.116896482611299,-0.2209590313599743,-121.42906806752296,699494.2557941354,-96827.30392522813,-24.062088282347897,-6.019154078283462e-3,3.890097585138874e-2,-5.014728662749657e-2]]","(((119.86953805135956) + (((-2.3410210787264543) * (np.log(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((-5.887164892773135e-4) * (np.sqrt((x[:,0])**(2)))) + (((3.076551884353295) * ((((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((12.116896482611299) * (np.tanh(((x[:,2])**(2)) * ((x[:,0])**(1))))) + (((-0.2209590313599743) * (np.sqrt((((x[:,4])**(-1)) * ((x[:,3])**(-1))) * ((x[:,1])**(2))))) + (((-121.42906806752296) * (np.sqrt((((x[:,4])**(1)) * ((x[:,2])**(-3))) * ((x[:,0])**(-2))))) + (((699494.2557941354) * (np.sin((((x[:,3])**(-1)) * ((x[:,1])**(1))) * ((x[:,0])**(-2))))) + (((-96827.30392522813) * (np.sqrt((((x[:,4])**(3)) * ((x[:,3])**(-1))) * ((x[:,0])**(-1))))) + ((-24.062088282347897) * (np.tanh(((x[:,4])**(-1)) * ((x[:,0])**(-1)))))))))))))) / ((1.0) + (((-6.019154078283462e-3) * (np.sin((x[:,2])**(-2)))) + (((3.890097585138874e-2) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + ((-5.014728662749657e-2) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-2))) * ((x[:,2])**(1))) * ((x[:,0])**(3)))))))))"
"Id(((143.24315831133958) + (((-16.491914287730708) * (Sqrt(((x4)^(-1)) * ((x0)^(-1))))) + (((-3.210125866292323) * (Tanh(((((x4)^(2)) * ((x3)^(-3))) * ((x2)^(1))) * ((x0)^(3))))) + (((8.200758886602895) * (Tanh(((((x4)^(2)) * ((x3)^(-1))) * ((x2)^(2))) * ((x0)^(3))))) + (((3.849881505834046) * (Log(((x4)^(-2)) * ((x0)^(-2))))) + (((-0.8537522374278512) * (Cos((x2)^(-1)))) + (((8.562175834714059e-2) * (Sqrt((x3)^(2)))) + (((2.898572997557226) * (Log(((x4)^(1)) * ((x2)^(-2))))) + (((-5912.966251315134) * (Sqrt(((((x4)^(3)) * ((x3)^(-1))) * ((x1)^(2))) * ((x0)^(-1))))) + (((0.517198784137934) * (Cos((x0)^(1)))) + (((0.12342152507743087) * (Sqrt((((x4)^(-3)) * ((x3)^(-3))) * ((x2)^(1))))) + (((-2.1225270663545084) * (Tanh((((x3)^(-3)) * ((x2)^(-3))) * ((x1)^(2))))) + (((-3.849255727991273e-12) * (Sqrt((((x4)^(-3)) * ((x2)^(-1))) * ((x0)^(3))))) + ((-3.672370499224554) * (Sqrt(((((x4)^(-3)) * ((x3)^(-1))) * ((x2)^(1))) * ((x0)^(-2)))))))))))))))))) / ((1.0) + (((1.3072545000037734e-6) * (Sqrt(((x3)^(-2)) * ((x0)^(3))))) + ((2.3429145908263047e-5) * (Sqrt((((((x4)^(-1)) * ((x3)^(2))) * ((x2)^(-3))) * ((x1)^(2))) * ((x0)^(-2))))))))","[[143.24315831133958,-16.491914287730708,-3.210125866292323,8.200758886602895,3.849881505834046,-0.8537522374278512,8.562175834714059e-2,2.898572997557226,-5912.966251315134,0.517198784137934,0.12342152507743087,-2.1225270663545084,-3.849255727991273e-12,-3.672370499224554,1.3072545000037734e-6,2.3429145908263047e-5]]","(((143.24315831133958) + (((-16.491914287730708) * (np.sqrt(((x[:,4])**(-1)) * ((x[:,0])**(-1))))) + (((-3.210125866292323) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-3))) * ((x[:,2])**(1))) * ((x[:,0])**(3))))) + (((8.200758886602895) * (np.tanh(((((x[:,4])**(2)) * ((x[:,3])**(-1))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((3.849881505834046) * (np.log(((x[:,4])**(-2)) * ((x[:,0])**(-2))))) + (((-0.8537522374278512) * (np.cos((x[:,2])**(-1)))) + (((8.562175834714059e-2) * (np.sqrt((x[:,3])**(2)))) + (((2.898572997557226) * (np.log(((x[:,4])**(1)) * ((x[:,2])**(-2))))) + (((-5912.966251315134) * (np.sqrt(((((x[:,4])**(3)) * ((x[:,3])**(-1))) * ((x[:,1])**(2))) * ((x[:,0])**(-1))))) + (((0.517198784137934) * (np.cos((x[:,0])**(1)))) + (((0.12342152507743087) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,3])**(-3))) * ((x[:,2])**(1))))) + (((-2.1225270663545084) * (np.tanh((((x[:,3])**(-3)) * ((x[:,2])**(-3))) * ((x[:,1])**(2))))) + (((-3.849255727991273e-12) * (np.sqrt((((x[:,4])**(-3)) * ((x[:,2])**(-1))) * ((x[:,0])**(3))))) + ((-3.672370499224554) * (np.sqrt(((((x[:,4])**(-3)) * ((x[:,3])**(-1))) * ((x[:,2])**(1))) * ((x[:,0])**(-2)))))))))))))))))) / ((1.0) + (((1.3072545000037734e-6) * (np.sqrt(((x[:,3])**(-2)) * ((x[:,0])**(3))))) + ((2.3429145908263047e-5) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(2))) * ((x[:,2])**(-3))) * ((x[:,1])**(2))) * ((x[:,0])**(-2))))))))"
"Id(((130.83080258899935) + (((-6.36274108868043) * (Log((((x3)^(-1)) * ((x2)^(1))) * ((x0)^(1))))) + (((-217.6601865088325) * (Sqrt(((x4)^(-2)) * ((x0)^(-3))))) + (((30.635051452258256) * (Tanh((((x4)^(-2)) * ((x1)^(2))) * ((x0)^(-3))))) + (((-1.7838367679614469) * (Sqrt((((x2)^(-2)) * ((x1)^(1))) * ((x0)^(-1))))) + (((-7.691656929839244) * (Tanh(((((x4)^(-1)) * ((x3)^(1))) * ((x2)^(-3))) * ((x0)^(-3))))) + (((2.9349861740879226) * (Id(((x3)^(-3)) * ((x2)^(-3))))) + (((6.039252135228631) * (Tanh((((x4)^(3)) * ((x3)^(-1))) * ((x0)^(3))))) + (((4.694125458204667) * (Tanh((((x3)^(-2)) * ((x2)^(3))) * ((x0)^(3))))) + (((0.6758672178308952) * (Cos((x1)^(3)))) + (((1.9198125603863067e-3) * (Id((x1)^(3)))) + (((-0.28826987507754964) * (Sqrt((x1)^(3)))) + (((-3.9320587816402564e-4) * (Sqrt((x0)^(2)))) + ((-2336.200756290278) * (Tanh((x4)^(2))))))))))))))))) / ((1.0) + ((-3.0357385569840023e-2) * (Tanh((((x4)^(-2)) * ((x2)^(-2))) * ((x0)^(-2)))))))","[[130.83080258899935,-6.36274108868043,-217.6601865088325,30.635051452258256,-1.7838367679614469,-7.691656929839244,2.9349861740879226,6.039252135228631,4.694125458204667,0.6758672178308952,1.9198125603863067e-3,-0.28826987507754964,-3.9320587816402564e-4,-2336.200756290278,-3.0357385569840023e-2]]","(((130.83080258899935) + (((-6.36274108868043) * (np.log((((x[:,3])**(-1)) * ((x[:,2])**(1))) * ((x[:,0])**(1))))) + (((-217.6601865088325) * (np.sqrt(((x[:,4])**(-2)) * ((x[:,0])**(-3))))) + (((30.635051452258256) * (np.tanh((((x[:,4])**(-2)) * ((x[:,1])**(2))) * ((x[:,0])**(-3))))) + (((-1.7838367679614469) * (np.sqrt((((x[:,2])**(-2)) * ((x[:,1])**(1))) * ((x[:,0])**(-1))))) + (((-7.691656929839244) * (np.tanh(((((x[:,4])**(-1)) * ((x[:,3])**(1))) * ((x[:,2])**(-3))) * ((x[:,0])**(-3))))) + (((2.9349861740879226) * ((((x[:,3])**(-3)) * ((x[:,2])**(-3))))) + (((6.039252135228631) * (np.tanh((((x[:,4])**(3)) * ((x[:,3])**(-1))) * ((x[:,0])**(3))))) + (((4.694125458204667) * (np.tanh((((x[:,3])**(-2)) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((0.6758672178308952) * (np.cos((x[:,1])**(3)))) + (((1.9198125603863067e-3) * (((x[:,1])**(3)))) + (((-0.28826987507754964) * (np.sqrt((x[:,1])**(3)))) + (((-3.9320587816402564e-4) * (np.sqrt((x[:,0])**(2)))) + ((-2336.200756290278) * (np.tanh((x[:,4])**(2))))))))))))))))) / ((1.0) + ((-3.0357385569840023e-2) * (np.tanh((((x[:,4])**(-2)) * ((x[:,2])**(-2))) * ((x[:,0])**(-2)))))))"
"Id(((138.47398985480692) + (((-8.227087592146032e-2) * (Sqrt((x0)^(1)))) + (((0.7297244571347093) * (Sqrt((((((x4)^(-1)) * ((x3)^(3))) * ((x2)^(1))) * ((x1)^(3))) * ((x0)^(-3))))) + (((-5.012086427466358) * (Tanh(((((x4)^(-2)) * ((x3)^(1))) * ((x2)^(2))) * ((x0)^(-2))))) + (((-19.213619907973403) * (Tanh(((((x4)^(-1)) * ((x3)^(1))) * ((x2)^(-1))) * ((x0)^(-2))))) + (((-3.5592947191893654e-3) * (Sqrt((((((x4)^(-1)) * ((x3)^(2))) * ((x2)^(-2))) * ((x1)^(3))) * ((x0)^(-2))))) + (((-17328.352418537313) * (Sqrt(((x4)^(3)) * ((x0)^(-1))))) + (((-2.57103927239368) * (Tanh(((((x4)^(1)) * ((x3)^(-3))) * ((x2)^(3))) * ((x0)^(3))))) + (((-2.183596760487562) * (Log(((((x4)^(1)) * ((x3)^(-1))) * ((x2)^(2))) * ((x0)^(3))))) + (((2.283537605312455e-3) * (Sqrt(((x4)^(-3)) * ((x0)^(-1))))) + (((0.9962034094354584) * (Log(((x4)^(-2)) * ((x3)^(2))))) + ((-13.34947934279786) * (Tanh(((x4)^(-1)) * ((x0)^(-1)))))))))))))))) / ((1.0) + ((3.766886422883653e-2) * (Sqrt(((x3)^(-1)) * ((x1)^(1)))))))","[[138.47398985480692,-8.227087592146032e-2,0.7297244571347093,-5.012086427466358,-19.213619907973403,-3.5592947191893654e-3,-17328.352418537313,-2.57103927239368,-2.183596760487562,2.283537605312455e-3,0.9962034094354584,-13.34947934279786,3.766886422883653e-2]]","(((138.47398985480692) + (((-8.227087592146032e-2) * (np.sqrt((x[:,0])**(1)))) + (((0.7297244571347093) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(3))) * ((x[:,2])**(1))) * ((x[:,1])**(3))) * ((x[:,0])**(-3))))) + (((-5.012086427466358) * (np.tanh(((((x[:,4])**(-2)) * ((x[:,3])**(1))) * ((x[:,2])**(2))) * ((x[:,0])**(-2))))) + (((-19.213619907973403) * (np.tanh(((((x[:,4])**(-1)) * ((x[:,3])**(1))) * ((x[:,2])**(-1))) * ((x[:,0])**(-2))))) + (((-3.5592947191893654e-3) * (np.sqrt((((((x[:,4])**(-1)) * ((x[:,3])**(2))) * ((x[:,2])**(-2))) * ((x[:,1])**(3))) * ((x[:,0])**(-2))))) + (((-17328.352418537313) * (np.sqrt(((x[:,4])**(3)) * ((x[:,0])**(-1))))) + (((-2.57103927239368) * (np.tanh(((((x[:,4])**(1)) * ((x[:,3])**(-3))) * ((x[:,2])**(3))) * ((x[:,0])**(3))))) + (((-2.183596760487562) * (np.log(((((x[:,4])**(1)) * ((x[:,3])**(-1))) * ((x[:,2])**(2))) * ((x[:,0])**(3))))) + (((2.283537605312455e-3) * (np.sqrt(((x[:,4])**(-3)) * ((x[:,0])**(-1))))) + (((0.9962034094354584) * (np.log(((x[:,4])**(-2)) * ((x[:,3])**(2))))) + ((-13.34947934279786) * (np.tanh(((x[:,4])**(-1)) * ((x[:,0])**(-1)))))))))))))))) / ((1.0) + ((3.766886422883653e-2) * (np.sqrt(((x[:,3])**(-1)) * ((x[:,1])**(1)))))))"
"Id((0.7143767635014081) + (((1.2533088026211183) * (Sin(((x4)^(1)) * ((x0)^(2))))) + (((-2.149952279271617) * (Tanh((x0)^(1)))) + (((-0.5018158380813522) * (Cos((x0)^(2)))) + (((-0.736227297098125) * (Sin((x1)^(2)))) + ((0.47482959933368246) * (Id((x0)^(3)))))))))","[[0.7143767635014081,1.2533088026211183,-2.149952279271617,-0.5018158380813522,-0.736227297098125,0.47482959933368246]]","((0.7143767635014081) + (((1.2533088026211183) * (np.sin(((x[:,4])**(1)) * ((x[:,0])**(2))))) + (((-2.149952279271617) * (np.tanh((x[:,0])**(1)))) + (((-0.5018158380813522) * (np.cos((x[:,0])**(2)))) + (((-0.736227297098125) * (np.sin((x[:,1])**(2)))) + ((0.47482959933368246) * (((x[:,0])**(3)))))))))"
