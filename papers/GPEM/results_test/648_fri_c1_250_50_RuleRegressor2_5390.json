{
    "dataset": "648_fri_c1_250_50",
    "algorithm": "RuleRegressor2",
    "params": {
        "Cs": null,
        "cv": 3,
        "exp_rand_tree_size": true,
        "lin_standardise": true,
        "lin_trim_quantile": 0.025,
        "max_iter": 1000,
        "max_rules": 500,
        "memory_par": 0.01,
        "model_type": "rl",
        "n_jobs": null,
        "random_state": 5390,
        "rfmode": "regress",
        "sample_fract": "default",
        "tol": 0.0001,
        "tree_generator__alpha": 0.9,
        "tree_generator__ccp_alpha": 0.0,
        "tree_generator__criterion": "friedman_mse",
        "tree_generator__init": null,
        "tree_generator__learning_rate": 0.01,
        "tree_generator__loss": "squared_error",
        "tree_generator__max_depth": 100,
        "tree_generator__max_features": null,
        "tree_generator__max_leaf_nodes": 4,
        "tree_generator__min_impurity_decrease": 0.0,
        "tree_generator__min_samples_leaf": 1,
        "tree_generator__min_samples_split": 2,
        "tree_generator__min_weight_fraction_leaf": 0.0,
        "tree_generator__n_estimators": 139,
        "tree_generator__n_iter_no_change": null,
        "tree_generator__random_state": 5528,
        "tree_generator__subsample": 0.5,
        "tree_generator__tol": 0.0001,
        "tree_generator__validation_fraction": 0.1,
        "tree_generator__verbose": 0,
        "tree_generator__warm_start": false,
        "tree_generator": "GradientBoostingRegressor(learning_rate=0.01, max_depth=100, max_leaf_nodes=4,\n                          n_estimators=139, random_state=5528, subsample=0.5)",
        "tree_size": 4
    },
    "random_state": 5390,
    "process_time": 11.509865714,
    "time_time": 11.509918212890625,
    "target_noise": 0.0,
    "feature_noise": 0.0,
    "model_size": 29,
    "symbolic_model": "(0.014 + (1.000 * ((((-0.840) * (feature_1 > 0.1659514158964157 & feature_0 <= 1.0746757984161377)) + ((-0.473) * (feature_1 <= 1.1770557761192322 & feature_0 > 0.17701903730630875)) + (0.897 * X4)) + ((0.515 * X5) + (0.365 * (feature_1 > -1.4259984493255615 & feature_0 <= 0.30254800617694855))) + (0.460 * (feature_1 <= 0.48851071298122406 & feature_1 > -1.1788203716278076)) + (0.964 * (feature_3 <= 1.1222481727600098 & feature_0 > 1.5194684863090515)))))",
    "mse_train": 0.09617190896000698,
    "mae_train": 0.2450636911049067,
    "r2_train": 0.9057110936202205,
    "mse_test": 0.1791429465839717,
    "mae_test": 0.30714393580066307,
    "r2_test": 0.8021109729196627
}