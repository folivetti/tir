{
    "dataset": "207_autoPrice",
    "algorithm": "TiredRegressor",
    "params": {
        "error": "R^2",
        "exponents": "(-5, 5)",
        "ngens": 2000,
        "npop": 250,
        "pc": 0.5,
        "pm": 0.8,
        "random_state": 11284,
        "transfunctions": "Id,Tanh,Sin,Cos,Log,Exp,SqrtAbs",
        "ytransfunctions": "Id,Sqrt,Exp,Log"
    },
    "random_state": 11284,
    "process_time": 0.46784120400000084,
    "time_time": 1368.2323577404022,
    "target_noise": 0.0,
    "feature_noise": 0.0,
    "model_size": 75,
    "symbolic_model": "np.exp(((4.549614366773329) + (((1.6701343270384488) * (sqrtAbs(((x[:,13])**3) * ((x[:,7])**-2) * ((x[:,4])**-5) * ((x[:,3])**3) * ((x[:,6])**1) * ((x[:,1])**1) * ((x[:,5])**-3)))) + ((2.7167519879886706e-2) * (np.sin(((x[:,7])**4) * ((x[:,8])**-4) * ((x[:,1])**4)))) + ((3.920314634854814) * (sqrtAbs(((x[:,10])**1) * ((x[:,13])**-1)))) + ((4.332810459124144e-2) * (np.sin(((x[:,9])**-3) * ((x[:,2])**5) * ((x[:,7])**5)))))) / (1 + (((-6.5523730227048495e-3) * (np.cos(((x[:,4])**1) * ((x[:,10])**0) * ((x[:,2])**4)))) + ((-9.342481336460233e-3) * (np.log(((x[:,7])**6) * ((x[:,2])**6) * ((x[:,9])**-4) * ((x[:,10])**-12)))))))",
    "mse_train": 3600348.4924671915,
    "mae_train": 1310.289037410506,
    "r2_train": 0.8909119046011151,
    "mse_test": 5493084.035160321,
    "mae_test": 1516.2375445171858,
    "r2_test": 0.8563449289296498
}