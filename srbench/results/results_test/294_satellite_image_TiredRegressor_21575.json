{
    "dataset": "294_satellite_image",
    "algorithm": "TiredRegressor",
    "params": {
        "error": "R^2",
        "exponents": "(-1, 1)",
        "ngens": 2000,
        "npop": 250,
        "pc": 0.5,
        "pm": 0.8,
        "random_state": 21575,
        "transfunctions": "Id,Tanh,Sin,Cos,Log,Exp,SqrtAbs",
        "ytransfunctions": "Id,Sqrt,Exp,Log"
    },
    "random_state": 21575,
    "process_time": 2.1058678079999997,
    "time_time": 15213.074615240097,
    "target_noise": 0.0,
    "feature_noise": 0.0,
    "model_size": 235,
    "symbolic_model": "(((-24731.75715269763) + (((-4.221639970075665e-6) * (sqrtAbs(((x[:,11])**1) * ((x[:,28])**1) * ((x[:,21])**1) * ((x[:,33])**1) * ((x[:,29])**1) * ((x[:,32])**1)))) + ((3.1971796917124357e-10) * ((((x[:,14])**2) * ((x[:,30])**1) * ((x[:,29])**1) * ((x[:,23])**1)))) + ((2.8937096490115084) * (np.log(((x[:,31])**-1) * ((x[:,29])**0)))) + ((-3414.284308017146) * (np.tanh(((x[:,35])**-1) * ((x[:,22])**-1) * ((x[:,0])**2) * ((x[:,29])**-1) * ((x[:,13])**-1)))) + ((-1.5771329775651426) * (np.cos(((x[:,5])**2) * ((x[:,12])**0) * ((x[:,26])**-1) * ((x[:,29])**2) * ((x[:,19])**-1) * ((x[:,9])**1) * ((x[:,23])**1) * ((x[:,34])**-2) * ((x[:,2])**-2)))) + ((66.50838567969134) * (np.tanh(((x[:,33])**2) * ((x[:,14])**-2) * ((x[:,17])**-1) * ((x[:,35])**1) * ((x[:,3])**-1) * ((x[:,2])**-1) * ((x[:,24])**1)))) + ((1.6860684015641136) * (np.cos(((x[:,32])**-1) * ((x[:,22])**1) * ((x[:,29])**1) * ((x[:,12])**-1)))) + ((-4.3387386194353034e-2) * (np.exp(((x[:,31])**0) * ((x[:,11])**-2) * ((x[:,10])**0) * ((x[:,35])**1) * ((x[:,4])**-1) * ((x[:,22])**1) * ((x[:,5])**1)))) + ((-1.0755874423315726) * (np.cos(((x[:,14])**1) * ((x[:,23])**-1) * ((x[:,12])**2) * ((x[:,3])**1) * ((x[:,10])**-1) * ((x[:,19])**-1) * ((x[:,30])**-1)))) + ((-35.08259715853571) * (sqrtAbs(((x[:,28])**-1) * ((x[:,8])**-1) * ((x[:,17])**1)))) + ((-2.0569038555638812) * (np.log(((x[:,30])**2) * ((x[:,12])**-2) * ((x[:,10])**0) * ((x[:,0])**-1) * ((x[:,27])**1)))) + ((-42.659630493940405) * (sqrtAbs(((x[:,31])**-1)))) + ((-181147.2340204275) * (np.sin(((x[:,14])**-1) * ((x[:,12])**-1)))) + ((-1.848959290589086e-2) * ((((x[:,5])**1) * ((x[:,4])**0) * ((x[:,25])**1) * ((x[:,27])**-1) * ((x[:,26])**-1) * ((x[:,23])**1)))) + ((24723.988716878077) * (np.cos(((x[:,17])**-1) * ((x[:,12])**1) * ((x[:,30])**-1)))) + ((0.6486036375599791) * (np.sin(((x[:,20])**-1) * ((x[:,28])**-1) * ((x[:,31])**-1) * ((x[:,29])**2) * ((x[:,10])**1) * ((x[:,4])**-1) * ((x[:,6])**1)))) + ((5491.329586493157) * (sqrtAbs(((x[:,14])**-1) * ((x[:,12])**-1)))))))",
    "mse_train": 0.8406795461415038,
    "mae_train": 0.6728223046183063,
    "r2_train": 0.8294701702837938,
    "mse_test": 0.858354929471983,
    "mae_test": 0.672215617391103,
    "r2_test": 0.8216383894354244
}