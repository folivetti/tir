{
    "dataset": "294_satellite_image",
    "algorithm": "TiredRegressor",
    "params": {
        "error": "R^2",
        "exponents": "(-5, 5)",
        "ngens": 2000,
        "npop": 250,
        "pc": 0.5,
        "pm": 0.8,
        "random_state": 860,
        "transfunctions": "Id,Tanh,Sin,Cos,Log,Exp,SqrtAbs",
        "ytransfunctions": "Id,Sqrt,Exp,Log"
    },
    "random_state": 860,
    "process_time": 2.01352746,
    "time_time": 17864.659534692764,
    "target_noise": 0.0,
    "feature_noise": 0.0,
    "model_size": 303,
    "symbolic_model": "(((1.2859632256525735) + (((-0.18444976062111176) * (np.log(((x[:,11])**-2) * ((x[:,22])**5) * ((x[:,5])**-2) * ((x[:,31])**-2) * ((x[:,33])**-5) * ((x[:,4])**-5) * ((x[:,17])**4) * ((x[:,28])**-4) * ((x[:,9])**3) * ((x[:,13])**1) * ((x[:,21])**2) * ((x[:,24])**2) * ((x[:,2])**2) * ((x[:,10])**3)))) + ((6.596267046674054) * (sqrtAbs(((x[:,34])**-2) * ((x[:,33])**-7) * ((x[:,31])**4) * ((x[:,11])**1) * ((x[:,3])**2) * ((x[:,18])**-1) * ((x[:,4])**-5) * ((x[:,13])**1) * ((x[:,8])**5) * ((x[:,5])**-3) * ((x[:,15])**-1) * ((x[:,21])**-5) * ((x[:,19])**3) * ((x[:,12])**5) * ((x[:,29])**-5) * ((x[:,27])**2)))) + ((5540.720573269853) * (np.sin(((x[:,7])**-2) * ((x[:,0])**0)))) + ((-809.3558394063426) * (np.sin(((x[:,29])**2) * ((x[:,23])**-4) * ((x[:,27])**2) * ((x[:,12])**-2)))) + ((-4.252586375209777e8) * (np.tanh(((x[:,31])**-3) * ((x[:,5])**2) * ((x[:,11])**1) * ((x[:,8])**-1) * ((x[:,4])**-4) * ((x[:,12])**0)))) + ((-7.922142893242103e-6) * (sqrtAbs(((x[:,12])**4) * ((x[:,25])**5) * ((x[:,5])**-5) * ((x[:,30])**-2) * ((x[:,15])**0) * ((x[:,29])**5) * ((x[:,0])**3) * ((x[:,11])**-4) * ((x[:,6])**4) * ((x[:,13])**-5)))) + ((0.18252930788088859) * (np.log(((x[:,5])**-5) * ((x[:,32])**-3) * ((x[:,12])**7) * ((x[:,7])**11) * ((x[:,23])**-8) * ((x[:,17])**0) * ((x[:,31])**-4) * ((x[:,8])**11)))) + ((-1.878686466539033) * (np.tanh(((x[:,12])**2) * ((x[:,34])**-5) * ((x[:,7])**-3) * ((x[:,33])**7) * ((x[:,15])**-4) * ((x[:,18])**-5) * ((x[:,5])**4) * ((x[:,24])**5)))) + ((-1.3242042071788924e9) * (sqrtAbs(((x[:,13])**-4) * ((x[:,31])**-1) * ((x[:,7])**-5) * ((x[:,5])**-7) * ((x[:,4])**5) * ((x[:,22])**-3) * ((x[:,32])**5)))) + ((247.68400583983814) * (sqrtAbs(((x[:,5])**0) * ((x[:,7])**-2) * ((x[:,26])**-2) * ((x[:,29])**1) * ((x[:,2])**-4) * ((x[:,32])**5)))) + ((3.5107736524094886) * (np.tanh(((x[:,11])**-2) * ((x[:,34])**-1) * ((x[:,32])**5) * ((x[:,22])**3) * ((x[:,23])**-1) * ((x[:,19])**-3) * ((x[:,15])**-2) * ((x[:,4])**1)))) + ((0.32189578689418186) * (np.log(((x[:,24])**7) * ((x[:,31])**-3) * ((x[:,22])**-7) * ((x[:,1])**0) * ((x[:,34])**-4) * ((x[:,17])**2) * ((x[:,20])**4) * ((x[:,11])**-2) * ((x[:,27])**2)))) + ((3.7612829209368466e-6) * (sqrtAbs(((x[:,23])**-3) * ((x[:,22])**10) * ((x[:,12])**-1) * ((x[:,8])**-2) * ((x[:,5])**1)))) + ((1.3997214669642506) * (np.tanh(((x[:,2])**2) * ((x[:,34])**-5) * ((x[:,5])**-2) * ((x[:,20])**-1) * ((x[:,7])**5) * ((x[:,16])**5) * ((x[:,17])**-4)))) + ((-5.228399095063351e-5) * (sqrtAbs(((x[:,23])**-2) * ((x[:,34])**-1) * ((x[:,32])**5) * ((x[:,22])**3) * ((x[:,31])**-1) * ((x[:,13])**2) * ((x[:,2])**-2) * ((x[:,4])**1)))))))",
    "mse_train": 0.8315722980636285,
    "mae_train": 0.6830115140327043,
    "r2_train": 0.8311588439434474,
    "mse_test": 0.8846637685439869,
    "mae_test": 0.7096933963470061,
    "r2_test": 0.8168052061567495
}