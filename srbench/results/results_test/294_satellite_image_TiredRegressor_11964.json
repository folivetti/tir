{
    "dataset": "294_satellite_image",
    "algorithm": "TiredRegressor",
    "params": {
        "error": "R^2",
        "exponents": "(-1, 1)",
        "ngens": 2000,
        "npop": 250,
        "pc": 0.5,
        "pm": 0.8,
        "random_state": 11964,
        "transfunctions": "Id,Tanh,Sin,Cos,Log,Exp,SqrtAbs",
        "ytransfunctions": "Id,Sqrt,Exp,Log"
    },
    "random_state": 11964,
    "process_time": 1.954737147,
    "time_time": 16376.60435628891,
    "target_noise": 0.0,
    "feature_noise": 0.0,
    "model_size": 311,
    "symbolic_model": "(((-3.8044765604760274e7) + (((-3.8067484445733935e7) * (np.sin(((x[:,4])**-1) * ((x[:,0])**-1)))) + ((4.1768652653301634) * (np.tanh(((x[:,9])**-1) * ((x[:,10])**2) * ((x[:,21])**-2) * ((x[:,17])**-1) * ((x[:,26])**1) * ((x[:,32])**2) * ((x[:,3])**-1) * ((x[:,28])**1) * ((x[:,15])**-1) * ((x[:,0])**1) * ((x[:,29])**-1)))) + ((18411.231964148414) * (sqrtAbs(((x[:,29])**-1) * ((x[:,5])**1) * ((x[:,24])**1) * ((x[:,10])**-1) * ((x[:,32])**1) * ((x[:,14])**-1) * ((x[:,8])**1) * ((x[:,4])**1) * ((x[:,26])**-2) * ((x[:,11])**-1) * ((x[:,13])**-1) * ((x[:,2])**-1) * ((x[:,25])**1) * ((x[:,15])**1) * ((x[:,30])**-1) * ((x[:,1])**-1)))) + ((2.4356057762468604) * (np.sin(((x[:,22])**-1) * ((x[:,2])**1) * ((x[:,28])**1) * ((x[:,25])**0) * ((x[:,21])**1) * ((x[:,10])**-2) * ((x[:,14])**0)))) + ((-0.2967411093700599) * (np.sin(((x[:,24])**-2) * ((x[:,31])**1) * ((x[:,14])**1) * ((x[:,18])**1) * ((x[:,33])**-1)))) + ((-3831875.403683508) * ((((x[:,10])**-1) * ((x[:,26])**-2) * ((x[:,24])**1) * ((x[:,4])**1) * ((x[:,32])**1) * ((x[:,14])**-1) * ((x[:,8])**1) * ((x[:,5])**1) * ((x[:,11])**-1) * ((x[:,13])**-1) * ((x[:,2])**-1) * ((x[:,25])**1) * ((x[:,15])**1) * ((x[:,30])**-1) * ((x[:,29])**-1) * ((x[:,1])**-1)))) + ((-2.027452656466473e7) * ((((x[:,29])**-1) * ((x[:,12])**-1) * ((x[:,3])**-1) * ((x[:,5])**1) * ((x[:,32])**-1) * ((x[:,10])**-1)))) + ((-2.2098191262924732e-4) * ((((x[:,24])**1) * ((x[:,18])**1) * ((x[:,7])**0) * ((x[:,28])**2) * ((x[:,23])**-1) * ((x[:,4])**1) * ((x[:,26])**0) * ((x[:,5])**1) * ((x[:,11])**-1) * ((x[:,29])**-2) * ((x[:,13])**-1) * ((x[:,2])**0) * ((x[:,25])**1) * ((x[:,3])**-1) * ((x[:,32])**1)))) + ((3.804570880889244e7) * (np.exp(((x[:,4])**-1) * ((x[:,0])**-1)))) + ((-947.8118693533306) * (np.exp(((x[:,21])**-2) * ((x[:,31])**-1) * ((x[:,28])**-1) * ((x[:,26])**1) * ((x[:,29])**1)))) + ((-1.9799469860249204) * (np.log(((x[:,13])**-1) * ((x[:,32])**2) * ((x[:,24])**1) * ((x[:,14])**-1) * ((x[:,4])**2) * ((x[:,10])**-1) * ((x[:,26])**-2) * ((x[:,5])**1) * ((x[:,11])**-1) * ((x[:,2])**-1) * ((x[:,25])**1) * ((x[:,15])**1) * ((x[:,30])**-1) * ((x[:,29])**-1) * ((x[:,1])**-1)))) + ((-4315.3375922977475) * ((((x[:,0])**-2)))) + ((-4.786523095111743) * (np.log(((x[:,0])**1)))) + ((-7.8452831966447525e9) * (np.tanh(((x[:,10])**-1) * ((x[:,32])**1) * ((x[:,1])**-1) * ((x[:,17])**-1) * ((x[:,25])**1) * ((x[:,14])**-1) * ((x[:,8])**1) * ((x[:,4])**2) * ((x[:,26])**-2) * ((x[:,11])**-1) * ((x[:,13])**-1) * ((x[:,2])**-1) * ((x[:,15])**1) * ((x[:,30])**-1) * ((x[:,29])**-1)))) + ((6740.67262147598) * (np.sin(((x[:,27])**0) * ((x[:,3])**-1) * ((x[:,28])**1) * ((x[:,25])**-1) * ((x[:,11])**-1)))))))",
    "mse_train": 0.842271397649861,
    "mae_train": 0.6700765569576622,
    "r2_train": 0.8274730132738088,
    "mse_test": 0.8488681182716081,
    "mae_test": 0.6684564352869025,
    "r2_test": 0.8287758980191184
}