{
    "dataset": "294_satellite_image",
    "algorithm": "TiredRegressor",
    "params": {
        "error": "R^2",
        "exponents": "(-1, 1)",
        "ngens": 2000,
        "npop": 250,
        "pc": 0.5,
        "pm": 0.8,
        "random_state": 6265,
        "transfunctions": "Id,Tanh,Sin,Cos,Log,Exp,SqrtAbs",
        "ytransfunctions": "Id,Sqrt,Exp,Log"
    },
    "random_state": 6265,
    "process_time": 2.0663541699999994,
    "time_time": 15996.672782182693,
    "target_noise": 0.0,
    "feature_noise": 0.0,
    "model_size": 253,
    "symbolic_model": "(((1.158431358183562e11) + (((-4.203575992097216e7) * (np.cos(((x[:,26])**-2) * ((x[:,16])**1) * ((x[:,31])**1) * ((x[:,23])**-1) * ((x[:,0])**-1)))) + ((-0.31360528060720594) * (sqrtAbs(((x[:,30])**-1) * ((x[:,17])**1) * ((x[:,29])**1)))) + ((-1.1081962175748393e7) * (np.exp(((x[:,23])**-1) * ((x[:,2])**-1) * ((x[:,10])**1) * ((x[:,20])**-1) * ((x[:,0])**-1) * ((x[:,4])**-1)))) + ((-16.825044288066632) * ((((x[:,14])**0) * ((x[:,33])**-2) * ((x[:,15])**-1) * ((x[:,26])**2) * ((x[:,16])**0) * ((x[:,4])**1) * ((x[:,11])**-1) * ((x[:,7])**0)))) + ((-2.091389896572754e11) * (np.sin(((x[:,14])**-2) * ((x[:,0])**-2) * ((x[:,30])**-1) * ((x[:,22])**-1) * ((x[:,5])**1) * ((x[:,25])**1) * ((x[:,29])**1) * ((x[:,8])**-1) * ((x[:,24])**-1) * ((x[:,12])**-1)))) + ((3858.328894505847) * (np.cos(((x[:,23])**-1) * ((x[:,16])**-1) * ((x[:,14])**1)))) + ((-2.5586686434116546) * (sqrtAbs(((x[:,28])**1) * ((x[:,10])**-1) * ((x[:,25])**1) * ((x[:,18])**1) * ((x[:,23])**1) * ((x[:,19])**1) * ((x[:,21])**-1) * ((x[:,0])**0) * ((x[:,15])**-1) * ((x[:,8])**-1) * ((x[:,27])**1) * ((x[:,26])**-1) * ((x[:,22])**-1)))) + ((1.269677800088895) * (np.log(((x[:,5])**1) * ((x[:,33])**-2) * ((x[:,21])**-1) * ((x[:,14])**1) * ((x[:,0])**-1) * ((x[:,32])**1) * ((x[:,17])**-1) * ((x[:,25])**1) * ((x[:,11])**-1)))) + ((27585.662878103005) * (np.sin(((x[:,14])**-2)))) + ((-0.9593132237060574) * (np.log(((x[:,30])**-1) * ((x[:,14])**-1) * ((x[:,10])**1) * ((x[:,9])**1) * ((x[:,22])**0) * ((x[:,23])**1)))) + ((-1.1579002209420155e11) * (np.exp(((x[:,14])**-2) * ((x[:,17])**-3) * ((x[:,11])**-1) * ((x[:,23])**-1) * ((x[:,16])**1) * ((x[:,25])**-1) * ((x[:,13])**1) * ((x[:,8])**1) * ((x[:,22])**-1)))) + ((3901.6535467259096) * (sqrtAbs(((x[:,16])**0) * ((x[:,2])**-1) * ((x[:,22])**-1) * ((x[:,23])**-1) * ((x[:,33])**1) * ((x[:,30])**-1)))) + ((-2.323616578420394e8) * (sqrtAbs(((x[:,29])**-1) * ((x[:,25])**-1) * ((x[:,14])**-4) * ((x[:,0])**-1) * ((x[:,27])**-1) * ((x[:,9])**-1)))) + ((0.7025961426774582) * (np.log(((x[:,20])**0) * ((x[:,18])**1) * ((x[:,16])**0) * ((x[:,23])**2) * ((x[:,28])**3) * ((x[:,34])**-2) * ((x[:,0])**-1)))) + ((148.10443315130624) * (np.exp(((x[:,15])**-1)))))))",
    "mse_train": 0.8975496888052636,
    "mae_train": 0.7102662271056193,
    "r2_train": 0.8176092847592868,
    "mse_test": 0.9775303190198106,
    "mae_test": 0.7504471896819405,
    "r2_test": 0.7981076850231588
}