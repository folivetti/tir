{
    "dataset": "294_satellite_image",
    "algorithm": "TiredRegressor",
    "params": {
        "error": "R^2",
        "exponents": "(-1, 1)",
        "ngens": 2000,
        "npop": 250,
        "pc": 0.5,
        "pm": 0.8,
        "random_state": 11284,
        "transfunctions": "Id,Tanh,Sin,Cos,Log,Exp,SqrtAbs",
        "ytransfunctions": "Id,Sqrt,Exp,Log"
    },
    "random_state": 11284,
    "process_time": 2.0249488290000004,
    "time_time": 14721.20981502533,
    "target_noise": 0.0,
    "feature_noise": 0.0,
    "model_size": 279,
    "symbolic_model": "(((-1.753392276366441e7) + (((-1.0575184894823726e7) * (np.sin(((x[:,23])**-1) * ((x[:,28])**-1) * ((x[:,0])**1) * ((x[:,12])**-2) * ((x[:,30])**-1) * ((x[:,27])**-1) * ((x[:,10])**-1) * ((x[:,6])**1) * ((x[:,19])**1)))) + ((3647.038127018518) * ((((x[:,23])**-1) * ((x[:,25])**-1) * ((x[:,0])**1) * ((x[:,21])**-1) * ((x[:,30])**-1) * ((x[:,12])**1) * ((x[:,27])**-1) * ((x[:,10])**-1) * ((x[:,6])**1) * ((x[:,19])**1)))) + ((-84.6477405338672) * (np.tanh(((x[:,24])**-1)))) + ((-189.4747301534366) * (sqrtAbs(((x[:,4])**-1) * ((x[:,15])**-1) * ((x[:,12])**0) * ((x[:,7])**-1) * ((x[:,9])**1) * ((x[:,20])**1) * ((x[:,35])**1) * ((x[:,8])**-2)))) + ((-5.171017494037129e-4) * ((((x[:,8])**2) * ((x[:,34])**1) * ((x[:,30])**-1) * ((x[:,11])**1) * ((x[:,12])**1) * ((x[:,27])**-1) * ((x[:,9])**-1) * ((x[:,7])**-1) * ((x[:,28])**1)))) + ((1.7615799222038493e7) * (np.cos(((x[:,1])**1) * ((x[:,20])**-1) * ((x[:,6])**-1) * ((x[:,28])**-1)))) + ((89792.83598506161) * ((((x[:,14])**-1) * ((x[:,8])**1) * ((x[:,26])**-1) * ((x[:,7])**-1) * ((x[:,20])**1) * ((x[:,28])**1) * ((x[:,30])**-1)))) + ((-88307.56166238248) * (np.exp(((x[:,14])**-1) * ((x[:,8])**1) * ((x[:,26])**-1) * ((x[:,7])**-1) * ((x[:,20])**1) * ((x[:,28])**1) * ((x[:,30])**-1)))) + ((-1.1531883241473308e9) * ((((x[:,28])**1) * ((x[:,9])**-1) * ((x[:,19])**-2) * ((x[:,12])**0) * ((x[:,17])**-1) * ((x[:,26])**-2) * ((x[:,32])**1) * ((x[:,34])**-1)))) + ((6456.944150217036) * (np.exp(((x[:,14])**-2) * ((x[:,32])**1) * ((x[:,19])**-1) * ((x[:,29])**1) * ((x[:,27])**-2) * ((x[:,30])**1) * ((x[:,23])**1) * ((x[:,7])**-1)))) + ((-60.17198100648049) * (np.tanh(((x[:,28])**1) * ((x[:,11])**-1) * ((x[:,35])**-2) * ((x[:,21])**1) * ((x[:,12])**-1) * ((x[:,2])**1)))) + ((-5.534838035020273) * (np.tanh(((x[:,26])**0) * ((x[:,30])**-1) * ((x[:,23])**1) * ((x[:,17])**1) * ((x[:,14])**-3) * ((x[:,12])**1) * ((x[:,20])**0) * ((x[:,9])**1)))) + ((-1.1988406457019968e11) * (np.sin(((x[:,30])**-2) * ((x[:,27])**-1) * ((x[:,14])**-1) * ((x[:,10])**-1) * ((x[:,34])**1) * ((x[:,1])**-1) * ((x[:,17])**-1)))) + ((-4.5215559267681895) * (np.sin(((x[:,12])**-1) * ((x[:,4])**1) * ((x[:,26])**-1) * ((x[:,7])**-1) * ((x[:,20])**1) * ((x[:,29])**1) * ((x[:,14])**0)))) + ((0.861552463331432) * (np.log(((x[:,14])**-1) * ((x[:,15])**-2) * ((x[:,4])**1) * ((x[:,6])**-1) * ((x[:,17])**1) * ((x[:,10])**-1) * ((x[:,30])**-1)))))))",
    "mse_train": 0.9177372640668539,
    "mae_train": 0.7127949846171265,
    "r2_train": 0.8138094562427076,
    "mse_test": 0.8379571708847354,
    "mae_test": 0.6972480703369848,
    "r2_test": 0.8260300044445578
}